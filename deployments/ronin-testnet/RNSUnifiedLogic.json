{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CannotSetImmutableField",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExceedParentExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpiryTimeMustBeLargerThanTheOldOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingControllerRole",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingProtectedSettlerRole",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameMustBeRegisteredOrInGracePeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ThirdLevelDomainUnallowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unavailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unexists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "BaseURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "newGracePeriod",
          "type": "uint64"
        }
      ],
      "name": "GracePeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "NonceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "node",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "ModifyingIndicator",
          "name": "indicator",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "depth",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "parentId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                }
              ],
              "internalType": "struct INSUnified.ImmutableRecord",
              "name": "immut",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expiry",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "protected",
                  "type": "bool"
                }
              ],
              "internalType": "struct INSUnified.MutableRecord",
              "name": "mut",
              "type": "tuple"
            }
          ],
          "indexed": false,
          "internalType": "struct INSUnified.Record",
          "name": "record",
          "type": "tuple"
        }
      ],
      "name": "RecordUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONTROLLER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_EXPIRY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROTECTED_SETTLER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVATION_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "available",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "protected",
          "type": "bool"
        }
      ],
      "name": "bulkSetProtected",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "ModifyingIndicator",
          "name": "indicator",
          "type": "uint256"
        }
      ],
      "name": "canSetRecord",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getDomain",
      "outputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGracePeriod",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRecord",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "depth",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "parentId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "label",
                  "type": "string"
                }
              ],
              "internalType": "struct INSUnified.ImmutableRecord",
              "name": "immut",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "expiry",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "protected",
                  "type": "bool"
                }
              ],
              "internalType": "struct INSUnified.MutableRecord",
              "name": "mut",
              "type": "tuple"
            }
          ],
          "internalType": "struct INSUnified.Record",
          "name": "record",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "protectedSettler",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "gracePeriod",
          "type": "uint64"
        },
        {
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "parentId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "duration",
          "type": "uint64"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "expiryTime",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "namehash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hashed",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "reclaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "duration",
          "type": "uint64"
        }
      ],
      "name": "renew",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "expiry",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "expiry",
          "type": "uint64"
        }
      ],
      "name": "setExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "gracePeriod",
          "type": "uint64"
        }
      ],
      "name": "setGracePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "ModifyingIndicator",
          "name": "indicator",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expiry",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "protected",
              "type": "bool"
            }
          ],
          "internalType": "struct INSUnified.MutableRecord",
          "name": "mutRecord",
          "type": "tuple"
        }
      ],
      "name": "setRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "stateOf",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "address": "0x454dD005E995dA3a3CafB30A2B6fe51A8C53862a",
  "args": "0x",
  "ast": {
    "absolutePath": "src/RNSUnified.sol",
    "id": 63416,
    "exportedSymbols": {
      "ALL_FIELDS_INDICATOR": [
        70045
      ],
      "ERC721": [
        51340
      ],
      "IERC721": [
        51456
      ],
      "IERC721State": [
        501
      ],
      "IMMUTABLE_FIELDS_INDICATOR": [
        70025
      ],
      "INSUnified": [
        65606
      ],
      "Initializable": [
        50240
      ],
      "LibModifyingField": [
        66630
      ],
      "LibRNSDomain": [
        66673
      ],
      "LibSafeRange": [
        67217
      ],
      "ModifyingField": [
        66609
      ],
      "ModifyingIndicator": [
        69989
      ],
      "RNSToken": [
        62133
      ],
      "RNSUnified": [
        63415
      ],
      "USER_FIELDS_INDICATOR": [
        70033
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11867:95",
    "nodes": [
      {
        "id": 62135,
        "nodeType": "PragmaDirective",
        "src": "32:24:95",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 62137,
        "nodeType": "ImportDirective",
        "src": "58:86:95",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63416,
        "sourceUnit": 50241,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62136,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50240,
              "src": "67:13:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62143,
        "nodeType": "ImportDirective",
        "src": "145:85:95",
        "nodes": [],
        "absolutePath": "src/RNSToken.sol",
        "file": "./RNSToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63416,
        "sourceUnit": 62134,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62138,
              "name": "IERC721State",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 501,
              "src": "154:12:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62139,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51456,
              "src": "168:7:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62140,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51340,
              "src": "177:6:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62141,
              "name": "INSUnified",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65606,
              "src": "185:10:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62142,
              "name": "RNSToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 62133,
              "src": "197:8:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62145,
        "nodeType": "ImportDirective",
        "src": "231:60:95",
        "nodes": [],
        "absolutePath": "src/libraries/LibRNSDomain.sol",
        "file": "./libraries/LibRNSDomain.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63416,
        "sourceUnit": 66674,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62144,
              "name": "LibRNSDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66673,
              "src": "240:12:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62147,
        "nodeType": "ImportDirective",
        "src": "292:65:95",
        "nodes": [],
        "absolutePath": "src/libraries/math/LibSafeRange.sol",
        "file": "./libraries/math/LibSafeRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63416,
        "sourceUnit": 67218,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62146,
              "name": "LibSafeRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67217,
              "src": "301:12:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62150,
        "nodeType": "ImportDirective",
        "src": "358:86:95",
        "nodes": [],
        "absolutePath": "src/libraries/LibModifyingField.sol",
        "file": "./libraries/LibModifyingField.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63416,
        "sourceUnit": 66631,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62148,
              "name": "ModifyingField",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66609,
              "src": "367:14:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62149,
              "name": "LibModifyingField",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66630,
              "src": "383:17:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62155,
        "nodeType": "ImportDirective",
        "src": "445:149:95",
        "nodes": [],
        "absolutePath": "src/types/ModifyingIndicator.sol",
        "file": "./types/ModifyingIndicator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63416,
        "sourceUnit": 70204,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62151,
              "name": "ALL_FIELDS_INDICATOR",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70045,
              "src": "456:20:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62152,
              "name": "IMMUTABLE_FIELDS_INDICATOR",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70025,
              "src": "480:26:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62153,
              "name": "USER_FIELDS_INDICATOR",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70033,
              "src": "510:21:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62154,
              "name": "ModifyingIndicator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69989,
              "src": "535:18:95",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63415,
        "nodeType": "ContractDefinition",
        "src": "596:11302:95",
        "nodes": [
          {
            "id": 62162,
            "nodeType": "UsingForDirective",
            "src": "647:30:95",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 62160,
              "name": "LibRNSDomain",
              "nameLocations": [
                "653:12:95"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66673,
              "src": "653:12:95"
            },
            "typeName": {
              "id": 62161,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "670:6:95",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 62166,
            "nodeType": "UsingForDirective",
            "src": "680:43:95",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 62163,
              "name": "LibModifyingField",
              "nameLocations": [
                "686:17:95"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66630,
              "src": "686:17:95"
            },
            "typeName": {
              "id": 62165,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62164,
                "name": "ModifyingField",
                "nameLocations": [
                  "708:14:95"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66609,
                "src": "708:14:95"
              },
              "referencedDeclaration": 66609,
              "src": "708:14:95",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ModifyingField_$66609",
                "typeString": "enum ModifyingField"
              }
            }
          },
          {
            "id": 62171,
            "nodeType": "VariableDeclaration",
            "src": "727:70:95",
            "nodes": [],
            "baseFunctions": [
              65450
            ],
            "constant": true,
            "functionSelector": "092c5b3b",
            "mutability": "constant",
            "name": "CONTROLLER_ROLE",
            "nameLocation": "751:15:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 62167,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "727:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4e54524f4c4c45525f524f4c45",
                  "id": 62169,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "779:17:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
                    "typeString": "literal_string \"CONTROLLER_ROLE\""
                  },
                  "value": "CONTROLLER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
                    "typeString": "literal_string \"CONTROLLER_ROLE\""
                  }
                ],
                "id": 62168,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "769:9:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 62170,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "769:28:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62176,
            "nodeType": "VariableDeclaration",
            "src": "801:72:95",
            "nodes": [],
            "baseFunctions": [
              65462
            ],
            "constant": true,
            "functionSelector": "f1e37908",
            "mutability": "constant",
            "name": "RESERVATION_ROLE",
            "nameLocation": "825:16:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 62172,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "801:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5245534552564154494f4e5f524f4c45",
                  "id": 62174,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "854:18:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_87a2b33e0b98030e29c3d23d732aa654f29b298e3891758d5f02a8b01c4840b2",
                    "typeString": "literal_string \"RESERVATION_ROLE\""
                  },
                  "value": "RESERVATION_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_87a2b33e0b98030e29c3d23d732aa654f29b298e3891758d5f02a8b01c4840b2",
                    "typeString": "literal_string \"RESERVATION_ROLE\""
                  }
                ],
                "id": 62173,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "844:9:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 62175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "844:29:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62181,
            "nodeType": "VariableDeclaration",
            "src": "877:84:95",
            "nodes": [],
            "baseFunctions": [
              65456
            ],
            "constant": true,
            "functionSelector": "33855d9f",
            "mutability": "constant",
            "name": "PROTECTED_SETTLER_ROLE",
            "nameLocation": "901:22:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 62177,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "877:7:95",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "50524f5445435445445f534554544c45525f524f4c45",
                  "id": 62179,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "936:24:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9e4a939112df4627ab5078e49dd57d2c45b4cffd9ae0b912f9fc355e5b108038",
                    "typeString": "literal_string \"PROTECTED_SETTLER_ROLE\""
                  },
                  "value": "PROTECTED_SETTLER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9e4a939112df4627ab5078e49dd57d2c45b4cffd9ae0b912f9fc355e5b108038",
                    "typeString": "literal_string \"PROTECTED_SETTLER_ROLE\""
                  }
                ],
                "id": 62178,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "926:9:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 62180,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "926:35:95",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62188,
            "nodeType": "VariableDeclaration",
            "src": "965:52:95",
            "nodes": [],
            "baseFunctions": [
              65468
            ],
            "constant": true,
            "functionSelector": "b9671690",
            "mutability": "constant",
            "name": "MAX_EXPIRY",
            "nameLocation": "988:10:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 62182,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "965:6:95",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 62185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1006:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint64_$",
                      "typeString": "type(uint64)"
                    },
                    "typeName": {
                      "id": 62184,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "1006:6:95",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint64_$",
                      "typeString": "type(uint64)"
                    }
                  ],
                  "id": 62183,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1001:4:95",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 62186,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1001:12:95",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint64",
                  "typeString": "type(uint64)"
                }
              },
              "id": 62187,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "1014:3:95",
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1001:16:95",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62193,
            "nodeType": "VariableDeclaration",
            "src": "1057:27:95",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62189,
              "nodeType": "StructuredDocumentation",
              "src": "1022:32:95",
              "text": "@dev Gap for upgradeability."
            },
            "mutability": "mutable",
            "name": "____gap",
            "nameLocation": "1077:7:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 62190,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1057:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 62192,
              "length": {
                "hexValue": "3530",
                "id": 62191,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1065:2:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1057:11:95",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 62195,
            "nodeType": "VariableDeclaration",
            "src": "1089:28:95",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gracePeriod",
            "nameLocation": "1105:12:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 62194,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1089:6:95",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62201,
            "nodeType": "VariableDeclaration",
            "src": "1164:45:95",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62196,
              "nodeType": "StructuredDocumentation",
              "src": "1121:40:95",
              "text": "@dev Mapping from token id => record"
            },
            "mutability": "mutable",
            "name": "_recordOf",
            "nameLocation": "1200:9:95",
            "scope": 63415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
              "typeString": "mapping(uint256 => struct INSUnified.Record)"
            },
            "typeName": {
              "id": 62200,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 62197,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1172:7:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1164:26:95",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                "typeString": "mapping(uint256 => struct INSUnified.Record)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 62199,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 62198,
                  "name": "Record",
                  "nameLocations": [
                    "1183:6:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65419,
                  "src": "1183:6:95"
                },
                "referencedDeclaration": 65419,
                "src": "1183:6:95",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                  "typeString": "struct INSUnified.Record"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62215,
            "nodeType": "ModifierDefinition",
            "src": "1214:117:95",
            "nodes": [],
            "body": {
              "id": 62214,
              "nodeType": "Block",
              "src": "1280:51:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62209,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62203,
                        "src": "1305:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62210,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62206,
                        "src": "1309:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "id": 62208,
                      "name": "_requireAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63214,
                      "src": "1286:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator) view"
                      }
                    },
                    "id": 62211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:33:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62212,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:33:95"
                },
                {
                  "id": 62213,
                  "nodeType": "PlaceholderStatement",
                  "src": "1325:1:95"
                }
              ]
            },
            "name": "onlyAuthorized",
            "nameLocation": "1223:14:95",
            "parameters": {
              "id": 62207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62203,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1246:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62215,
                  "src": "1238:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62206,
                  "mutability": "mutable",
                  "name": "indicator",
                  "nameLocation": "1269:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62215,
                  "src": "1250:28:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                    "typeString": "ModifyingIndicator"
                  },
                  "typeName": {
                    "id": 62205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62204,
                      "name": "ModifyingIndicator",
                      "nameLocations": [
                        "1250:18:95"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69989,
                      "src": "1250:18:95"
                    },
                    "referencedDeclaration": 69989,
                    "src": "1250:18:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:42:95"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62226,
            "nodeType": "FunctionDefinition",
            "src": "1335:70:95",
            "nodes": [],
            "body": {
              "id": 62225,
              "nodeType": "Block",
              "src": "1372:33:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62222,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50221,
                      "src": "1378:20:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 62223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:22:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62224,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:22:95"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 62218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1364:2:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  {
                    "hexValue": "",
                    "id": 62219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1368:2:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 62220,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 62217,
                  "name": "ERC721",
                  "nameLocations": [
                    "1357:6:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51340,
                  "src": "1357:6:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "1357:14:95"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 62216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:95"
            },
            "returnParameters": {
              "id": 62221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:95"
            },
            "scope": 63415,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62302,
            "nodeType": "FunctionDefinition",
            "src": "1409:636:95",
            "nodes": [],
            "body": {
              "id": 62301,
              "nodeType": "Block",
              "src": "1605:440:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62244,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48554,
                        "src": "1622:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62245,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62228,
                        "src": "1642:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62243,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48942
                      ],
                      "referencedDeclaration": 48942,
                      "src": "1611:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:37:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62247,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:37:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62249,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61898,
                        "src": "1665:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62250,
                        "name": "pauser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62230,
                        "src": "1678:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62248,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48942
                      ],
                      "referencedDeclaration": 48942,
                      "src": "1654:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:31:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62252,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:31:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62254,
                        "name": "CONTROLLER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62171,
                        "src": "1702:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62255,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62232,
                        "src": "1719:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62253,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48942
                      ],
                      "referencedDeclaration": 48942,
                      "src": "1691:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1691:39:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62257,
                  "nodeType": "ExpressionStatement",
                  "src": "1691:39:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62259,
                        "name": "PROTECTED_SETTLER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62181,
                        "src": "1747:22:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62260,
                        "name": "protectedSettler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62234,
                        "src": "1771:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62258,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48942
                      ],
                      "referencedDeclaration": 48942,
                      "src": "1736:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 62261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:52:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62262,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:52:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62264,
                        "name": "baseTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62238,
                        "src": "1807:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 62263,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62095,
                      "src": "1795:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (string calldata)"
                      }
                    },
                    "id": 62265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:25:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62266,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:25:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62268,
                        "name": "gracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62236,
                        "src": "1842:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 62267,
                      "name": "_setGracePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63303,
                      "src": "1826:15:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 62269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:28:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62270,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:28:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62272,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62228,
                        "src": "1867:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307830",
                        "id": 62273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:3:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 62271,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62078
                      ],
                      "referencedDeclaration": 62078,
                      "src": "1861:5:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:17:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62275,
                  "nodeType": "ExpressionStatement",
                  "src": "1861:17:95"
                },
                {
                  "assignments": [
                    62278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62278,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "1898:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62301,
                      "src": "1884:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62277,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62276,
                          "name": "Record",
                          "nameLocations": [
                            "1884:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "1884:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "1884:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62279,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1884:20:95"
                },
                {
                  "expression": {
                    "id": 62290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 62280,
                            "name": "_recordOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62201,
                            "src": "1910:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                              "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                            }
                          },
                          "id": 62282,
                          "indexExpression": {
                            "hexValue": "307830",
                            "id": 62281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1920:3:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1910:14:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_storage",
                            "typeString": "struct INSUnified.Record storage ref"
                          }
                        },
                        "id": 62283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1925:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "1910:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                          "typeString": "struct INSUnified.MutableRecord storage ref"
                        }
                      },
                      "id": 62284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1929:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "1910:25:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "expression": {
                            "id": 62285,
                            "name": "record",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62278,
                            "src": "1938:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                              "typeString": "struct INSUnified.Record memory"
                            }
                          },
                          "id": 62286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1945:3:95",
                          "memberName": "mut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65418,
                          "src": "1938:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                            "typeString": "struct INSUnified.MutableRecord memory"
                          }
                        },
                        "id": 62287,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "1949:6:95",
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65409,
                        "src": "1938:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 62288,
                        "name": "MAX_EXPIRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62188,
                        "src": "1958:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "1938:30:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1910:58:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 62291,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:58:95"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "307830",
                        "id": 62293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1993:3:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62294,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "1998:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2013:6:95",
                            "memberName": "Expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66607,
                            "src": "1998:21:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2020:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "1998:31:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1998:33:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 62298,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62278,
                        "src": "2033:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 62292,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "1979:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 62299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:61:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62300,
                  "nodeType": "EmitStatement",
                  "src": "1974:66:95"
                }
              ]
            },
            "functionSelector": "abfaf005",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62241,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62240,
                  "name": "initializer",
                  "nameLocations": [
                    "1593:11:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50142,
                  "src": "1593:11:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "1593:11:95"
              }
            ],
            "name": "initialize",
            "nameLocation": "1418:10:95",
            "parameters": {
              "id": 62239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62228,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1442:5:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62302,
                  "src": "1434:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62230,
                  "mutability": "mutable",
                  "name": "pauser",
                  "nameLocation": "1461:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62302,
                  "src": "1453:14:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62232,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "1481:10:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62302,
                  "src": "1473:18:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62234,
                  "mutability": "mutable",
                  "name": "protectedSettler",
                  "nameLocation": "1505:16:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62302,
                  "src": "1497:24:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62236,
                  "mutability": "mutable",
                  "name": "gracePeriod",
                  "nameLocation": "1534:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62302,
                  "src": "1527:18:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62235,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62238,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nameLocation": "1567:12:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62302,
                  "src": "1551:28:95",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62237,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1428:155:95"
            },
            "returnParameters": {
              "id": 62242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62322,
            "nodeType": "FunctionDefinition",
            "src": "2078:137:95",
            "nodes": [],
            "body": {
              "id": 62321,
              "nodeType": "Block",
              "src": "2136:79:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 62310,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2149:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 62311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2155:9:95",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2149:15:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 62315,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62305,
                              "src": "2192:2:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 62314,
                            "name": "_expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63124,
                            "src": "2184:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                              "typeString": "function (uint256) view returns (uint64)"
                            }
                          },
                          "id": 62316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2184:11:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 62317,
                          "name": "_gracePeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62195,
                          "src": "2197:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "expression": {
                          "id": 62312,
                          "name": "LibSafeRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67217,
                          "src": "2167:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibSafeRange_$67217_$",
                            "typeString": "type(library LibSafeRange)"
                          }
                        },
                        "id": 62313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2180:3:95",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67180,
                        "src": "2167:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 62318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2167:43:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2149:61:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62309,
                  "id": 62320,
                  "nodeType": "Return",
                  "src": "2142:68:95"
                }
              ]
            },
            "baseFunctions": [
              65484
            ],
            "documentation": {
              "id": 62303,
              "nodeType": "StructuredDocumentation",
              "src": "2049:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "96e494e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "available",
            "nameLocation": "2087:9:95",
            "parameters": {
              "id": 62306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62305,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2105:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62322,
                  "src": "2097:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2096:12:95"
            },
            "returnParameters": {
              "id": 62309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62322,
                  "src": "2130:4:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2129:6:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62331,
            "nodeType": "FunctionDefinition",
            "src": "2248:87:95",
            "nodes": [],
            "body": {
              "id": 62330,
              "nodeType": "Block",
              "src": "2305:30:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62328,
                    "name": "_gracePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62195,
                    "src": "2318:12:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 62327,
                  "id": 62329,
                  "nodeType": "Return",
                  "src": "2311:19:95"
                }
              ]
            },
            "baseFunctions": [
              65490
            ],
            "documentation": {
              "id": 62323,
              "nodeType": "StructuredDocumentation",
              "src": "2219:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "dbd18388",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGracePeriod",
            "nameLocation": "2257:14:95",
            "parameters": {
              "id": 62324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:2:95"
            },
            "returnParameters": {
              "id": 62327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62326,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62331,
                  "src": "2297:6:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62325,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2296:8:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62347,
            "nodeType": "FunctionDefinition",
            "src": "2368:132:95",
            "nodes": [],
            "body": {
              "id": 62346,
              "nodeType": "Block",
              "src": "2461:39:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62343,
                        "name": "gracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62334,
                        "src": "2483:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 62342,
                      "name": "_setGracePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63303,
                      "src": "2467:15:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 62344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:28:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62345,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:28:95"
                }
              ]
            },
            "baseFunctions": [
              65502
            ],
            "documentation": {
              "id": 62332,
              "nodeType": "StructuredDocumentation",
              "src": "2339:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "55a5133b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62337,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62336,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2421:13:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50275,
                  "src": "2421:13:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "2421:13:95"
              },
              {
                "arguments": [
                  {
                    "id": 62339,
                    "name": "CONTROLLER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62171,
                    "src": "2444:15:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 62340,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62338,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2435:8:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48565,
                  "src": "2435:8:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "2435:25:95"
              }
            ],
            "name": "setGracePeriod",
            "nameLocation": "2377:14:95",
            "parameters": {
              "id": 62335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62334,
                  "mutability": "mutable",
                  "name": "gracePeriod",
                  "nameLocation": "2399:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62347,
                  "src": "2392:18:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62333,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2391:20:95"
            },
            "returnParameters": {
              "id": 62341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2461:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62481,
            "nodeType": "FunctionDefinition",
            "src": "2533:1041:95",
            "nodes": [],
            "body": {
              "id": 62480,
              "nodeType": "Block",
              "src": "2715:859:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 62372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2725:41:95",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 62368,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52298,
                            "src": "2743:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 62369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2743:12:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 62370,
                          "name": "parentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62350,
                          "src": "2757:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62367,
                        "name": "_checkOwnerRules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63188,
                        "src": "2726:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 62371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2726:40:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62376,
                  "nodeType": "IfStatement",
                  "src": "2721:68:95",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 62373,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65379,
                        "src": "2775:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 62374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2775:14:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 62375,
                    "nodeType": "RevertStatement",
                    "src": "2768:21:95"
                  }
                },
                {
                  "expression": {
                    "id": 62383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62377,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62365,
                      "src": "2795:2:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62380,
                          "name": "parentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62350,
                          "src": "2818:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 62381,
                          "name": "label",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62352,
                          "src": "2828:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "expression": {
                          "id": 62378,
                          "name": "LibRNSDomain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66673,
                          "src": "2800:12:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$66673_$",
                            "typeString": "type(library LibRNSDomain)"
                          }
                        },
                        "id": 62379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2813:4:95",
                        "memberName": "toId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66652,
                        "src": "2800:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 62382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2800:34:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2795:39:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62384,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:39:95"
                },
                {
                  "condition": {
                    "id": 62388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2844:14:95",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 62386,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62365,
                          "src": "2855:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62385,
                        "name": "available",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62322,
                        "src": "2845:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 62387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2845:13:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62392,
                  "nodeType": "IfStatement",
                  "src": "2840:40:95",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 62389,
                        "name": "Unavailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65376,
                        "src": "2867:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 62390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2867:13:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 62391,
                    "nodeType": "RevertStatement",
                    "src": "2860:20:95"
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 62394,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62365,
                        "src": "2899:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62393,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50859,
                      "src": "2891:7:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 62395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2891:11:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62400,
                  "nodeType": "IfStatement",
                  "src": "2887:26:95",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 62397,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62365,
                          "src": "2910:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62396,
                        "name": "_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          63414
                        ],
                        "referencedDeclaration": 63414,
                        "src": "2904:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 62398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2904:9:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 62399,
                    "nodeType": "ExpressionStatement",
                    "src": "2904:9:95"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62402,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62356,
                        "src": "2925:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62403,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62365,
                        "src": "2932:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62401,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62078
                      ],
                      "referencedDeclaration": 62078,
                      "src": "2919:5:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2919:16:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62405,
                  "nodeType": "ExpressionStatement",
                  "src": "2919:16:95"
                },
                {
                  "expression": {
                    "id": 62417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62406,
                      "name": "expiryTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62363,
                      "src": "2942:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 62411,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2993:5:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 62412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2999:9:95",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2993:15:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 62413,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62358,
                              "src": "3010:8:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 62414,
                              "name": "MAX_EXPIRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62188,
                              "src": "3020:10:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 62409,
                              "name": "LibSafeRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67217,
                              "src": "2962:12:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibSafeRange_$67217_$",
                                "typeString": "type(library LibSafeRange)"
                              }
                            },
                            "id": 62410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2975:17:95",
                            "memberName": "addWithUpperbound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67216,
                            "src": "2962:30:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 62415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2962:69:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2955:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 62407,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2955:6:95",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 62416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2955:77:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2942:90:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 62418,
                  "nodeType": "ExpressionStatement",
                  "src": "2942:90:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62420,
                        "name": "parentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62350,
                        "src": "3058:8:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62421,
                        "name": "expiryTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62363,
                        "src": "3068:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 62419,
                      "name": "_requireValidExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63234,
                      "src": "3038:19:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64) view"
                      }
                    },
                    "id": 62422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:41:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62423,
                  "nodeType": "ExpressionStatement",
                  "src": "3038:41:95"
                },
                {
                  "assignments": [
                    62426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62426,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "3099:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62480,
                      "src": "3085:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62425,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62424,
                          "name": "Record",
                          "nameLocations": [
                            "3085:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "3085:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "3085:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62427,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3085:20:95"
                },
                {
                  "expression": {
                    "id": 62441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 62428,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62426,
                        "src": "3165:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      },
                      "id": 62430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3172:3:95",
                      "memberName": "mut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65418,
                      "src": "3165:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                        "typeString": "struct INSUnified.MutableRecord memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62432,
                          "name": "resolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62354,
                          "src": "3210:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 62433,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62356,
                          "src": "3227:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 62434,
                          "name": "expiryTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62363,
                          "src": "3242:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 62435,
                                "name": "_recordOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62201,
                                "src": "3265:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                  "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                }
                              },
                              "id": 62437,
                              "indexExpression": {
                                "id": 62436,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62365,
                                "src": "3275:2:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3265:13:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Record_$65419_storage",
                                "typeString": "struct INSUnified.Record storage ref"
                              }
                            },
                            "id": 62438,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3279:3:95",
                            "memberName": "mut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65418,
                            "src": "3265:17:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                              "typeString": "struct INSUnified.MutableRecord storage ref"
                            }
                          },
                          "id": 62439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3283:9:95",
                          "memberName": "protected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65411,
                          "src": "3265:27:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 62431,
                        "name": "MutableRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65412,
                        "src": "3184:13:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MutableRecord_$65412_storage_ptr_$",
                          "typeString": "type(struct INSUnified.MutableRecord storage pointer)"
                        }
                      },
                      "id": 62440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3200:8:95",
                        "3220:5:95",
                        "3234:6:95",
                        "3254:9:95"
                      ],
                      "names": [
                        "resolver",
                        "owner",
                        "expiry",
                        "protected"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3184:111:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                        "typeString": "struct INSUnified.MutableRecord memory"
                      }
                    },
                    "src": "3165:130:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                      "typeString": "struct INSUnified.MutableRecord memory"
                    }
                  },
                  "id": 62442,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:130:95"
                },
                {
                  "expression": {
                    "id": 62457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 62443,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62426,
                        "src": "3301:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      },
                      "id": 62445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3308:5:95",
                      "memberName": "immut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65415,
                      "src": "3301:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ImmutableRecord_$65402_memory_ptr",
                        "typeString": "struct INSUnified.ImmutableRecord memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 62453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 62447,
                                  "name": "_recordOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62201,
                                  "src": "3341:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                    "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                  }
                                },
                                "id": 62449,
                                "indexExpression": {
                                  "id": 62448,
                                  "name": "parentId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62350,
                                  "src": "3351:8:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3341:19:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$65419_storage",
                                  "typeString": "struct INSUnified.Record storage ref"
                                }
                              },
                              "id": 62450,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3361:5:95",
                              "memberName": "immut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65415,
                              "src": "3341:25:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage",
                                "typeString": "struct INSUnified.ImmutableRecord storage ref"
                              }
                            },
                            "id": 62451,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3367:5:95",
                            "memberName": "depth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65397,
                            "src": "3341:31:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 62452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3375:1:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3341:35:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 62454,
                          "name": "parentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62350,
                          "src": "3388:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 62455,
                          "name": "label",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62352,
                          "src": "3405:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "id": 62446,
                        "name": "ImmutableRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65402,
                        "src": "3316:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ImmutableRecord_$65402_storage_ptr_$",
                          "typeString": "type(struct INSUnified.ImmutableRecord storage pointer)"
                        }
                      },
                      "id": 62456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3334:5:95",
                        "3378:8:95",
                        "3398:5:95"
                      ],
                      "names": [
                        "depth",
                        "parentId",
                        "label"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3316:97:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ImmutableRecord_$65402_memory_ptr",
                        "typeString": "struct INSUnified.ImmutableRecord memory"
                      }
                    },
                    "src": "3301:112:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ImmutableRecord_$65402_memory_ptr",
                      "typeString": "struct INSUnified.ImmutableRecord memory"
                    }
                  },
                  "id": 62458,
                  "nodeType": "ExpressionStatement",
                  "src": "3301:112:95"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 62463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 62459,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62426,
                          "src": "3423:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                            "typeString": "struct INSUnified.Record memory"
                          }
                        },
                        "id": 62460,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3430:5:95",
                        "memberName": "immut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65415,
                        "src": "3423:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImmutableRecord_$65402_memory_ptr",
                          "typeString": "struct INSUnified.ImmutableRecord memory"
                        }
                      },
                      "id": 62461,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3436:5:95",
                      "memberName": "depth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65397,
                      "src": "3423:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 62462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3445:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3423:23:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62467,
                  "nodeType": "IfStatement",
                  "src": "3419:63:95",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 62464,
                        "name": "ThirdLevelDomainUnallowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65370,
                        "src": "3455:25:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 62465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3455:27:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 62466,
                    "nodeType": "RevertStatement",
                    "src": "3448:34:95"
                  }
                },
                {
                  "expression": {
                    "id": 62472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 62468,
                        "name": "_recordOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62201,
                        "src": "3489:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                          "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                        }
                      },
                      "id": 62470,
                      "indexExpression": {
                        "id": 62469,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62365,
                        "src": "3499:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3489:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_storage",
                        "typeString": "struct INSUnified.Record storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62471,
                      "name": "record",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62426,
                      "src": "3505:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record memory"
                      }
                    },
                    "src": "3489:22:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$65419_storage",
                      "typeString": "struct INSUnified.Record storage ref"
                    }
                  },
                  "id": 62473,
                  "nodeType": "ExpressionStatement",
                  "src": "3489:22:95"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62475,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62365,
                        "src": "3536:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62476,
                        "name": "ALL_FIELDS_INDICATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70045,
                        "src": "3540:20:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 62477,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62426,
                        "src": "3562:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 62474,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "3522:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 62478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:47:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62479,
                  "nodeType": "EmitStatement",
                  "src": "3517:52:95"
                }
              ]
            },
            "baseFunctions": [
              65526
            ],
            "documentation": {
              "id": 62348,
              "nodeType": "StructuredDocumentation",
              "src": "2504:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "0570891f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62360,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2655:13:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50275,
                  "src": "2655:13:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "2655:13:95"
              }
            ],
            "name": "mint",
            "nameLocation": "2542:4:95",
            "parameters": {
              "id": 62359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62350,
                  "mutability": "mutable",
                  "name": "parentId",
                  "nameLocation": "2555:8:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2547:16:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62352,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "2581:5:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2565:21:95",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62351,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62354,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "2596:8:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2588:16:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2588:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62356,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2614:5:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2606:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62358,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "2628:8:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2621:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62357,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2621:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:91:95"
            },
            "returnParameters": {
              "id": 62366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62363,
                  "mutability": "mutable",
                  "name": "expiryTime",
                  "nameLocation": "2689:10:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2682:17:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62362,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62365,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2709:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62481,
                  "src": "2701:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2701:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2681:31:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62496,
            "nodeType": "FunctionDefinition",
            "src": "3607:108:95",
            "nodes": [],
            "body": {
              "id": 62495,
              "nodeType": "Block",
              "src": "3681:34:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62489,
                      "name": "hashed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62487,
                      "src": "3687:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 62490,
                          "name": "str",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62484,
                          "src": "3696:3:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 62491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3700:8:95",
                        "memberName": "namehash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66672,
                        "src": "3696:12:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
                          "typeString": "function (string memory) pure returns (bytes32)"
                        }
                      },
                      "id": 62492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3696:14:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3687:23:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 62494,
                  "nodeType": "ExpressionStatement",
                  "src": "3687:23:95"
                }
              ]
            },
            "baseFunctions": [
              65476
            ],
            "documentation": {
              "id": 62482,
              "nodeType": "StructuredDocumentation",
              "src": "3578:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "09879962",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "namehash",
            "nameLocation": "3616:8:95",
            "parameters": {
              "id": 62485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62484,
                  "mutability": "mutable",
                  "name": "str",
                  "nameLocation": "3639:3:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62496,
                  "src": "3625:17:95",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62483,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3625:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3624:19:95"
            },
            "returnParameters": {
              "id": 62488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62487,
                  "mutability": "mutable",
                  "name": "hashed",
                  "nameLocation": "3673:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62496,
                  "src": "3665:14:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62486,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3665:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3664:16:95"
            },
            "scope": 63415,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62522,
            "nodeType": "FunctionDefinition",
            "src": "3748:146:95",
            "nodes": [],
            "body": {
              "id": 62521,
              "nodeType": "Block",
              "src": "3824:70:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62505,
                      "name": "record",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62503,
                      "src": "3830:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 62506,
                        "name": "_recordOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62201,
                        "src": "3839:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                          "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                        }
                      },
                      "id": 62508,
                      "indexExpression": {
                        "id": 62507,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62499,
                        "src": "3849:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3839:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_storage",
                        "typeString": "struct INSUnified.Record storage ref"
                      }
                    },
                    "src": "3830:22:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                      "typeString": "struct INSUnified.Record memory"
                    }
                  },
                  "id": 62510,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:22:95"
                },
                {
                  "expression": {
                    "id": 62519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 62511,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62503,
                          "src": "3858:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                            "typeString": "struct INSUnified.Record memory"
                          }
                        },
                        "id": 62514,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3865:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "3858:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                          "typeString": "struct INSUnified.MutableRecord memory"
                        }
                      },
                      "id": 62515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3869:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "3858:17:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62517,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62499,
                          "src": "3886:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62516,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63124,
                        "src": "3878:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint256) view returns (uint64)"
                        }
                      },
                      "id": 62518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3878:11:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3858:31:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 62520,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:31:95"
                }
              ]
            },
            "baseFunctions": [
              65535
            ],
            "documentation": {
              "id": 62497,
              "nodeType": "StructuredDocumentation",
              "src": "3719:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "03e9e609",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRecord",
            "nameLocation": "3757:9:95",
            "parameters": {
              "id": 62500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62499,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3775:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62522,
                  "src": "3767:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3767:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3766:12:95"
            },
            "returnParameters": {
              "id": 62504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62503,
                  "mutability": "mutable",
                  "name": "record",
                  "nameLocation": "3816:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62522,
                  "src": "3802:20:95",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                    "typeString": "struct INSUnified.Record"
                  },
                  "typeName": {
                    "id": 62502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62501,
                      "name": "Record",
                      "nameLocations": [
                        "3802:6:95"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65419,
                      "src": "3802:6:95"
                    },
                    "referencedDeclaration": 65419,
                    "src": "3802:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                      "typeString": "struct INSUnified.Record"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3801:22:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62583,
            "nodeType": "FunctionDefinition",
            "src": "3927:376:95",
            "nodes": [],
            "body": {
              "id": 62582,
              "nodeType": "Block",
              "src": "4003:300:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62530,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62525,
                      "src": "4013:2:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 62531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4019:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4013:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62535,
                  "nodeType": "IfStatement",
                  "src": "4009:22:95",
                  "trueBody": {
                    "expression": {
                      "hexValue": "",
                      "id": 62533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4029:2:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "functionReturnParameters": 62529,
                    "id": 62534,
                    "nodeType": "Return",
                    "src": "4022:9:95"
                  }
                },
                {
                  "assignments": [
                    62538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62538,
                      "mutability": "mutable",
                      "name": "sRecord",
                      "nameLocation": "4062:7:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62582,
                      "src": "4038:31:95",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                        "typeString": "struct INSUnified.ImmutableRecord"
                      },
                      "typeName": {
                        "id": 62537,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62536,
                          "name": "ImmutableRecord",
                          "nameLocations": [
                            "4038:15:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65402,
                          "src": "4038:15:95"
                        },
                        "referencedDeclaration": 65402,
                        "src": "4038:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                          "typeString": "struct INSUnified.ImmutableRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62543,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 62539,
                        "name": "_recordOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62201,
                        "src": "4072:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                          "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                        }
                      },
                      "id": 62541,
                      "indexExpression": {
                        "id": 62540,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62525,
                        "src": "4082:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4072:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_storage",
                        "typeString": "struct INSUnified.Record storage ref"
                      }
                    },
                    "id": 62542,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4086:5:95",
                    "memberName": "immut",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 65415,
                    "src": "4072:19:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage",
                      "typeString": "struct INSUnified.ImmutableRecord storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4038:53:95"
                },
                {
                  "expression": {
                    "id": 62547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62544,
                      "name": "domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62528,
                      "src": "4097:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 62545,
                        "name": "sRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62538,
                        "src": "4106:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                          "typeString": "struct INSUnified.ImmutableRecord storage pointer"
                        }
                      },
                      "id": 62546,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4114:5:95",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65401,
                      "src": "4106:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "4097:22:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 62548,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:22:95"
                },
                {
                  "expression": {
                    "id": 62552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62549,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62525,
                      "src": "4125:2:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 62550,
                        "name": "sRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62538,
                        "src": "4130:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                          "typeString": "struct INSUnified.ImmutableRecord storage pointer"
                        }
                      },
                      "id": 62551,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4138:8:95",
                      "memberName": "parentId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65399,
                      "src": "4130:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4125:21:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62553,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:21:95"
                },
                {
                  "body": {
                    "id": 62580,
                    "nodeType": "Block",
                    "src": "4168:131:95",
                    "statements": [
                      {
                        "expression": {
                          "id": 62562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62557,
                            "name": "sRecord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62538,
                            "src": "4176:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                              "typeString": "struct INSUnified.ImmutableRecord storage pointer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 62558,
                                "name": "_recordOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62201,
                                "src": "4186:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                  "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                }
                              },
                              "id": 62560,
                              "indexExpression": {
                                "id": 62559,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62525,
                                "src": "4196:2:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4186:13:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Record_$65419_storage",
                                "typeString": "struct INSUnified.Record storage ref"
                              }
                            },
                            "id": 62561,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4200:5:95",
                            "memberName": "immut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65415,
                            "src": "4186:19:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage",
                              "typeString": "struct INSUnified.ImmutableRecord storage ref"
                            }
                          },
                          "src": "4176:29:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                            "typeString": "struct INSUnified.ImmutableRecord storage pointer"
                          }
                        },
                        "id": 62563,
                        "nodeType": "ExpressionStatement",
                        "src": "4176:29:95"
                      },
                      {
                        "expression": {
                          "id": 62573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62564,
                            "name": "domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62528,
                            "src": "4213:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 62568,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62528,
                                "src": "4236:6:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "2e",
                                "id": 62569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4244:3:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                  "typeString": "literal_string \".\""
                                },
                                "value": "."
                              },
                              {
                                "expression": {
                                  "id": 62570,
                                  "name": "sRecord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62538,
                                  "src": "4249:7:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                                    "typeString": "struct INSUnified.ImmutableRecord storage pointer"
                                  }
                                },
                                "id": 62571,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4257:5:95",
                                "memberName": "label",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65401,
                                "src": "4249:13:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                  "typeString": "literal_string \".\""
                                },
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "expression": {
                                "id": 62566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4222:6:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 62565,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4222:6:95",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 62567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4229:6:95",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "4222:13:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 62572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4222:41:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4213:50:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 62574,
                        "nodeType": "ExpressionStatement",
                        "src": "4213:50:95"
                      },
                      {
                        "expression": {
                          "id": 62578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62575,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62525,
                            "src": "4271:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 62576,
                              "name": "sRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62538,
                              "src": "4276:7:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage_ptr",
                                "typeString": "struct INSUnified.ImmutableRecord storage pointer"
                              }
                            },
                            "id": 62577,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4284:8:95",
                            "memberName": "parentId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65399,
                            "src": "4276:16:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4271:21:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62579,
                        "nodeType": "ExpressionStatement",
                        "src": "4271:21:95"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62554,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62525,
                      "src": "4159:2:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 62555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4165:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4159:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62581,
                  "nodeType": "WhileStatement",
                  "src": "4152:147:95"
                }
              ]
            },
            "baseFunctions": [
              65543
            ],
            "documentation": {
              "id": 62523,
              "nodeType": "StructuredDocumentation",
              "src": "3898:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "1a7a98e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDomain",
            "nameLocation": "3936:9:95",
            "parameters": {
              "id": 62526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62525,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3954:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62583,
                  "src": "3946:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:12:95"
            },
            "returnParameters": {
              "id": 62529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62528,
                  "mutability": "mutable",
                  "name": "domain",
                  "nameLocation": "3995:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62583,
                  "src": "3981:20:95",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62527,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3981:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3980:22:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62612,
            "nodeType": "FunctionDefinition",
            "src": "4336:198:95",
            "nodes": [],
            "body": {
              "id": 62611,
              "nodeType": "Block",
              "src": "4470:64:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 62601,
                              "name": "_recordOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62201,
                              "src": "4490:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                              }
                            },
                            "id": 62603,
                            "indexExpression": {
                              "id": 62602,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62586,
                              "src": "4500:2:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4490:13:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$65419_storage",
                              "typeString": "struct INSUnified.Record storage ref"
                            }
                          },
                          "id": 62604,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4504:3:95",
                          "memberName": "mut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65418,
                          "src": "4490:17:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                            "typeString": "struct INSUnified.MutableRecord storage ref"
                          }
                        },
                        "id": 62605,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4508:5:95",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65407,
                        "src": "4490:23:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62606,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62588,
                        "src": "4515:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 62607,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62586,
                        "src": "4522:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 62608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4526:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 62600,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50828,
                      "src": "4476:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 62609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:53:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62610,
                  "nodeType": "ExpressionStatement",
                  "src": "4476:53:95"
                }
              ]
            },
            "baseFunctions": [
              65578
            ],
            "documentation": {
              "id": 62584,
              "nodeType": "StructuredDocumentation",
              "src": "4307:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "28ed4f6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62590,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "4397:13:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50275,
                  "src": "4397:13:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "4397:13:95"
              },
              {
                "arguments": [
                  {
                    "id": 62593,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62586,
                    "src": "4430:2:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 62594,
                          "name": "ModifyingField",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66609,
                          "src": "4434:14:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "type(enum ModifyingField)"
                          }
                        },
                        "id": 62595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4449:5:95",
                        "memberName": "Owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66606,
                        "src": "4434:20:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ModifyingField_$66609",
                          "typeString": "enum ModifyingField"
                        }
                      },
                      "id": 62596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4455:9:95",
                      "memberName": "indicator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66629,
                      "src": "4434:30:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                        "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                      }
                    },
                    "id": 62597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4434:32:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  }
                ],
                "id": 62598,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62592,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "4415:14:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62215,
                  "src": "4415:14:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "4415:52:95"
              }
            ],
            "name": "reclaim",
            "nameLocation": "4345:7:95",
            "parameters": {
              "id": 62589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62586,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4361:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62612,
                  "src": "4353:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62588,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4373:5:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62612,
                  "src": "4365:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4352:27:95"
            },
            "returnParameters": {
              "id": 62599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4470:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62674,
            "nodeType": "FunctionDefinition",
            "src": "4567:402:95",
            "nodes": [],
            "body": {
              "id": 62673,
              "nodeType": "Block",
              "src": "4684:285:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62629,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "4704:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62673,
                      "src": "4690:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62628,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62627,
                          "name": "Record",
                          "nameLocations": [
                            "4690:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "4690:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "4690:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62630,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4690:20:95"
                },
                {
                  "expression": {
                    "id": 62649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 62631,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62629,
                          "src": "4716:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                            "typeString": "struct INSUnified.Record memory"
                          }
                        },
                        "id": 62634,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4723:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "4716:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                          "typeString": "struct INSUnified.MutableRecord memory"
                        }
                      },
                      "id": 62635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4727:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "4716:17:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 62640,
                                    "name": "_recordOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62201,
                                    "src": "4774:9:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                      "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                    }
                                  },
                                  "id": 62642,
                                  "indexExpression": {
                                    "id": 62641,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62615,
                                    "src": "4784:2:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4774:13:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Record_$65419_storage",
                                    "typeString": "struct INSUnified.Record storage ref"
                                  }
                                },
                                "id": 62643,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4788:3:95",
                                "memberName": "mut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65418,
                                "src": "4774:17:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                                  "typeString": "struct INSUnified.MutableRecord storage ref"
                                }
                              },
                              "id": 62644,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4792:6:95",
                              "memberName": "expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65409,
                              "src": "4774:24:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 62645,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62617,
                              "src": "4800:8:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 62646,
                              "name": "MAX_EXPIRY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62188,
                              "src": "4810:10:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "expression": {
                              "id": 62638,
                              "name": "LibSafeRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67217,
                              "src": "4743:12:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibSafeRange_$67217_$",
                                "typeString": "type(library LibSafeRange)"
                              }
                            },
                            "id": 62639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4756:17:95",
                            "memberName": "addWithUpperbound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67216,
                            "src": "4743:30:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 62647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4743:78:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4736:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 62636,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "4736:6:95",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 62648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4736:86:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4716:106:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 62650,
                  "nodeType": "ExpressionStatement",
                  "src": "4716:106:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62652,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62615,
                        "src": "4839:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 62653,
                            "name": "record",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62629,
                            "src": "4843:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                              "typeString": "struct INSUnified.Record memory"
                            }
                          },
                          "id": 62654,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4850:3:95",
                          "memberName": "mut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65418,
                          "src": "4843:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                            "typeString": "struct INSUnified.MutableRecord memory"
                          }
                        },
                        "id": 62655,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4854:6:95",
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65409,
                        "src": "4843:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 62651,
                      "name": "_setExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63286,
                      "src": "4828:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64)"
                      }
                    },
                    "id": 62656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:33:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62657,
                  "nodeType": "ExpressionStatement",
                  "src": "4828:33:95"
                },
                {
                  "expression": {
                    "id": 62662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62658,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62625,
                      "src": "4867:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 62659,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62629,
                          "src": "4876:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                            "typeString": "struct INSUnified.Record memory"
                          }
                        },
                        "id": 62660,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4883:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "4876:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                          "typeString": "struct INSUnified.MutableRecord memory"
                        }
                      },
                      "id": 62661,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4887:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "4876:17:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4867:26:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 62663,
                  "nodeType": "ExpressionStatement",
                  "src": "4867:26:95"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62665,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62615,
                        "src": "4918:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62666,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "4922:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4937:6:95",
                            "memberName": "Expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66607,
                            "src": "4922:21:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4944:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "4922:31:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4922:33:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 62670,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62629,
                        "src": "4957:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 62664,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "4904:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 62671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4904:60:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62672,
                  "nodeType": "EmitStatement",
                  "src": "4899:65:95"
                }
              ]
            },
            "baseFunctions": [
              65588
            ],
            "documentation": {
              "id": 62613,
              "nodeType": "StructuredDocumentation",
              "src": "4538:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "5569f33d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62620,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62619,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "4620:13:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50275,
                  "src": "4620:13:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "4620:13:95"
              },
              {
                "arguments": [
                  {
                    "id": 62622,
                    "name": "CONTROLLER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62171,
                    "src": "4643:15:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 62623,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62621,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4634:8:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48565,
                  "src": "4634:8:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "4634:25:95"
              }
            ],
            "name": "renew",
            "nameLocation": "4576:5:95",
            "parameters": {
              "id": 62618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62615,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4590:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62674,
                  "src": "4582:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4582:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62617,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "4601:8:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62674,
                  "src": "4594:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62616,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4594:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4581:29:95"
            },
            "returnParameters": {
              "id": 62626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62625,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "4676:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62674,
                  "src": "4669:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62624,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4669:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4668:15:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62710,
            "nodeType": "FunctionDefinition",
            "src": "5002:245:95",
            "nodes": [],
            "body": {
              "id": 62709,
              "nodeType": "Block",
              "src": "5097:150:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62689,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "5117:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62709,
                      "src": "5103:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62688,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62687,
                          "name": "Record",
                          "nameLocations": [
                            "5103:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "5103:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "5103:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62690,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5103:20:95"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62692,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62677,
                        "src": "5140:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "expression": {
                              "id": 62693,
                              "name": "record",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62689,
                              "src": "5144:6:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                                "typeString": "struct INSUnified.Record memory"
                              }
                            },
                            "id": 62694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5151:3:95",
                            "memberName": "mut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65418,
                            "src": "5144:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                              "typeString": "struct INSUnified.MutableRecord memory"
                            }
                          },
                          "id": 62695,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "5155:6:95",
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65409,
                          "src": "5144:17:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 62696,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62679,
                          "src": "5164:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "5144:26:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 62691,
                      "name": "_setExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63286,
                      "src": "5129:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64)"
                      }
                    },
                    "id": 62698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5129:42:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62699,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:42:95"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62701,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62677,
                        "src": "5196:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62702,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "5200:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5215:6:95",
                            "memberName": "Expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66607,
                            "src": "5200:21:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5222:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "5200:31:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5200:33:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 62706,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62689,
                        "src": "5235:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 62700,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "5182:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 62707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5182:60:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62708,
                  "nodeType": "EmitStatement",
                  "src": "5177:65:95"
                }
              ]
            },
            "baseFunctions": [
              65596
            ],
            "documentation": {
              "id": 62675,
              "nodeType": "StructuredDocumentation",
              "src": "4973:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "fc284d11",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62682,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62681,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5057:13:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50275,
                  "src": "5057:13:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "5057:13:95"
              },
              {
                "arguments": [
                  {
                    "id": 62684,
                    "name": "CONTROLLER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62171,
                    "src": "5080:15:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 62685,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62683,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5071:8:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48565,
                  "src": "5071:8:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "5071:25:95"
              }
            ],
            "name": "setExpiry",
            "nameLocation": "5011:9:95",
            "parameters": {
              "id": 62680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62677,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5029:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62710,
                  "src": "5021:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5021:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62679,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "5040:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62710,
                  "src": "5033:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 62678,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5033:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:27:95"
            },
            "returnParameters": {
              "id": 62686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5097:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62788,
            "nodeType": "FunctionDefinition",
            "src": "5280:533:95",
            "nodes": [],
            "body": {
              "id": 62787,
              "nodeType": "Block",
              "src": "5388:425:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62724,
                      "mutability": "mutable",
                      "name": "indicator",
                      "nameLocation": "5413:9:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62787,
                      "src": "5394:28:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                        "typeString": "ModifyingIndicator"
                      },
                      "typeName": {
                        "id": 62723,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62722,
                          "name": "ModifyingIndicator",
                          "nameLocations": [
                            "5394:18:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69989,
                          "src": "5394:18:95"
                        },
                        "referencedDeclaration": 69989,
                        "src": "5394:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62729,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 62725,
                          "name": "ModifyingField",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66609,
                          "src": "5425:14:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "type(enum ModifyingField)"
                          }
                        },
                        "id": 62726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5440:9:95",
                        "memberName": "Protected",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66608,
                        "src": "5425:24:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ModifyingField_$66609",
                          "typeString": "enum ModifyingField"
                        }
                      },
                      "id": 62727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5450:9:95",
                      "memberName": "indicator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66629,
                      "src": "5425:34:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                        "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                      }
                    },
                    "id": 62728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5425:36:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5394:67:95"
                },
                {
                  "assignments": [
                    62731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62731,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "5475:2:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62787,
                      "src": "5467:10:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5467:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62732,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5467:10:95"
                },
                {
                  "assignments": [
                    62735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62735,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "5497:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62787,
                      "src": "5483:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62734,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62733,
                          "name": "Record",
                          "nameLocations": [
                            "5483:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "5483:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "5483:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62736,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5483:20:95"
                },
                {
                  "expression": {
                    "id": 62743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 62737,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62735,
                          "src": "5509:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                            "typeString": "struct INSUnified.Record memory"
                          }
                        },
                        "id": 62740,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5516:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "5509:10:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                          "typeString": "struct INSUnified.MutableRecord memory"
                        }
                      },
                      "id": 62741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5520:9:95",
                      "memberName": "protected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65411,
                      "src": "5509:20:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62742,
                      "name": "protected",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62716,
                      "src": "5532:9:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5509:32:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62744,
                  "nodeType": "ExpressionStatement",
                  "src": "5509:32:95"
                },
                {
                  "body": {
                    "id": 62785,
                    "nodeType": "Block",
                    "src": "5581:228:95",
                    "statements": [
                      {
                        "expression": {
                          "id": 62756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 62752,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62731,
                            "src": "5589:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 62753,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62714,
                              "src": "5594:3:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 62755,
                            "indexExpression": {
                              "id": 62754,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62746,
                              "src": "5598:1:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5594:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5589:11:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 62757,
                        "nodeType": "ExpressionStatement",
                        "src": "5589:11:95"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 62764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 62758,
                                  "name": "_recordOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62201,
                                  "src": "5612:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                    "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                  }
                                },
                                "id": 62760,
                                "indexExpression": {
                                  "id": 62759,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62731,
                                  "src": "5622:2:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5612:13:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$65419_storage",
                                  "typeString": "struct INSUnified.Record storage ref"
                                }
                              },
                              "id": 62761,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5626:3:95",
                              "memberName": "mut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65418,
                              "src": "5612:17:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                                "typeString": "struct INSUnified.MutableRecord storage ref"
                              }
                            },
                            "id": 62762,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5630:9:95",
                            "memberName": "protected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65411,
                            "src": "5612:27:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 62763,
                            "name": "protected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62716,
                            "src": "5643:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5612:40:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 62780,
                        "nodeType": "IfStatement",
                        "src": "5608:155:95",
                        "trueBody": {
                          "id": 62779,
                          "nodeType": "Block",
                          "src": "5654:109:95",
                          "statements": [
                            {
                              "expression": {
                                "id": 62771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 62765,
                                        "name": "_recordOf",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62201,
                                        "src": "5664:9:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                          "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                        }
                                      },
                                      "id": 62767,
                                      "indexExpression": {
                                        "id": 62766,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 62731,
                                        "src": "5674:2:95",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5664:13:95",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Record_$65419_storage",
                                        "typeString": "struct INSUnified.Record storage ref"
                                      }
                                    },
                                    "id": 62768,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5678:3:95",
                                    "memberName": "mut",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 65418,
                                    "src": "5664:17:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                                      "typeString": "struct INSUnified.MutableRecord storage ref"
                                    }
                                  },
                                  "id": 62769,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5682:9:95",
                                  "memberName": "protected",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65411,
                                  "src": "5664:27:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 62770,
                                  "name": "protected",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62716,
                                  "src": "5694:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5664:39:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 62772,
                              "nodeType": "ExpressionStatement",
                              "src": "5664:39:95"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 62774,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62731,
                                    "src": "5732:2:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 62775,
                                    "name": "indicator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62724,
                                    "src": "5736:9:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                                      "typeString": "ModifyingIndicator"
                                    }
                                  },
                                  {
                                    "id": 62776,
                                    "name": "record",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62735,
                                    "src": "5747:6:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                                      "typeString": "struct INSUnified.Record memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                                      "typeString": "ModifyingIndicator"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                                      "typeString": "struct INSUnified.Record memory"
                                    }
                                  ],
                                  "id": 62773,
                                  "name": "RecordUpdated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65444,
                                  "src": "5718:13:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                                  }
                                },
                                "id": 62777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5718:36:95",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 62778,
                              "nodeType": "EmitStatement",
                              "src": "5713:41:95"
                            }
                          ]
                        }
                      },
                      {
                        "id": 62784,
                        "nodeType": "UncheckedBlock",
                        "src": "5771:32:95",
                        "statements": [
                          {
                            "expression": {
                              "id": 62782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "5791:3:95",
                              "subExpression": {
                                "id": 62781,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62746,
                                "src": "5793:1:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 62783,
                            "nodeType": "ExpressionStatement",
                            "src": "5791:3:95"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 62748,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62746,
                      "src": "5564:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 62749,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62714,
                        "src": "5568:3:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 62750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5572:6:95",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5568:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5564:14:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62786,
                  "initializationExpression": {
                    "assignments": [
                      62746
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 62746,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5561:1:95",
                        "nodeType": "VariableDeclaration",
                        "scope": 62786,
                        "src": "5553:9:95",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5553:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 62747,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5553:9:95"
                  },
                  "nodeType": "ForStatement",
                  "src": "5548:261:95"
                }
              ]
            },
            "baseFunctions": [
              65605
            ],
            "documentation": {
              "id": 62711,
              "nodeType": "StructuredDocumentation",
              "src": "5251:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "ec63b01f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 62719,
                    "name": "PROTECTED_SETTLER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62181,
                    "src": "5364:22:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 62720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62718,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5355:8:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48565,
                  "src": "5355:8:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "5355:32:95"
              }
            ],
            "name": "bulkSetProtected",
            "nameLocation": "5289:16:95",
            "parameters": {
              "id": 62717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62714,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "5325:3:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62788,
                  "src": "5306:22:95",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62712,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5306:7:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 62713,
                    "nodeType": "ArrayTypeName",
                    "src": "5306:9:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62716,
                  "mutability": "mutable",
                  "name": "protected",
                  "nameLocation": "5335:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62788,
                  "src": "5330:14:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62715,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5330:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5305:40:95"
            },
            "returnParameters": {
              "id": 62721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5388:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62905,
            "nodeType": "FunctionDefinition",
            "src": "5846:940:95",
            "nodes": [],
            "body": {
              "id": 62904,
              "nodeType": "Block",
              "src": "6008:778:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62808,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "6028:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62904,
                      "src": "6014:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62807,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62806,
                          "name": "Record",
                          "nameLocations": [
                            "6014:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "6014:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "6014:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62809,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6014:20:95"
                },
                {
                  "assignments": [
                    62812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62812,
                      "mutability": "mutable",
                      "name": "sMutRecord",
                      "nameLocation": "6062:10:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 62904,
                      "src": "6040:32:95",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MutableRecord_$65412_storage_ptr",
                        "typeString": "struct INSUnified.MutableRecord"
                      },
                      "typeName": {
                        "id": 62811,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62810,
                          "name": "MutableRecord",
                          "nameLocations": [
                            "6040:13:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65412,
                          "src": "6040:13:95"
                        },
                        "referencedDeclaration": 65412,
                        "src": "6040:13:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage_ptr",
                          "typeString": "struct INSUnified.MutableRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62817,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 62813,
                        "name": "_recordOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62201,
                        "src": "6075:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                          "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                        }
                      },
                      "id": 62815,
                      "indexExpression": {
                        "id": 62814,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62791,
                        "src": "6085:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6075:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_storage",
                        "typeString": "struct INSUnified.Record storage ref"
                      }
                    },
                    "id": 62816,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6089:3:95",
                    "memberName": "mut",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 65418,
                    "src": "6075:17:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                      "typeString": "struct INSUnified.MutableRecord storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6040:52:95"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62820,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "6120:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6135:9:95",
                            "memberName": "Protected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66608,
                            "src": "6120:24:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6145:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "6120:34:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6120:36:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "expression": {
                        "id": 62818,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62794,
                        "src": "6103:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "id": 62819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6113:6:95",
                      "memberName": "hasAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70203,
                      "src": "6103:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                        "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                      }
                    },
                    "id": 62824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6103:54:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62837,
                  "nodeType": "IfStatement",
                  "src": "6099:140:95",
                  "trueBody": {
                    "id": 62836,
                    "nodeType": "Block",
                    "src": "6159:80:95",
                    "statements": [
                      {
                        "expression": {
                          "id": 62834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 62825,
                              "name": "sMutRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62812,
                              "src": "6167:10:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MutableRecord_$65412_storage_ptr",
                                "typeString": "struct INSUnified.MutableRecord storage pointer"
                              }
                            },
                            "id": 62827,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6178:9:95",
                            "memberName": "protected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65411,
                            "src": "6167:20:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 62833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "expression": {
                                  "id": 62828,
                                  "name": "record",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62808,
                                  "src": "6190:6:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                                    "typeString": "struct INSUnified.Record memory"
                                  }
                                },
                                "id": 62829,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6197:3:95",
                                "memberName": "mut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65418,
                                "src": "6190:10:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                                  "typeString": "struct INSUnified.MutableRecord memory"
                                }
                              },
                              "id": 62830,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "6201:9:95",
                              "memberName": "protected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65411,
                              "src": "6190:20:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 62831,
                                "name": "mutRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62797,
                                "src": "6213:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_calldata_ptr",
                                  "typeString": "struct INSUnified.MutableRecord calldata"
                                }
                              },
                              "id": 62832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6223:9:95",
                              "memberName": "protected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65411,
                              "src": "6213:19:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6190:42:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6167:65:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 62835,
                        "nodeType": "ExpressionStatement",
                        "src": "6167:65:95"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62840,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "6265:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6280:6:95",
                            "memberName": "Expiry",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66607,
                            "src": "6265:21:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6287:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "6265:31:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6265:33:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "expression": {
                        "id": 62838,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62794,
                        "src": "6248:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "id": 62839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6258:6:95",
                      "memberName": "hasAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70203,
                      "src": "6248:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                        "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                      }
                    },
                    "id": 62844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:51:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62856,
                  "nodeType": "IfStatement",
                  "src": "6244:124:95",
                  "trueBody": {
                    "id": 62855,
                    "nodeType": "Block",
                    "src": "6301:67:95",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 62846,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62791,
                              "src": "6320:2:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 62852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "expression": {
                                    "id": 62847,
                                    "name": "record",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62808,
                                    "src": "6324:6:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                                      "typeString": "struct INSUnified.Record memory"
                                    }
                                  },
                                  "id": 62848,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6331:3:95",
                                  "memberName": "mut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65418,
                                  "src": "6324:10:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                                    "typeString": "struct INSUnified.MutableRecord memory"
                                  }
                                },
                                "id": 62849,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "6335:6:95",
                                "memberName": "expiry",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65409,
                                "src": "6324:17:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 62850,
                                  "name": "mutRecord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62797,
                                  "src": "6344:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_MutableRecord_$65412_calldata_ptr",
                                    "typeString": "struct INSUnified.MutableRecord calldata"
                                  }
                                },
                                "id": 62851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6354:6:95",
                                "memberName": "expiry",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65409,
                                "src": "6344:16:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "src": "6324:36:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 62845,
                            "name": "_setExpiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63286,
                            "src": "6309:10:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                              "typeString": "function (uint256,uint64)"
                            }
                          },
                          "id": 62853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6309:52:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62854,
                        "nodeType": "ExpressionStatement",
                        "src": "6309:52:95"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62859,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "6394:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6409:8:95",
                            "memberName": "Resolver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66605,
                            "src": "6394:23:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6418:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "6394:33:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6394:35:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "expression": {
                        "id": 62857,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62794,
                        "src": "6377:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "id": 62858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6387:6:95",
                      "memberName": "hasAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70203,
                      "src": "6377:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                        "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                      }
                    },
                    "id": 62863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6377:53:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62876,
                  "nodeType": "IfStatement",
                  "src": "6373:136:95",
                  "trueBody": {
                    "id": 62875,
                    "nodeType": "Block",
                    "src": "6432:77:95",
                    "statements": [
                      {
                        "expression": {
                          "id": 62873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 62864,
                              "name": "sMutRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62812,
                              "src": "6440:10:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MutableRecord_$65412_storage_ptr",
                                "typeString": "struct INSUnified.MutableRecord storage pointer"
                              }
                            },
                            "id": 62866,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6451:8:95",
                            "memberName": "resolver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65405,
                            "src": "6440:19:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 62872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "expression": {
                                  "id": 62867,
                                  "name": "record",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62808,
                                  "src": "6462:6:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                                    "typeString": "struct INSUnified.Record memory"
                                  }
                                },
                                "id": 62868,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6469:3:95",
                                "memberName": "mut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65418,
                                "src": "6462:10:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                                  "typeString": "struct INSUnified.MutableRecord memory"
                                }
                              },
                              "id": 62869,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberLocation": "6473:8:95",
                              "memberName": "resolver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65405,
                              "src": "6462:19:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 62870,
                                "name": "mutRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62797,
                                "src": "6484:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_calldata_ptr",
                                  "typeString": "struct INSUnified.MutableRecord calldata"
                                }
                              },
                              "id": 62871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6494:8:95",
                              "memberName": "resolver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65405,
                              "src": "6484:18:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "6462:40:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6440:62:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 62874,
                        "nodeType": "ExpressionStatement",
                        "src": "6440:62:95"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62878,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62791,
                        "src": "6533:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62879,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62794,
                        "src": "6537:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 62880,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62808,
                        "src": "6548:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 62877,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "6519:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 62881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6519:36:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62882,
                  "nodeType": "EmitStatement",
                  "src": "6514:41:95"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 62885,
                              "name": "ModifyingField",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66609,
                              "src": "6669:14:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                "typeString": "type(enum ModifyingField)"
                              }
                            },
                            "id": 62886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6684:5:95",
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66606,
                            "src": "6669:20:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ModifyingField_$66609",
                              "typeString": "enum ModifyingField"
                            }
                          },
                          "id": 62887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6690:9:95",
                          "memberName": "indicator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66629,
                          "src": "6669:30:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                          }
                        },
                        "id": 62888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6669:32:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "expression": {
                        "id": 62883,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62794,
                        "src": "6652:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "id": 62884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6662:6:95",
                      "memberName": "hasAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70203,
                      "src": "6652:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                        "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                      }
                    },
                    "id": 62889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6652:50:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62903,
                  "nodeType": "IfStatement",
                  "src": "6648:134:95",
                  "trueBody": {
                    "id": 62902,
                    "nodeType": "Block",
                    "src": "6704:78:95",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 62891,
                                    "name": "_recordOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62201,
                                    "src": "6726:9:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                      "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                    }
                                  },
                                  "id": 62893,
                                  "indexExpression": {
                                    "id": 62892,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62791,
                                    "src": "6736:2:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6726:13:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Record_$65419_storage",
                                    "typeString": "struct INSUnified.Record storage ref"
                                  }
                                },
                                "id": 62894,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6740:3:95",
                                "memberName": "mut",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65418,
                                "src": "6726:17:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                                  "typeString": "struct INSUnified.MutableRecord storage ref"
                                }
                              },
                              "id": 62895,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6744:5:95",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65407,
                              "src": "6726:23:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 62896,
                                "name": "mutRecord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62797,
                                "src": "6751:9:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MutableRecord_$65412_calldata_ptr",
                                  "typeString": "struct INSUnified.MutableRecord calldata"
                                }
                              },
                              "id": 62897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6761:5:95",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65407,
                              "src": "6751:15:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 62898,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62791,
                              "src": "6768:2:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 62899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6772:2:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 62890,
                            "name": "_safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50828,
                            "src": "6712:13:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,bytes memory)"
                            }
                          },
                          "id": 62900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6712:63:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62901,
                        "nodeType": "ExpressionStatement",
                        "src": "6712:63:95"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              65570
            ],
            "documentation": {
              "id": 62789,
              "nodeType": "StructuredDocumentation",
              "src": "5817:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "1cfa6ec0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62800,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62799,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5958:13:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50275,
                  "src": "5958:13:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "5958:13:95"
              },
              {
                "arguments": [
                  {
                    "id": 62802,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62791,
                    "src": "5991:2:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 62803,
                    "name": "indicator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62794,
                    "src": "5995:9:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  }
                ],
                "id": 62804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62801,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "5976:14:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62215,
                  "src": "5976:14:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "5976:29:95"
              }
            ],
            "name": "setRecord",
            "nameLocation": "5855:9:95",
            "parameters": {
              "id": 62798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62791,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5873:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62905,
                  "src": "5865:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5865:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62794,
                  "mutability": "mutable",
                  "name": "indicator",
                  "nameLocation": "5896:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62905,
                  "src": "5877:28:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                    "typeString": "ModifyingIndicator"
                  },
                  "typeName": {
                    "id": 62793,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62792,
                      "name": "ModifyingIndicator",
                      "nameLocations": [
                        "5877:18:95"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69989,
                      "src": "5877:18:95"
                    },
                    "referencedDeclaration": 69989,
                    "src": "5877:18:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62797,
                  "mutability": "mutable",
                  "name": "mutRecord",
                  "nameLocation": "5930:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62905,
                  "src": "5907:32:95",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MutableRecord_$65412_calldata_ptr",
                    "typeString": "struct INSUnified.MutableRecord"
                  },
                  "typeName": {
                    "id": 62796,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62795,
                      "name": "MutableRecord",
                      "nameLocations": [
                        "5907:13:95"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65412,
                      "src": "5907:13:95"
                    },
                    "referencedDeclaration": 65412,
                    "src": "5907:13:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MutableRecord_$65412_storage_ptr",
                      "typeString": "struct INSUnified.MutableRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5864:76:95"
            },
            "returnParameters": {
              "id": 62805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6008:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62929,
            "nodeType": "FunctionDefinition",
            "src": "6832:182:95",
            "nodes": [],
            "body": {
              "id": 62928,
              "nodeType": "Block",
              "src": "6940:74:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 62919,
                          "name": "_recordOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62201,
                          "src": "6964:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                            "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                          }
                        },
                        "id": 62921,
                        "indexExpression": {
                          "id": 62920,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62908,
                          "src": "6974:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6964:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage",
                          "typeString": "struct INSUnified.Record storage ref"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 62922,
                          "name": "nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "6984:6:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 62924,
                        "indexExpression": {
                          "id": 62923,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62908,
                          "src": "6991:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6984:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62925,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62908,
                        "src": "7001:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_storage",
                          "typeString": "struct INSUnified.Record storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 62917,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6953:3:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 62918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6957:6:95",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "6953:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 62926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6953:56:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 62916,
                  "id": 62927,
                  "nodeType": "Return",
                  "src": "6946:63:95"
                }
              ]
            },
            "baseFunctions": [
              500
            ],
            "documentation": {
              "id": 62906,
              "nodeType": "StructuredDocumentation",
              "src": "6790:39:95",
              "text": " @inheritdoc IERC721State"
            },
            "functionSelector": "131a7e24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 62912,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62908,
                    "src": "6908:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 62913,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62911,
                  "name": "onlyMinted",
                  "nameLocations": [
                    "6897:10:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61917,
                  "src": "6897:10:95"
                },
                "nodeType": "ModifierInvocation",
                "src": "6897:19:95"
              }
            ],
            "name": "stateOf",
            "nameLocation": "6841:7:95",
            "overrides": {
              "id": 62910,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6888:8:95"
            },
            "parameters": {
              "id": 62909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62908,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6857:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 62929,
                  "src": "6849:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6849:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6848:17:95"
            },
            "returnParameters": {
              "id": 62916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62915,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62929,
                  "src": "6926:12:95",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62914,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6926:5:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6925:14:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 63034,
            "nodeType": "FunctionDefinition",
            "src": "7047:896:95",
            "nodes": [],
            "body": {
              "id": 63033,
              "nodeType": "Block",
              "src": "7187:756:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 62946,
                        "name": "IMMUTABLE_FIELDS_INDICATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70025,
                        "src": "7214:26:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "expression": {
                        "id": 62944,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62937,
                        "src": "7197:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "id": 62945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7207:6:95",
                      "memberName": "hasAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70203,
                      "src": "7197:16:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                        "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                      }
                    },
                    "id": 62947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7197:44:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62954,
                  "nodeType": "IfStatement",
                  "src": "7193:113:95",
                  "trueBody": {
                    "id": 62953,
                    "nodeType": "Block",
                    "src": "7243:63:95",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 62948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7259:5:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 62949,
                                "name": "CannotSetImmutableField",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65385,
                                "src": "7266:23:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 62950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7290:8:95",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7266:32:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "id": 62951,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7258:41:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes4_$",
                            "typeString": "tuple(bool,bytes4)"
                          }
                        },
                        "functionReturnParameters": 62943,
                        "id": 62952,
                        "nodeType": "Return",
                        "src": "7251:48:95"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 62958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7315:12:95",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 62956,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62934,
                          "src": "7324:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 62955,
                        "name": "_exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50859,
                        "src": "7316:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 62957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7316:11:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62964,
                  "nodeType": "IfStatement",
                  "src": "7311:51:95",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 62959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7337:5:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "expression": {
                            "id": 62960,
                            "name": "Unexists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65368,
                            "src": "7344:8:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 62961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7353:8:95",
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "7344:17:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "id": 62962,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7336:26:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes4_$",
                        "typeString": "tuple(bool,bytes4)"
                      }
                    },
                    "functionReturnParameters": 62943,
                    "id": 62963,
                    "nodeType": "Return",
                    "src": "7329:33:95"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 62977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 62967,
                                "name": "ModifyingField",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66609,
                                "src": "7389:14:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                  "typeString": "type(enum ModifyingField)"
                                }
                              },
                              "id": 62968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7404:9:95",
                              "memberName": "Protected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66608,
                              "src": "7389:24:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ModifyingField_$66609",
                                "typeString": "enum ModifyingField"
                              }
                            },
                            "id": 62969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7414:9:95",
                            "memberName": "indicator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66629,
                            "src": "7389:34:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                              "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                            }
                          },
                          "id": 62970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7389:36:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        ],
                        "expression": {
                          "id": 62965,
                          "name": "indicator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62937,
                          "src": "7372:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        },
                        "id": 62966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7382:6:95",
                        "memberName": "hasAny",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70203,
                        "src": "7372:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                          "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                        }
                      },
                      "id": 62971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7372:54:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 62976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7430:43:95",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 62973,
                            "name": "PROTECTED_SETTLER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62181,
                            "src": "7439:22:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 62974,
                            "name": "requester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62932,
                            "src": "7463:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 62972,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48606,
                          "src": "7431:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 62975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7431:42:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7372:101:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62984,
                  "nodeType": "IfStatement",
                  "src": "7368:174:95",
                  "trueBody": {
                    "id": 62983,
                    "nodeType": "Block",
                    "src": "7475:67:95",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 62978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7491:5:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 62979,
                                "name": "MissingProtectedSettlerRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65388,
                                "src": "7498:27:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 62980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7526:8:95",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7498:36:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "id": 62981,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7490:45:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes4_$",
                            "typeString": "tuple(bool,bytes4)"
                          }
                        },
                        "functionReturnParameters": 62943,
                        "id": 62982,
                        "nodeType": "Return",
                        "src": "7483:52:95"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    62986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62986,
                      "mutability": "mutable",
                      "name": "hasControllerRole",
                      "nameLocation": "7552:17:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63033,
                      "src": "7547:22:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 62985,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7547:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 62988,
                        "name": "CONTROLLER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62171,
                        "src": "7580:15:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 62989,
                        "name": "requester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62932,
                        "src": "7597:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62987,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48606,
                      "src": "7572:7:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 62990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7572:35:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7547:60:95"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 62994,
                                "name": "ModifyingField",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66609,
                                "src": "7634:14:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                  "typeString": "type(enum ModifyingField)"
                                }
                              },
                              "id": 62995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7649:6:95",
                              "memberName": "Expiry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66607,
                              "src": "7634:21:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ModifyingField_$66609",
                                "typeString": "enum ModifyingField"
                              }
                            },
                            "id": 62996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7656:9:95",
                            "memberName": "indicator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66629,
                            "src": "7634:31:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                              "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                            }
                          },
                          "id": 62997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7634:33:95",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        ],
                        "expression": {
                          "id": 62992,
                          "name": "indicator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62937,
                          "src": "7617:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        },
                        "id": 62993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7627:6:95",
                        "memberName": "hasAny",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70203,
                        "src": "7617:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                          "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                        }
                      },
                      "id": 62998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7617:51:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 63000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7672:18:95",
                      "subExpression": {
                        "id": 62999,
                        "name": "hasControllerRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62986,
                        "src": "7673:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7617:73:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63008,
                  "nodeType": "IfStatement",
                  "src": "7613:140:95",
                  "trueBody": {
                    "id": 63007,
                    "nodeType": "Block",
                    "src": "7692:61:95",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 63002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7708:5:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 63003,
                                "name": "MissingControllerRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65382,
                                "src": "7715:21:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 63004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7737:8:95",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7715:30:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "id": 63005,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7707:39:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes4_$",
                            "typeString": "tuple(bool,bytes4)"
                          }
                        },
                        "functionReturnParameters": 62943,
                        "id": 63006,
                        "nodeType": "Return",
                        "src": "7700:46:95"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 63011,
                          "name": "USER_FIELDS_INDICATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70033,
                          "src": "7779:21:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        ],
                        "expression": {
                          "id": 63009,
                          "name": "indicator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62937,
                          "src": "7762:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        },
                        "id": 63010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7772:6:95",
                        "memberName": "hasAny",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70203,
                        "src": "7762:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_ModifyingIndicator_$69989_$",
                          "typeString": "function (ModifyingIndicator,ModifyingIndicator) pure returns (bool)"
                        }
                      },
                      "id": 63012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7762:39:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 63020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7805:55:95",
                      "subExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 63018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 63013,
                              "name": "hasControllerRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62986,
                              "src": "7807:17:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 63015,
                                  "name": "requester",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62932,
                                  "src": "7845:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 63016,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62934,
                                  "src": "7856:2:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 63014,
                                "name": "_checkOwnerRules",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63188,
                                "src": "7828:16:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) view returns (bool)"
                                }
                              },
                              "id": 63017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7828:31:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7807:52:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 63019,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7806:54:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7762:98:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63028,
                  "nodeType": "IfStatement",
                  "src": "7758:156:95",
                  "trueBody": {
                    "id": 63027,
                    "nodeType": "Block",
                    "src": "7862:52:95",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "hexValue": "66616c7365",
                              "id": 63022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7878:5:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 63023,
                                "name": "Unauthorized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65379,
                                "src": "7885:12:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 63024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7898:8:95",
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7885:21:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "id": 63025,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7877:30:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes4_$",
                            "typeString": "tuple(bool,bytes4)"
                          }
                        },
                        "functionReturnParameters": 62943,
                        "id": 63026,
                        "nodeType": "Return",
                        "src": "7870:37:95"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 63029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7928:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "307830",
                        "id": 63030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7934:3:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0x0"
                      }
                    ],
                    "id": 63031,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7927:11:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                      "typeString": "tuple(bool,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 62943,
                  "id": 63032,
                  "nodeType": "Return",
                  "src": "7920:18:95"
                }
              ]
            },
            "baseFunctions": [
              65558
            ],
            "documentation": {
              "id": 62930,
              "nodeType": "StructuredDocumentation",
              "src": "7018:26:95",
              "text": "@inheritdoc INSUnified"
            },
            "functionSelector": "fd3fa919",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canSetRecord",
            "nameLocation": "7056:12:95",
            "parameters": {
              "id": 62938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62932,
                  "mutability": "mutable",
                  "name": "requester",
                  "nameLocation": "7077:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63034,
                  "src": "7069:17:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7069:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62934,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7096:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63034,
                  "src": "7088:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7088:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62937,
                  "mutability": "mutable",
                  "name": "indicator",
                  "nameLocation": "7119:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63034,
                  "src": "7100:28:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                    "typeString": "ModifyingIndicator"
                  },
                  "typeName": {
                    "id": 62936,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62935,
                      "name": "ModifyingIndicator",
                      "nameLocations": [
                        "7100:18:95"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69989,
                      "src": "7100:18:95"
                    },
                    "referencedDeclaration": 69989,
                    "src": "7100:18:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7068:61:95"
            },
            "returnParameters": {
              "id": 62943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62940,
                  "mutability": "mutable",
                  "name": "allowed",
                  "nameLocation": "7168:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63034,
                  "src": "7163:12:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62939,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7163:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63034,
                  "src": "7177:6:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 62941,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7162:22:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63060,
            "nodeType": "FunctionDefinition",
            "src": "7985:180:95",
            "nodes": [],
            "body": {
              "id": 63059,
              "nodeType": "Block",
              "src": "8075:90:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 63046,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63037,
                        "src": "8096:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63045,
                      "name": "_isExpired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63100,
                      "src": "8085:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 63047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8085:19:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63053,
                  "nodeType": "IfStatement",
                  "src": "8081:44:95",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 63050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8121:3:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 63049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8113:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8113:7:95",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 63051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8113:12:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "functionReturnParameters": 63044,
                    "id": 63052,
                    "nodeType": "Return",
                    "src": "8106:19:95"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63056,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63037,
                        "src": "8152:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63054,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8138:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RNSUnified_$63415_$",
                          "typeString": "type(contract super RNSUnified)"
                        }
                      },
                      "id": 63055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8144:7:95",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50559,
                      "src": "8138:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 63057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8138:22:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63044,
                  "id": 63058,
                  "nodeType": "Return",
                  "src": "8131:29:95"
                }
              ]
            },
            "baseFunctions": [
              50559,
              51389
            ],
            "documentation": {
              "id": 63035,
              "nodeType": "StructuredDocumentation",
              "src": "7947:35:95",
              "text": "@dev Override {ERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "7994:7:95",
            "overrides": {
              "id": 63041,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 63039,
                  "name": "ERC721",
                  "nameLocations": [
                    "8040:6:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51340,
                  "src": "8040:6:95"
                },
                {
                  "id": 63040,
                  "name": "IERC721",
                  "nameLocations": [
                    "8048:7:95"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51456,
                  "src": "8048:7:95"
                }
              ],
              "src": "8031:25:95"
            },
            "parameters": {
              "id": 63038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63037,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8010:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63060,
                  "src": "8002:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8002:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8001:17:95"
            },
            "returnParameters": {
              "id": 63044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63060,
                  "src": "8066:7:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8066:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8065:9:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63084,
            "nodeType": "FunctionDefinition",
            "src": "8218:211:95",
            "nodes": [],
            "body": {
              "id": 63083,
              "nodeType": "Block",
              "src": "8326:103:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 63072,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63065,
                        "src": "8347:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63071,
                      "name": "_isExpired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63100,
                      "src": "8336:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 63073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8336:19:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63076,
                  "nodeType": "IfStatement",
                  "src": "8332:37:95",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 63074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8364:5:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 63070,
                    "id": 63075,
                    "nodeType": "Return",
                    "src": "8357:12:95"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63079,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63063,
                        "src": "8407:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63080,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63065,
                        "src": "8416:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63077,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8382:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RNSUnified_$63415_$",
                          "typeString": "type(contract super RNSUnified)"
                        }
                      },
                      "id": 63078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8388:18:95",
                      "memberName": "_isApprovedOrOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50893,
                      "src": "8382:24:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view returns (bool)"
                      }
                    },
                    "id": 63081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:42:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63070,
                  "id": 63082,
                  "nodeType": "Return",
                  "src": "8375:49:95"
                }
              ]
            },
            "baseFunctions": [
              50893
            ],
            "documentation": {
              "id": 63061,
              "nodeType": "StructuredDocumentation",
              "src": "8169:46:95",
              "text": "@dev Override {ERC721-_isApprovedOrOwner}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "8227:18:95",
            "overrides": {
              "id": 63067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8302:8:95"
            },
            "parameters": {
              "id": 63066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63063,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8254:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63084,
                  "src": "8246:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8246:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63065,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8271:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63084,
                  "src": "8263:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8263:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8245:34:95"
            },
            "returnParameters": {
              "id": 63070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63084,
                  "src": "8320:4:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63068,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8320:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8319:6:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 63100,
            "nodeType": "FunctionDefinition",
            "src": "8505:108:95",
            "nodes": [],
            "body": {
              "id": 63099,
              "nodeType": "Block",
              "src": "8566:47:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 63092,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8579:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 63093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8585:9:95",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8579:15:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 63095,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63087,
                          "src": "8605:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 63094,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63124,
                        "src": "8597:7:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint256) view returns (uint64)"
                        }
                      },
                      "id": 63096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8597:11:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "8579:29:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63091,
                  "id": 63098,
                  "nodeType": "Return",
                  "src": "8572:36:95"
                }
              ]
            },
            "documentation": {
              "id": 63085,
              "nodeType": "StructuredDocumentation",
              "src": "8433:69:95",
              "text": " @dev Helper method to check whether the id is expired."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isExpired",
            "nameLocation": "8514:10:95",
            "parameters": {
              "id": 63088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63087,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8533:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63100,
                  "src": "8525:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8525:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8524:12:95"
            },
            "returnParameters": {
              "id": 63091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63100,
                  "src": "8560:4:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8560:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8559:6:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63124,
            "nodeType": "FunctionDefinition",
            "src": "8695:170:95",
            "nodes": [],
            "body": {
              "id": 63123,
              "nodeType": "Block",
              "src": "8755:110:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 63109,
                        "name": "RESERVATION_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62176,
                        "src": "8773:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63111,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63103,
                            "src": "8800:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 63110,
                          "name": "_ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50841,
                          "src": "8791:8:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 63112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8791:12:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63108,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48606,
                      "src": "8765:7:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 63113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8765:39:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63116,
                  "nodeType": "IfStatement",
                  "src": "8761:62:95",
                  "trueBody": {
                    "expression": {
                      "id": 63114,
                      "name": "MAX_EXPIRY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62188,
                      "src": "8813:10:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "functionReturnParameters": 63107,
                    "id": 63115,
                    "nodeType": "Return",
                    "src": "8806:17:95"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "id": 63117,
                          "name": "_recordOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62201,
                          "src": "8836:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                            "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                          }
                        },
                        "id": 63119,
                        "indexExpression": {
                          "id": 63118,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63103,
                          "src": "8846:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8836:13:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage",
                          "typeString": "struct INSUnified.Record storage ref"
                        }
                      },
                      "id": 63120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8850:3:95",
                      "memberName": "mut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65418,
                      "src": "8836:17:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                        "typeString": "struct INSUnified.MutableRecord storage ref"
                      }
                    },
                    "id": 63121,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8854:6:95",
                    "memberName": "expiry",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 65409,
                    "src": "8836:24:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 63107,
                  "id": 63122,
                  "nodeType": "Return",
                  "src": "8829:31:95"
                }
              ]
            },
            "documentation": {
              "id": 63101,
              "nodeType": "StructuredDocumentation",
              "src": "8617:75:95",
              "text": " @dev Helper method to calculate expiry time for specific id."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_expiry",
            "nameLocation": "8704:7:95",
            "parameters": {
              "id": 63104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63103,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8720:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63124,
                  "src": "8712:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8712:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8711:12:95"
            },
            "returnParameters": {
              "id": 63107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63124,
                  "src": "8747:6:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 63105,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8747:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8746:8:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63167,
            "nodeType": "FunctionDefinition",
            "src": "8960:278:95",
            "nodes": [],
            "body": {
              "id": 63166,
              "nodeType": "Block",
              "src": "9045:193:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63135,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9059:5:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63166,
                      "src": "9051:13:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63134,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9051:7:95",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63136,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9051:13:95"
                },
                {
                  "body": {
                    "id": 63162,
                    "nodeType": "Block",
                    "src": "9087:128:95",
                    "statements": [
                      {
                        "expression": {
                          "id": 63146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63140,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63135,
                            "src": "9095:5:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 63141,
                                  "name": "_recordOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62201,
                                  "src": "9103:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                    "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                  }
                                },
                                "id": 63143,
                                "indexExpression": {
                                  "id": 63142,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63129,
                                  "src": "9113:2:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9103:13:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$65419_storage",
                                  "typeString": "struct INSUnified.Record storage ref"
                                }
                              },
                              "id": 63144,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9117:3:95",
                              "memberName": "mut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65418,
                              "src": "9103:17:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                                "typeString": "struct INSUnified.MutableRecord storage ref"
                              }
                            },
                            "id": 63145,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9121:5:95",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65407,
                            "src": "9103:23:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9095:31:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 63147,
                        "nodeType": "ExpressionStatement",
                        "src": "9095:31:95"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 63150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63148,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63135,
                            "src": "9138:5:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 63149,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63127,
                            "src": "9147:7:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9138:16:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 63153,
                        "nodeType": "IfStatement",
                        "src": "9134:33:95",
                        "trueBody": {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 63151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9163:4:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 63133,
                          "id": 63152,
                          "nodeType": "Return",
                          "src": "9156:11:95"
                        }
                      },
                      {
                        "expression": {
                          "id": 63160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63154,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63129,
                            "src": "9175:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 63155,
                                  "name": "_recordOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62201,
                                  "src": "9180:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                    "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                  }
                                },
                                "id": 63157,
                                "indexExpression": {
                                  "id": 63156,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63129,
                                  "src": "9190:2:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9180:13:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$65419_storage",
                                  "typeString": "struct INSUnified.Record storage ref"
                                }
                              },
                              "id": 63158,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9194:5:95",
                              "memberName": "immut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65415,
                              "src": "9180:19:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage",
                                "typeString": "struct INSUnified.ImmutableRecord storage ref"
                              }
                            },
                            "id": 63159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9200:8:95",
                            "memberName": "parentId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65399,
                            "src": "9180:28:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9175:33:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63161,
                        "nodeType": "ExpressionStatement",
                        "src": "9175:33:95"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63137,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63129,
                      "src": "9078:2:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 63138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9084:1:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9078:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63163,
                  "nodeType": "WhileStatement",
                  "src": "9071:144:95"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 63164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9228:5:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 63133,
                  "id": 63165,
                  "nodeType": "Return",
                  "src": "9221:12:95"
                }
              ]
            },
            "documentation": {
              "id": 63125,
              "nodeType": "StructuredDocumentation",
              "src": "8869:88:95",
              "text": " @dev Helper method to check whether the address is owner of parent token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isHierarchyOwner",
            "nameLocation": "8969:17:95",
            "parameters": {
              "id": 63130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63127,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8995:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63167,
                  "src": "8987:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8987:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63129,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "9012:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63167,
                  "src": "9004:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9004:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8986:29:95"
            },
            "returnParameters": {
              "id": 63133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63167,
                  "src": "9039:4:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9039:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9038:6:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63188,
            "nodeType": "FunctionDefinition",
            "src": "9405:167:95",
            "nodes": [],
            "body": {
              "id": 63187,
              "nodeType": "Block",
              "src": "9489:83:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 63178,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63170,
                          "src": "9521:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 63179,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63172,
                          "src": "9530:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 63177,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          63084
                        ],
                        "referencedDeclaration": 63084,
                        "src": "9502:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 63180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9502:31:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 63182,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63170,
                          "src": "9555:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 63183,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63172,
                          "src": "9564:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 63181,
                        "name": "_isHierarchyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63167,
                        "src": "9537:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) view returns (bool)"
                        }
                      },
                      "id": 63184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9537:30:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9502:65:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63176,
                  "id": 63186,
                  "nodeType": "Return",
                  "src": "9495:72:95"
                }
              ]
            },
            "documentation": {
              "id": 63168,
              "nodeType": "StructuredDocumentation",
              "src": "9242:160:95",
              "text": " @dev Returns whether the owner rules is satisfied.\n Returns true only if the spender is owner, or approved spender, or owner of parent token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOwnerRules",
            "nameLocation": "9414:16:95",
            "parameters": {
              "id": 63173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63170,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9439:7:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63188,
                  "src": "9431:15:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9431:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63172,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "9456:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63188,
                  "src": "9448:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9448:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9430:29:95"
            },
            "returnParameters": {
              "id": 63176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63175,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63188,
                  "src": "9483:4:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9483:4:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9482:6:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63214,
            "nodeType": "FunctionDefinition",
            "src": "9681:295:95",
            "nodes": [],
            "body": {
              "id": 63213,
              "nodeType": "Block",
              "src": "9765:211:95",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63198,
                    63200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63198,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "9777:7:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63213,
                      "src": "9772:12:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 63197,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9772:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 63200,
                      "mutability": "mutable",
                      "name": "errorCode",
                      "nameLocation": "9793:9:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63213,
                      "src": "9786:16:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 63199,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "9786:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63207,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63202,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52298,
                          "src": "9819:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9819:12:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63204,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63191,
                        "src": "9833:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63205,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63194,
                        "src": "9837:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      ],
                      "id": 63201,
                      "name": "canSetRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63034,
                      "src": "9806:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$returns$_t_bool_$_t_bytes4_$",
                        "typeString": "function (address,uint256,ModifyingIndicator) view returns (bool,bytes4)"
                      }
                    },
                    "id": 63206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9806:41:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes4_$",
                      "typeString": "tuple(bool,bytes4)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9771:76:95"
                },
                {
                  "condition": {
                    "id": 63209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9857:8:95",
                    "subExpression": {
                      "id": 63208,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63198,
                      "src": "9858:7:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63212,
                  "nodeType": "IfStatement",
                  "src": "9853:119:95",
                  "trueBody": {
                    "id": 63211,
                    "nodeType": "Block",
                    "src": "9867:105:95",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "9900:66:95",
                          "nodeType": "YulBlock",
                          "src": "9900:66:95",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9917:3:95",
                                    "nodeType": "YulLiteral",
                                    "src": "9917:3:95",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "name": "errorCode",
                                    "nativeSrc": "9922:9:95",
                                    "nodeType": "YulIdentifier",
                                    "src": "9922:9:95"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9910:6:95",
                                  "nodeType": "YulIdentifier",
                                  "src": "9910:6:95"
                                },
                                "nativeSrc": "9910:22:95",
                                "nodeType": "YulFunctionCall",
                                "src": "9910:22:95"
                              },
                              "nativeSrc": "9910:22:95",
                              "nodeType": "YulExpressionStatement",
                              "src": "9910:22:95"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9948:3:95",
                                    "nodeType": "YulLiteral",
                                    "src": "9948:3:95",
                                    "type": "",
                                    "value": "0x0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9953:4:95",
                                    "nodeType": "YulLiteral",
                                    "src": "9953:4:95",
                                    "type": "",
                                    "value": "0x04"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "9941:6:95",
                                  "nodeType": "YulIdentifier",
                                  "src": "9941:6:95"
                                },
                                "nativeSrc": "9941:17:95",
                                "nodeType": "YulFunctionCall",
                                "src": "9941:17:95"
                              },
                              "nativeSrc": "9941:17:95",
                              "nodeType": "YulExpressionStatement",
                              "src": "9941:17:95"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 63200,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9922:9:95",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 63210,
                        "nodeType": "InlineAssembly",
                        "src": "9875:91:95"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 63189,
              "nodeType": "StructuredDocumentation",
              "src": "9576:102:95",
              "text": " @dev Helper method to ensure msg.sender is authorized to modify record of the token id."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorized",
            "nameLocation": "9690:18:95",
            "parameters": {
              "id": 63195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63191,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "9717:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63214,
                  "src": "9709:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9709:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63194,
                  "mutability": "mutable",
                  "name": "indicator",
                  "nameLocation": "9740:9:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63214,
                  "src": "9721:28:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                    "typeString": "ModifyingIndicator"
                  },
                  "typeName": {
                    "id": 63193,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63192,
                      "name": "ModifyingIndicator",
                      "nameLocations": [
                        "9721:18:95"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69989,
                      "src": "9721:18:95"
                    },
                    "referencedDeclaration": 69989,
                    "src": "9721:18:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9708:42:95"
            },
            "returnParameters": {
              "id": 63196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9765:0:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63234,
            "nodeType": "FunctionDefinition",
            "src": "10081:159:95",
            "nodes": [],
            "body": {
              "id": 63233,
              "nodeType": "Block",
              "src": "10157:83:95",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 63228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63222,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63219,
                      "src": "10167:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 63223,
                            "name": "_recordOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62201,
                            "src": "10176:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                              "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                            }
                          },
                          "id": 63225,
                          "indexExpression": {
                            "id": 63224,
                            "name": "parentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63217,
                            "src": "10186:8:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10176:19:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_storage",
                            "typeString": "struct INSUnified.Record storage ref"
                          }
                        },
                        "id": 63226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10196:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "10176:23:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                          "typeString": "struct INSUnified.MutableRecord storage ref"
                        }
                      },
                      "id": 63227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10200:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "10176:30:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "10167:39:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63232,
                  "nodeType": "IfStatement",
                  "src": "10163:72:95",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63229,
                        "name": "ExceedParentExpiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65373,
                        "src": "10215:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 63230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10215:20:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 63231,
                    "nodeType": "RevertStatement",
                    "src": "10208:27:95"
                  }
                }
              ]
            },
            "documentation": {
              "id": 63215,
              "nodeType": "StructuredDocumentation",
              "src": "9980:98:95",
              "text": " @dev Helper method to ensure expiry of an id is lower or equal expiry of parent id."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireValidExpiry",
            "nameLocation": "10090:19:95",
            "parameters": {
              "id": 63220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63217,
                  "mutability": "mutable",
                  "name": "parentId",
                  "nameLocation": "10118:8:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63234,
                  "src": "10110:16:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10110:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63219,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "10135:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63234,
                  "src": "10128:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 63218,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10128:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10109:33:95"
            },
            "returnParameters": {
              "id": 63221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10157:0:95"
            },
            "scope": 63415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63286,
            "nodeType": "FunctionDefinition",
            "src": "10484:369:95",
            "nodes": [],
            "body": {
              "id": 63285,
              "nodeType": "Block",
              "src": "10540:313:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 63243,
                              "name": "_recordOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62201,
                              "src": "10566:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                              }
                            },
                            "id": 63245,
                            "indexExpression": {
                              "id": 63244,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63237,
                              "src": "10576:2:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10566:13:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$65419_storage",
                              "typeString": "struct INSUnified.Record storage ref"
                            }
                          },
                          "id": 63246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10580:5:95",
                          "memberName": "immut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65415,
                          "src": "10566:19:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImmutableRecord_$65402_storage",
                            "typeString": "struct INSUnified.ImmutableRecord storage ref"
                          }
                        },
                        "id": 63247,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10586:8:95",
                        "memberName": "parentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65399,
                        "src": "10566:28:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63248,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63239,
                        "src": "10596:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 63242,
                      "name": "_requireValidExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63234,
                      "src": "10546:19:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64) view"
                      }
                    },
                    "id": 63249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10546:57:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63250,
                  "nodeType": "ExpressionStatement",
                  "src": "10546:57:95"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 63252,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63237,
                        "src": "10623:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63251,
                      "name": "available",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62322,
                      "src": "10613:9:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 63253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10613:13:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63257,
                  "nodeType": "IfStatement",
                  "src": "10609:63:95",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63254,
                        "name": "NameMustBeRegisteredOrInGracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65394,
                        "src": "10635:35:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 63255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10635:37:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 63256,
                    "nodeType": "RevertStatement",
                    "src": "10628:44:95"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 63264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63258,
                      "name": "expiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63239,
                      "src": "10682:6:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 63259,
                            "name": "_recordOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62201,
                            "src": "10692:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                              "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                            }
                          },
                          "id": 63261,
                          "indexExpression": {
                            "id": 63260,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63237,
                            "src": "10702:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10692:13:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_storage",
                            "typeString": "struct INSUnified.Record storage ref"
                          }
                        },
                        "id": 63262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10706:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "10692:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                          "typeString": "struct INSUnified.MutableRecord storage ref"
                        }
                      },
                      "id": 63263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10710:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "10692:24:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "10682:34:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63268,
                  "nodeType": "IfStatement",
                  "src": "10678:84:95",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63265,
                        "name": "ExpiryTimeMustBeLargerThanTheOldOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65391,
                        "src": "10725:35:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 63266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10725:37:95",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 63267,
                    "nodeType": "RevertStatement",
                    "src": "10718:44:95"
                  }
                },
                {
                  "assignments": [
                    63271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63271,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "10783:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63285,
                      "src": "10769:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 63270,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63269,
                          "name": "Record",
                          "nameLocations": [
                            "10769:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "10769:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "10769:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63272,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10769:20:95"
                },
                {
                  "expression": {
                    "id": 63283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 63273,
                            "name": "_recordOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62201,
                            "src": "10795:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                              "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                            }
                          },
                          "id": 63275,
                          "indexExpression": {
                            "id": 63274,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63237,
                            "src": "10805:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10795:13:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_storage",
                            "typeString": "struct INSUnified.Record storage ref"
                          }
                        },
                        "id": 63276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10809:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "10795:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                          "typeString": "struct INSUnified.MutableRecord storage ref"
                        }
                      },
                      "id": 63277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10813:6:95",
                      "memberName": "expiry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65409,
                      "src": "10795:24:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "expression": {
                            "id": 63278,
                            "name": "record",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63271,
                            "src": "10822:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                              "typeString": "struct INSUnified.Record memory"
                            }
                          },
                          "id": 63279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10829:3:95",
                          "memberName": "mut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65418,
                          "src": "10822:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                            "typeString": "struct INSUnified.MutableRecord memory"
                          }
                        },
                        "id": 63280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "10833:6:95",
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65409,
                        "src": "10822:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 63281,
                        "name": "expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63239,
                        "src": "10842:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "10822:26:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "10795:53:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 63284,
                  "nodeType": "ExpressionStatement",
                  "src": "10795:53:95"
                }
              ]
            },
            "documentation": {
              "id": 63235,
              "nodeType": "StructuredDocumentation",
              "src": "10244:237:95",
              "text": " @dev Helper method to set expiry time of a token.\n Requirement:\n - The token must be registered or in grace period.\n - Expiry time must be larger than the old one.\n Emits an event {RecordUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setExpiry",
            "nameLocation": "10493:10:95",
            "parameters": {
              "id": 63240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63237,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10512:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63286,
                  "src": "10504:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10504:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63239,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "10523:6:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63286,
                  "src": "10516:13:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 63238,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10516:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10503:27:95"
            },
            "returnParameters": {
              "id": 63241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10540:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63303,
            "nodeType": "FunctionDefinition",
            "src": "10961:147:95",
            "nodes": [],
            "body": {
              "id": 63302,
              "nodeType": "Block",
              "src": "11015:93:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63292,
                      "name": "_gracePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62195,
                      "src": "11021:12:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63293,
                      "name": "gracePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63289,
                      "src": "11036:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "11021:26:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 63295,
                  "nodeType": "ExpressionStatement",
                  "src": "11021:26:95"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63297,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52298,
                          "src": "11077:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11077:12:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63299,
                        "name": "gracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63289,
                        "src": "11091:11:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 63296,
                      "name": "GracePeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65433,
                      "src": "11058:18:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64)"
                      }
                    },
                    "id": 63300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11058:45:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63301,
                  "nodeType": "EmitStatement",
                  "src": "11053:50:95"
                }
              ]
            },
            "documentation": {
              "id": 63287,
              "nodeType": "StructuredDocumentation",
              "src": "10857:101:95",
              "text": " @dev Helper method to set grace period.\n Emits an event {GracePeriodUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setGracePeriod",
            "nameLocation": "10970:15:95",
            "parameters": {
              "id": 63290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63289,
                  "mutability": "mutable",
                  "name": "gracePeriod",
                  "nameLocation": "10993:11:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63303,
                  "src": "10986:18:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 63288,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "10986:6:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10985:20:95"
            },
            "returnParameters": {
              "id": 63291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11015:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63384,
            "nodeType": "FunctionDefinition",
            "src": "11152:518:95",
            "nodes": [],
            "body": {
              "id": 63383,
              "nodeType": "Block",
              "src": "11227:443:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63317,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63306,
                        "src": "11249:4:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63318,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63308,
                        "src": "11255:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63319,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63310,
                        "src": "11259:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63314,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11233:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RNSUnified_$63415_$",
                          "typeString": "type(contract super RNSUnified)"
                        }
                      },
                      "id": 63316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11239:9:95",
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51166,
                      "src": "11233:15:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 63320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11233:29:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63321,
                  "nodeType": "ExpressionStatement",
                  "src": "11233:29:95"
                },
                {
                  "assignments": [
                    63324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63324,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "11283:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63383,
                      "src": "11269:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 63323,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63322,
                          "name": "Record",
                          "nameLocations": [
                            "11269:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "11269:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "11269:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63325,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11269:20:95"
                },
                {
                  "assignments": [
                    63328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63328,
                      "mutability": "mutable",
                      "name": "indicator",
                      "nameLocation": "11314:9:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63383,
                      "src": "11295:28:95",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                        "typeString": "ModifyingIndicator"
                      },
                      "typeName": {
                        "id": 63327,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63326,
                          "name": "ModifyingIndicator",
                          "nameLocations": [
                            "11295:18:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69989,
                          "src": "11295:18:95"
                        },
                        "referencedDeclaration": 69989,
                        "src": "11295:18:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63333,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 63329,
                          "name": "ModifyingField",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66609,
                          "src": "11326:14:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                            "typeString": "type(enum ModifyingField)"
                          }
                        },
                        "id": 63330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "11341:5:95",
                        "memberName": "Owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66606,
                        "src": "11326:20:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ModifyingField_$66609",
                          "typeString": "enum ModifyingField"
                        }
                      },
                      "id": 63331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11347:9:95",
                      "memberName": "indicator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66629,
                      "src": "11326:30:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                        "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                      }
                    },
                    "id": 63332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11326:32:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                      "typeString": "ModifyingIndicator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11295:63:95"
                },
                {
                  "expression": {
                    "id": 63344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 63334,
                            "name": "_recordOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62201,
                            "src": "11365:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                              "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                            }
                          },
                          "id": 63336,
                          "indexExpression": {
                            "id": 63335,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63310,
                            "src": "11375:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11365:13:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_storage",
                            "typeString": "struct INSUnified.Record storage ref"
                          }
                        },
                        "id": 63337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11379:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "11365:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                          "typeString": "struct INSUnified.MutableRecord storage ref"
                        }
                      },
                      "id": 63338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11383:5:95",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65407,
                      "src": "11365:23:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "expression": {
                            "id": 63339,
                            "name": "record",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63324,
                            "src": "11391:6:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                              "typeString": "struct INSUnified.Record memory"
                            }
                          },
                          "id": 63340,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11398:3:95",
                          "memberName": "mut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65418,
                          "src": "11391:10:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MutableRecord_$65412_memory_ptr",
                            "typeString": "struct INSUnified.MutableRecord memory"
                          }
                        },
                        "id": 63341,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "11402:5:95",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65407,
                        "src": "11391:16:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 63342,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63308,
                        "src": "11410:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "11391:21:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11365:47:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63345,
                  "nodeType": "ExpressionStatement",
                  "src": "11365:47:95"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11422:46:95",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 63347,
                            "name": "PROTECTED_SETTLER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62181,
                            "src": "11431:22:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 63348,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52298,
                              "src": "11455:10:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 63349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11455:12:95",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 63346,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48606,
                          "src": "11423:7:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 63350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11423:45:95",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 63352,
                            "name": "_recordOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62201,
                            "src": "11472:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                              "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                            }
                          },
                          "id": 63354,
                          "indexExpression": {
                            "id": 63353,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63310,
                            "src": "11482:2:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11472:13:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$65419_storage",
                            "typeString": "struct INSUnified.Record storage ref"
                          }
                        },
                        "id": 63355,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11486:3:95",
                        "memberName": "mut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65418,
                        "src": "11472:17:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                          "typeString": "struct INSUnified.MutableRecord storage ref"
                        }
                      },
                      "id": 63356,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11490:9:95",
                      "memberName": "protected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65411,
                      "src": "11472:27:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11422:77:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63376,
                  "nodeType": "IfStatement",
                  "src": "11418:201:95",
                  "trueBody": {
                    "id": 63375,
                    "nodeType": "Block",
                    "src": "11501:118:95",
                    "statements": [
                      {
                        "expression": {
                          "id": 63364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 63358,
                                  "name": "_recordOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62201,
                                  "src": "11509:9:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                                    "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                                  }
                                },
                                "id": 63360,
                                "indexExpression": {
                                  "id": 63359,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63310,
                                  "src": "11519:2:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11509:13:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$65419_storage",
                                  "typeString": "struct INSUnified.Record storage ref"
                                }
                              },
                              "id": 63361,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11523:3:95",
                              "memberName": "mut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65418,
                              "src": "11509:17:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                                "typeString": "struct INSUnified.MutableRecord storage ref"
                              }
                            },
                            "id": 63362,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11527:9:95",
                            "memberName": "protected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65411,
                            "src": "11509:27:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 63363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11539:5:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "11509:35:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 63365,
                        "nodeType": "ExpressionStatement",
                        "src": "11509:35:95"
                      },
                      {
                        "expression": {
                          "id": 63373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63366,
                            "name": "indicator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63328,
                            "src": "11552:9:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                              "typeString": "ModifyingIndicator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                              "typeString": "ModifyingIndicator"
                            },
                            "function": 70156,
                            "id": 63372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 63367,
                              "name": "indicator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63328,
                              "src": "11564:9:95",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                                "typeString": "ModifyingIndicator"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "|",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "expression": {
                                    "id": 63368,
                                    "name": "ModifyingField",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66609,
                                    "src": "11576:14:95",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ModifyingField_$66609_$",
                                      "typeString": "type(enum ModifyingField)"
                                    }
                                  },
                                  "id": 63369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "11591:9:95",
                                  "memberName": "Protected",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66608,
                                  "src": "11576:24:95",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ModifyingField_$66609",
                                    "typeString": "enum ModifyingField"
                                  }
                                },
                                "id": 63370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11601:9:95",
                                "memberName": "indicator",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66629,
                                "src": "11576:34:95",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_enum$_ModifyingField_$66609_$returns$_t_userDefinedValueType$_ModifyingIndicator_$69989_$attached_to$_t_enum$_ModifyingField_$66609_$",
                                  "typeString": "function (enum ModifyingField) pure returns (ModifyingIndicator)"
                                }
                              },
                              "id": 63371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11576:36:95",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                                "typeString": "ModifyingIndicator"
                              }
                            },
                            "src": "11564:48:95",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                              "typeString": "ModifyingIndicator"
                            }
                          },
                          "src": "11552:60:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                            "typeString": "ModifyingIndicator"
                          }
                        },
                        "id": 63374,
                        "nodeType": "ExpressionStatement",
                        "src": "11552:60:95"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63378,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63310,
                        "src": "11643:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63379,
                        "name": "indicator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63328,
                        "src": "11647:9:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 63380,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63324,
                        "src": "11658:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 63377,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "11629:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 63381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11629:36:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63382,
                  "nodeType": "EmitStatement",
                  "src": "11624:41:95"
                }
              ]
            },
            "baseFunctions": [
              51166
            ],
            "documentation": {
              "id": 63304,
              "nodeType": "StructuredDocumentation",
              "src": "11112:37:95",
              "text": "@dev Override {ERC721-_transfer}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "11161:9:95",
            "overrides": {
              "id": 63312,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11218:8:95"
            },
            "parameters": {
              "id": 63311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63306,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11179:4:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63384,
                  "src": "11171:12:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11171:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63308,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11193:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63384,
                  "src": "11185:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11185:7:95",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63310,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "11205:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63384,
                  "src": "11197:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11197:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11170:38:95"
            },
            "returnParameters": {
              "id": 63313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11227:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63414,
            "nodeType": "FunctionDefinition",
            "src": "11710:186:95",
            "nodes": [],
            "body": {
              "id": 63413,
              "nodeType": "Block",
              "src": "11755:141:95",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63394,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63387,
                        "src": "11773:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63391,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11761:5:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RNSUnified_$63415_$",
                          "typeString": "type(contract super RNSUnified)"
                        }
                      },
                      "id": 63393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11767:5:95",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51081,
                      "src": "11761:11:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 63395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11761:15:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63396,
                  "nodeType": "ExpressionStatement",
                  "src": "11761:15:95"
                },
                {
                  "expression": {
                    "id": 63401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11782:24:95",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 63397,
                          "name": "_recordOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62201,
                          "src": "11789:9:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Record_$65419_storage_$",
                            "typeString": "mapping(uint256 => struct INSUnified.Record storage ref)"
                          }
                        },
                        "id": 63399,
                        "indexExpression": {
                          "id": 63398,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63387,
                          "src": "11799:2:95",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11789:13:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage",
                          "typeString": "struct INSUnified.Record storage ref"
                        }
                      },
                      "id": 63400,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11803:3:95",
                      "memberName": "mut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65418,
                      "src": "11789:17:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MutableRecord_$65412_storage",
                        "typeString": "struct INSUnified.MutableRecord storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63402,
                  "nodeType": "ExpressionStatement",
                  "src": "11782:24:95"
                },
                {
                  "assignments": [
                    63405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63405,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "11826:6:95",
                      "nodeType": "VariableDeclaration",
                      "scope": 63413,
                      "src": "11812:20:95",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 63404,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63403,
                          "name": "Record",
                          "nameLocations": [
                            "11812:6:95"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65419,
                          "src": "11812:6:95"
                        },
                        "referencedDeclaration": 65419,
                        "src": "11812:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11812:20:95"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63408,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63387,
                        "src": "11857:2:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63409,
                        "name": "USER_FIELDS_INDICATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70033,
                        "src": "11861:21:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        }
                      },
                      {
                        "id": 63410,
                        "name": "record",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63405,
                        "src": "11884:6:95",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_ModifyingIndicator_$69989",
                          "typeString": "ModifyingIndicator"
                        },
                        {
                          "typeIdentifier": "t_struct$_Record_$65419_memory_ptr",
                          "typeString": "struct INSUnified.Record memory"
                        }
                      ],
                      "id": 63407,
                      "name": "RecordUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65444,
                      "src": "11843:13:95",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_userDefinedValueType$_ModifyingIndicator_$69989_$_t_struct$_Record_$65419_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,ModifyingIndicator,struct INSUnified.Record memory)"
                      }
                    },
                    "id": 63411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11843:48:95",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63412,
                  "nodeType": "EmitStatement",
                  "src": "11838:53:95"
                }
              ]
            },
            "baseFunctions": [
              51081
            ],
            "documentation": {
              "id": 63385,
              "nodeType": "StructuredDocumentation",
              "src": "11674:33:95",
              "text": "@dev Override {ERC721-_burn}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "11719:5:95",
            "overrides": {
              "id": 63389,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11746:8:95"
            },
            "parameters": {
              "id": 63388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63387,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "11733:2:95",
                  "nodeType": "VariableDeclaration",
                  "scope": 63414,
                  "src": "11725:10:95",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11725:7:95",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11724:12:95"
            },
            "returnParameters": {
              "id": 63390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11755:0:95"
            },
            "scope": 63415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 62156,
              "name": "Initializable",
              "nameLocations": [
                "619:13:95"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50240,
              "src": "619:13:95"
            },
            "id": 62157,
            "nodeType": "InheritanceSpecifier",
            "src": "619:13:95"
          },
          {
            "baseName": {
              "id": 62158,
              "name": "RNSToken",
              "nameLocations": [
                "634:8:95"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62133,
              "src": "634:8:95"
            },
            "id": 62159,
            "nodeType": "InheritanceSpecifier",
            "src": "634:8:95"
          }
        ],
        "canonicalName": "RNSUnified",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          63415,
          62133,
          65606,
          501,
          51858,
          51929,
          51898,
          50348,
          51504,
          490,
          51340,
          51956,
          51456,
          48967,
          48842,
          52671,
          52683,
          49065,
          49040,
          52308,
          50240
        ],
        "name": "RNSUnified",
        "nameLocation": "605:10:95",
        "scope": 63416,
        "usedErrors": [
          65365,
          65368,
          65370,
          65373,
          65376,
          65379,
          65382,
          65385,
          65388,
          65391,
          65394
        ],
        "usedEvents": [
          434,
          48979,
          48988,
          48997,
          50086,
          50251,
          50256,
          51355,
          51364,
          51373,
          65426,
          65433,
          65444
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 21480763,
  "bytecode": "0x6000608081815260c060405260a09182529060036200001f8382620001b1565b5060046200002e8282620001b1565b5050603c805460ff1916905550620000456200004b565b6200027d565b600054610100900460ff1615620000b85760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146200010a576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013757607f821691505b6020821081036200015857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ac57600081815260208120601f850160051c81016020861015620001875750805b601f850160051c820191505b81811015620001a85782815560010162000193565b5050505b505050565b81516001600160401b03811115620001cd57620001cd6200010c565b620001e581620001de845462000122565b846200015e565b602080601f8311600181146200021d5760008415620002045750858301515b600019600386901b1c1916600185901b178555620001a8565b600085815260208120601f198616915b828110156200024e578886015182559484019460019091019084016200022d565b50858210156200026d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61432a806200028d6000396000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c806355a5133b1161019d578063abfaf005116100e9578063dbd18388116100a2578063ec63b01f1161007c578063ec63b01f1461072b578063f1e379081461073e578063fc284d1114610765578063fd3fa9191461077857600080fd5b8063dbd18388146106c9578063e63ab1e9146106da578063e985e9c5146106ef57600080fd5b8063abfaf0051461065c578063b88d4fde1461066f578063b967169014610682578063c87b56dd14610690578063ca15c873146106a3578063d547741f146106b657600080fd5b80639010d07c1161015657806396e494e81161013057806396e494e814610626578063a217fddf14610639578063a22cb46514610641578063a2309ff81461065457600080fd5b80639010d07c146105e157806391d14854146105f457806395d89b411461060757600080fd5b806355a5133b1461058257806355f804b3146105955780635c975abb146105a85780636352211e146105b357806370a08231146105c65780638456cb59146105d957600080fd5b80631cfa6ec01161025c57806333855d9f1161021557806342842e0e116101ef57806342842e0e1461051e57806342966c68146105315780634f6ccce7146105445780635569f33d1461055757600080fd5b806333855d9f146104ee57806336568abe146105035780633f4ba83a1461051657600080fd5b80631cfa6ec01461046b57806323b872dd1461047e578063248a9ca31461049157806328ed4f6c146104b55780632f2ff15d146104c85780632f745c59146104db57600080fd5b8063095ea7b3116102ae578063095ea7b3146103f5578063098799621461040a578063131a7e241461041d578063141a468c1461043057806318160ddd146104505780631a7a98e21461045857600080fd5b806301ffc9a7146102f657806303e9e6091461031e5780630570891f1461033e57806306fdde0314610370578063081812fc146103a7578063092c5b3b146103d2575b600080fd5b6103096103043660046134d1565b6107ab565b60405190151581526020015b60405180910390f35b61033161032c3660046134ee565b6107d7565b60405161031591906135db565b61035161034c366004613669565b61092d565b604080516001600160401b039093168352602083019190915201610315565b604080518082019091526012815271526f6e696e204e616d65205365727669636560701b60208201525b60405161031591906136e6565b6103ba6103b53660046134ee565b610c0b565b6040516001600160a01b039091168152602001610315565b6103e76000805160206142b583398151915281565b604051908152602001610315565b6104086104033660046136f9565b610c32565b005b6103e76104183660046137ae565b610d4c565b61039a61042b3660046134ee565b610d57565b6103e761043e3660046134ee565b60096020526000908152604090205481565b603f546103e7565b61039a6104663660046134ee565b610da4565b6104086104793660046137f6565b610eb0565b61040861048c366004613837565b611045565b6103e761049f3660046134ee565b6000908152600160208190526040909120015490565b6104086104c3366004613873565b611077565b6104086104d6366004613873565b6110d1565b6103e76104e93660046136f9565b6110f7565b6103e760008051602061429583398151915281565b610408610511366004613873565b61118d565b61040861120b565b61040861052c366004613837565b61122e565b61040861053f3660046134ee565b611249565b6103e76105523660046134ee565b611277565b61056a61056536600461389f565b61130a565b6040516001600160401b039091168152602001610315565b6104086105903660046138c2565b6113cf565b6104086105a33660046138dd565b6113f8565b603c5460ff16610309565b6103ba6105c13660046134ee565b61140d565b6103e76105d436600461391e565b61142e565b6104086114b4565b6103ba6105ef366004613939565b6114d4565b610309610602366004613873565b6114f3565b604080518082019091526003815262524e5360e81b602082015261039a565b6103096106343660046134ee565b61151e565b6103e7600081565b61040861064f36600461396b565b611549565b6073546103e7565b61040861066a366004613995565b611554565b61040861067d366004613a2b565b61176c565b61056a6001600160401b0381565b61039a61069e3660046134ee565b61179e565b6103e76106b13660046134ee565b611811565b6104086106c4366004613873565b611828565b60a7546001600160401b031661056a565b6103e76000805160206142d583398151915281565b6103096106fd366004613aa6565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b610408610739366004613ad0565b61184e565b6103e77f87a2b33e0b98030e29c3d23d732aa654f29b298e3891758d5f02a8b01c4840b281565b61040861077336600461389f565b611938565b61078b610786366004613b53565b6119b9565b6040805192151583526001600160e01b0319909116602083015201610315565b60006107b682611afa565b806107d157506001600160e01b03198216630106c78f60e21b145b92915050565b6107df61345f565b600082815260a8602052604090819020815160a081018352815460ff1692810192835260018201546060820152600282018054919384929091849160808501919061082990613b86565b80601f016020809104026020016040519081016040528092919081815260200182805461085590613b86565b80156108a25780601f10610877576101008083540402835291602001916108a2565b820191906000526020600020905b81548152906001019060200180831161088557829003601f168201915b5050509190925250505081526040805160808101825260038401546001600160a01b039081168252600490940154938416602080830191909152600160a01b85046001600160401b031692820192909252600160e01b90930460ff16151560608401520152905061091282611b1f565b60208201516001600160401b03909116604090910152919050565b600080610938611b9b565b6109423389611be3565b61095e576040516282b42960e81b815260040160405180910390fd5b61099e8888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bff92505050565b90506109a98161151e565b6109c65760405163a3b8915f60e01b815260040160405180910390fd5b6000818152600560205260409020546001600160a01b0316156109ec576109ec81611c15565b6109f68482611c84565b610a0b426001600160401b0380861690611c97565b9150610a178883611ccd565b610a1f61345f565b604080516080810182526001600160a01b03808916825287166020808301919091526001600160401b03861682840152600085815260a88083528482206004015460ff600160e01b9091048116151560608087019190915287850195909552855194850186528e83529252929092205490918291610a9f91166001613bd0565b60ff1681526020018a815260200189898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525080825251600360ff90911610610b0e576040516378a0027360e11b815260040160405180910390fd5b600082815260a8602090815260409182902083518051825460ff191660ff909116178255918201516001820155918101518392919082906002820190610b549082613c37565b50505060209182015180516003830180546001600160a01b039283166001600160a01b031990911617905592810151600490920180546040808401516060909401511515600160e01b0260ff60e01b196001600160401b03909516600160a01b026001600160e01b0319909316959096169490941717919091169290921790915551829060008051602061427583398151915290610bf790600019908590613cf6565b60405180910390a250965096945050505050565b6000610c1682611d13565b506000908152600760205260409020546001600160a01b031690565b6000610c3d82611d72565b9050806001600160a01b0316836001600160a01b031603610caf5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610ccb5750610ccb81336106fd565b610d3d5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610ca6565b610d478383611dd2565b505050565b60006107d182611e40565b606081610d6381611d13565b600083815260a8602090815260408083206009835292819020549051610d8c9392879101613d0f565b60405160208183030381529060405291505b50919050565b606081600003610dc257505060408051602081019091526000815290565b600082815260a860205260409020600281018054610ddf90613b86565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0b90613b86565b8015610e585780601f10610e2d57610100808354040283529160200191610e58565b820191906000526020600020905b815481529060010190602001808311610e3b57829003601f168201915b50505050509150806001015492505b8215610d9e5750600082815260a860209081526040918290209151610e93918491600285019101613e1d565b604051602081830303815290604052915080600101549250610e67565b610eb8611b9b565b8282610ec48282611eb3565b610ecc61345f565b600086815260a860205260409020600301610ef1610eea6006611ed4565b8790611ef6565b15610f3257610f066080860160608701613ecf565b6020830151901515606090910181905260018201805460ff60e01b1916600160e01b9092029190911790555b610f3f610eea6005611ed4565b15610f7557610f7587610f5860608801604089016138c2565b60208501516001600160401b039091166040909101819052611f02565b610f82610eea6003611ed4565b15610fb857610f94602086018661391e565b60208301516001600160a01b039091169081905281546001600160a01b0319161781555b866000805160206142758339815191528784604051610fd8929190613cf6565b60405180910390a2610fed610eea6004611ed4565b1561103c57600087815260a860209081526040918290206004015461103c926001600160a01b039091169161102691890190890161391e565b8960405180602001604052806000815250611fdb565b50505050505050565b611050335b8261200e565b61106c5760405162461bcd60e51b8152600401610ca690613eea565b610d47838383612030565b61107f611b9b565b8161108a6004611ed4565b6110948282611eb3565b600084815260a8602090815260408083206004015481519283019091529181526110cb916001600160a01b03169085908790611fdb565b50505050565b600082815260016020819052604090912001546110ed8161212c565b610d478383612136565b60006111028361142e565b82106111645760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ca6565b506001600160a01b03919091166000908152603d60209081526040808320938352929052205490565b6001600160a01b03811633146111fd5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610ca6565b6112078282612158565b5050565b6000805160206142d58339815191526112238161212c565b61122b61217a565b50565b610d478383836040518060200160405280600081525061176c565b6112523361104a565b61126e5760405162461bcd60e51b8152600401610ca690613eea565b61122b81611c15565b6000611282603f5490565b82106112e55760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ca6565b603f82815481106112f8576112f8613f37565b90600052602060002001549050919050565b6000611314611b9b565b6000805160206142b583398151915261132c8161212c565b61133461345f565b600085815260a86020526040902060040154611366906001600160401b03600160a01b90910481169086811690611c97565b6020820180516001600160401b0390921660409283015251015161138b908690611f02565b6020810151604001519250846000805160206142758339815191526113b06005611ed4565b836040516113bf929190613cf6565b60405180910390a2505092915050565b6113d7611b9b565b6000805160206142b58339815191526113ef8161212c565b611207826121cc565b60006114038161212c565b610d478383612224565b60006114188261226d565b1561142557506000919050565b6107d182611d72565b60006001600160a01b0382166114985760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610ca6565b506001600160a01b031660009081526006602052604090205490565b6000805160206142d58339815191526114cc8161212c565b61122b612289565b60008281526002602052604081206114ec90836122c6565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061154161152c83611b1f565b60a7546001600160401b0391821691166122d2565b421192915050565b6112073383836122e6565b600054610100900460ff16158080156115745750600054600160ff909116105b8061158e5750303b15801561158e575060005460ff166001145b6115f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ca6565b6000805460ff191660011790558015611614576000805461ff0019166101001790555b61161f600089612136565b6116376000805160206142d583398151915288612136565b61164f6000805160206142b583398151915287612136565b61166760008051602061429583398151915286612136565b6116718383612224565b61167a846121cc565b611685886000611c84565b61168d61345f565b6020808201516001600160401b03604090910152600080805260a89091527f89f57ae4d64764caecd045b845cfc13a5b86ba807e4a61f32108661671e72867805467ffffffffffffffff60a01b191667ffffffffffffffff60a01b1790556000805160206142758339815191526117046005611ed4565b83604051611713929190613cf6565b60405180910390a2508015611762576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b611776338361200e565b6117925760405162461bcd60e51b8152600401610ca690613eea565b6110cb84848484611fdb565b6060816117aa81611d13565b60006117b46123b4565b905060008151116117d45760405180602001604052806000815250611809565b806117de30612446565b6117e78661245c565b6040516020016117f993929190613f4d565b6040516020818303038152906040525b949350505050565b60008181526002602052604081206107d1906124ee565b600082815260016020819052604090912001546118448161212c565b610d478383612158565b6000805160206142958339815191526118668161212c565b60006118726006611ed4565b9050600061187e61345f565b602081015185151560609091015260005b86811015611762578787828181106118a9576118a9613f37565b60209081029290920135600081815260a89093526040909220600401549194505060ff600160e01b9091041615158615151461193057600083815260a8602052604090819020600401805460ff60e01b1916600160e01b89151502179055518390600080516020614275833981519152906119279087908690613cf6565b60405180910390a25b60010161188f565b611940611b9b565b6000805160206142b58339815191526119588161212c565b61196061345f565b60208101516001600160401b0384166040909101819052611982908590611f02565b8360008051602061427583398151915261199c6005611ed4565b836040516119ab929190613cf6565b60405180910390a250505050565b6000806119c7836007611ef6565b156119de57506000905063da698a4d60e01b611af2565b6000848152600560205260409020546001600160a01b0316611a0c5750600090506304a3dbd560e51b611af2565b611a20611a196006611ed4565b8490611ef6565b8015611a415750611a3f600080516020614295833981519152866114f3565b155b15611a5857506000905063c24b0f3f60e01b611af2565b6000611a726000805160206142b5833981519152876114f3565b9050611a88611a816005611ed4565b8590611ef6565b8015611a92575080155b15611aab57506000915063ed4b948760e01b9050611af2565b611ab6846018611ef6565b8015611ad057508080611ace5750611ace8686611be3565b155b15611ae85750600091506282b42960e81b9050611af2565b5060019150600090505b935093915050565b60006001600160e01b0319821663780e9d6360e01b14806107d157506107d1826124f8565b600081815260056020526040812054611b62907f87a2b33e0b98030e29c3d23d732aa654f29b298e3891758d5f02a8b01c4840b2906001600160a01b03166114f3565b15611b7557506001600160401b03919050565b50600090815260a86020526040902060040154600160a01b90046001600160401b031690565b603c5460ff1615611be15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610ca6565b565b6000611bef838361200e565b806114ec57506114ec8383612538565b6000918252805160209182012090526040902090565b611c1e81612596565b600081815260a8602052604090206003810180546001600160a01b031916905560040180546001600160e81b0319169055611c5761345f565b81600080516020614275833981519152601883604051611c78929190613cf6565b60405180910390a25050565b6073805460010190556112078282612639565b600081841180611ca657508183115b15611cb25750806114ec565b611cbc84846122d2565b9050818111156114ec575092915050565b600082815260a860205260409020600401546001600160401b03600160a01b909104811690821611156112075760405163da87d84960e01b815260040160405180910390fd5b6000818152600560205260409020546001600160a01b031661122b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610ca6565b6000818152600560205260408120546001600160a01b0316806107d15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610ca6565b600081815260076020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611e0782611d72565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600081518015611ea95760006020840160018303810160008052805b828110611ea457828114602e600183035160f81c1480821715611e9957600186848603030180842060205260406000206000526001810187019650505b505060001901611e5c565b505050505b5050600051919050565b600080611ec13385856119b9565b91509150816110cb578060005260046000fd5b6000816006811115611ee857611ee8613eb9565b60ff166001901b9050919050565b600082821615156114ec565b600082815260a86020526040902060010154611f1e9082611ccd565b611f278261151e565b15611f4557604051631395a92360e01b815260040160405180910390fd5b600082815260a860205260409020600401546001600160401b03600160a01b909104811690821611611f8a57604051631c21962760e11b815260040160405180910390fd5b611f9261345f565b6020908101516001600160401b03929092166040928301819052600093845260a89091529120600401805467ffffffffffffffff60a01b1916600160a01b909202919091179055565b611fe6848484612030565b611ff2848484846127d2565b6110cb5760405162461bcd60e51b8152600401610ca690613f9d565b60006120198261226d565b15612026575060006107d1565b6114ec83836128d3565b61203b838383612951565b61204361345f565b600061204f6004611ed4565b6020838101516001600160a01b038716908201819052600086815260a8909252604090912060040180546001600160a01b031916909117905590506120a2600080516020614295833981519152336114f3565b1580156120c75750600083815260a86020526040902060040154600160e01b900460ff165b156120fd57600083815260a860205260409020600401805460ff60e01b191690556120fa816120f66006611ed4565b1790565b90505b82600080516020614275833981519152828460405161211d929190613cf6565b60405180910390a25050505050565b61122b8133612ac2565b6121408282612b1b565b6000828152600260205260409020610d479082612b86565b6121628282612b9b565b6000828152600260205260409020610d479082612c02565b612182612c17565b603c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60a780546001600160401b03831667ffffffffffffffff199091168117909155604080519182525133917f2f8e6689e76cebc7cf99a782594bd18a73b8d1a0fe640c99fc580dcd4de7cd1d919081900360200190a250565b6074612231828483613fef565b50336001600160a01b03167ff765b68b6ff897de964353a0eb194e46ecea8772879eb880b4b0fd277124922c8383604051611c789291906140ae565b600061227882611b1f565b6001600160401b0316421192915050565b612291611b9b565b603c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586121af3390565b60006114ec8383612c60565b818101828110156107d157506000196107d1565b816001600160a01b0316836001600160a01b0316036123475760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ca6565b6001600160a01b03838116600081815260086020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6060607480546123c390613b86565b80601f01602080910402602001604051908101604052809291908181526020018280546123ef90613b86565b801561243c5780601f106124115761010080835404028352916020019161243c565b820191906000526020600020905b81548152906001019060200180831161241f57829003601f168201915b5050505050905090565b60606107d16001600160a01b0383166014612c8a565b6060600061246983612e25565b60010190506000816001600160401b0381111561248857612488613723565b6040519080825280601f01601f1916602001820160405280156124b2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846124bc57509392505050565b60006107d1825490565b60006001600160e01b031982166380ac58cd60e01b148061252957506001600160e01b03198216635b5e139f60e01b145b806107d157506107d182612efd565b6000805b821561258c5750600082815260a860205260409020600401546001600160a01b0390811690841681036125735760019150506107d1565b600092835260a86020526040909220600101549161253c565b5060009392505050565b60006125a182611d72565b90506125b1816000846001612f22565b6125ba82611d72565b600083815260076020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526006845282852080546000190190558785526005909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b03821661268f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ca6565b6000818152600560205260409020546001600160a01b0316156126f45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ca6565b612702600083836001612f22565b6000818152600560205260409020546001600160a01b0316156127675760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ca6565b6001600160a01b038216600081815260066020908152604080832080546001019055848352600590915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156128c857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906128169033908990889088906004016140dd565b6020604051808303816000875af1925050508015612851575060408051601f3d908101601f1916820190925261284e9181019061411a565b60015b6128ae573d80801561287f576040519150601f19603f3d011682016040523d82523d6000602084013e612884565b606091505b5080516000036128a65760405162461bcd60e51b8152600401610ca690613f9d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611809565b506001949350505050565b6000806128df83611d72565b9050806001600160a01b0316846001600160a01b0316148061292657506001600160a01b0380821660009081526008602090815260408083209388168352929052205460ff165b806118095750836001600160a01b031661293f84610c0b565b6001600160a01b031614949350505050565b826001600160a01b031661296482611d72565b6001600160a01b03161461298a5760405162461bcd60e51b8152600401610ca690614137565b6001600160a01b0382166129ec5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ca6565b6129f98383836001612f22565b826001600160a01b0316612a0c82611d72565b6001600160a01b031614612a325760405162461bcd60e51b8152600401610ca690614137565b600081815260076020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260068552838620805460001901905590871680865283862080546001019055868652600590945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b612acc82826114f3565b61120757612ad981612446565b612ae4836020612c8a565b604051602001612af592919061417c565b60408051601f198184030181529082905262461bcd60e51b8252610ca6916004016136e6565b612b2582826114f3565b6112075760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60006114ec836001600160a01b038416612f2e565b612ba582826114f3565b156112075760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006114ec836001600160a01b038416612f7d565b603c5460ff16611be15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ca6565b6000826000018281548110612c7757612c77613f37565b9060005260206000200154905092915050565b60606000612c998360026141f1565b612ca4906002614208565b6001600160401b03811115612cbb57612cbb613723565b6040519080825280601f01601f191660200182016040528015612ce5576020820181803683370190505b509050600360fc1b81600081518110612d0057612d00613f37565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612d2f57612d2f613f37565b60200101906001600160f81b031916908160001a9053506000612d538460026141f1565b612d5e906001614208565b90505b6001811115612dd6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612d9257612d92613f37565b1a60f81b828281518110612da857612da8613f37565b60200101906001600160f81b031916908160001a90535060049490941c93612dcf8161421b565b9050612d61565b5083156114ec5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610ca6565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310612e645772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612e90576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612eae57662386f26fc10000830492506010015b6305f5e1008310612ec6576305f5e100830492506008015b6127108310612eda57612710830492506004015b60648310612eec576064830492506002015b600a83106107d15760010192915050565b60006001600160e01b03198216635a05180f60e01b14806107d157506107d182613070565b6110cb848484846130a5565b6000818152600183016020526040812054612f75575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107d1565b5060006107d1565b60008181526001830160205260408120548015613066576000612fa1600183614232565b8554909150600090612fb590600190614232565b905081811461301a576000866000018281548110612fd557612fd5613f37565b9060005260206000200154905080876000018481548110612ff857612ff8613f37565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061302b5761302b614245565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107d1565b60009150506107d1565b60006001600160e01b03198216637965db0b60e01b14806107d157506301ffc9a760e01b6001600160e01b03198316146107d1565b6130b1848484846131e5565b60018111156131205760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610ca6565b816001600160a01b03851661317c5761317781603f80546000838152604060208190528120829055600182018355919091527fc03004e3ce0784bf68186394306849f9b7b1200073105cd9aeb554a1802b58fd0155565b61319f565b836001600160a01b0316856001600160a01b03161461319f5761319f8582613258565b6001600160a01b0384166131bb576131b6816132f5565b6131de565b846001600160a01b0316846001600160a01b0316146131de576131de84826133a4565b5050505050565b6131f1848484846133e8565b603c5460ff16156110cb5760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201526a1a1a5b19481c185d5cd95960aa1b6064820152608401610ca6565b600060016132658461142e565b61326f9190614232565b6000838152603e60205260409020549091508082146132c2576001600160a01b0384166000908152603d602090815260408083208584528252808320548484528184208190558352603e90915290208190555b506000918252603e602090815260408084208490556001600160a01b039094168352603d81528383209183525290812055565b603f5460009061330790600190614232565b600083815260406020819052812054603f805493945090928490811061332f5761332f613f37565b9060005260206000200154905080603f838154811061335057613350613f37565b600091825260208083209091019290925582815260409182905281812084905585815290812055603f80548061338857613388614245565b6001900381819060005260206000200160009055905550505050565b60006133af8361142e565b6001600160a01b039093166000908152603d602090815260408083208684528252808320859055938252603e9052919091209190915550565b815b6133f48284614208565b81101561345957600081815260096020526040812080549091906134179061425b565b918290555060405182907fcc2c68164f9f7f0c063ba98bcf89498c0f3f5e3acc32bf4ab46195ecb489c13b90600090a3806134518161425b565b9150506133ea565b506110cb565b60405180604001604052806134916040518060600160405280600060ff16815260200160008152602001606081525090565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b6001600160e01b03198116811461122b57600080fd5b6000602082840312156134e357600080fd5b81356114ec816134bb565b60006020828403121561350057600080fd5b5035919050565b60005b8381101561352257818101518382015260200161350a565b50506000910152565b60008151808452613543816020860160208601613507565b601f01601f19169290920160200192915050565b805160a0808452815160ff1690840152602081015160c084015260400151606060e084015260009061358d61010085018261352b565b9050602083015160018060a01b03808251166020870152806020830151166040870152506001600160401b036040820151166060860152606081015115156080860152508091505092915050565b6020815260006114ec6020830184613557565b60008083601f84011261360057600080fd5b5081356001600160401b0381111561361757600080fd5b60208301915083602082850101111561362f57600080fd5b9250929050565b80356001600160a01b038116811461364d57600080fd5b919050565b80356001600160401b038116811461364d57600080fd5b60008060008060008060a0878903121561368257600080fd5b8635955060208701356001600160401b0381111561369f57600080fd5b6136ab89828a016135ee565b90965094506136be905060408801613636565b92506136cc60608801613636565b91506136da60808801613652565b90509295509295509295565b6020815260006114ec602083018461352b565b6000806040838503121561370c57600080fd5b61371583613636565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561375357613753613723565b604051601f8501601f19908116603f0116810190828211818310171561377b5761377b613723565b8160405280935085815286868601111561379457600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156137c057600080fd5b81356001600160401b038111156137d657600080fd5b8201601f810184136137e757600080fd5b61180984823560208401613739565b600080600083850360c081121561380c57600080fd5b84359350602085013592506080603f198201121561382957600080fd5b506040840190509250925092565b60008060006060848603121561384c57600080fd5b61385584613636565b925061386360208501613636565b9150604084013590509250925092565b6000806040838503121561388657600080fd5b8235915061389660208401613636565b90509250929050565b600080604083850312156138b257600080fd5b8235915061389660208401613652565b6000602082840312156138d457600080fd5b6114ec82613652565b600080602083850312156138f057600080fd5b82356001600160401b0381111561390657600080fd5b613912858286016135ee565b90969095509350505050565b60006020828403121561393057600080fd5b6114ec82613636565b6000806040838503121561394c57600080fd5b50508035926020909101359150565b8035801515811461364d57600080fd5b6000806040838503121561397e57600080fd5b61398783613636565b91506138966020840161395b565b600080600080600080600060c0888a0312156139b057600080fd5b6139b988613636565b96506139c760208901613636565b95506139d560408901613636565b94506139e360608901613636565b93506139f160808901613652565b925060a08801356001600160401b03811115613a0c57600080fd5b613a188a828b016135ee565b989b979a50959850939692959293505050565b60008060008060808587031215613a4157600080fd5b613a4a85613636565b9350613a5860208601613636565b92506040850135915060608501356001600160401b03811115613a7a57600080fd5b8501601f81018713613a8b57600080fd5b613a9a87823560208401613739565b91505092959194509250565b60008060408385031215613ab957600080fd5b613ac283613636565b915061389660208401613636565b600080600060408486031215613ae557600080fd5b83356001600160401b0380821115613afc57600080fd5b818601915086601f830112613b1057600080fd5b813581811115613b1f57600080fd5b8760208260051b8501011115613b3457600080fd5b602092830195509350613b4a918601905061395b565b90509250925092565b600080600060608486031215613b6857600080fd5b613b7184613636565b95602085013595506040909401359392505050565b600181811c90821680613b9a57607f821691505b602082108103610d9e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff81811683821601908111156107d1576107d1613bba565b601f821115610d4757600081815260208120601f850160051c81016020861015613c105750805b601f850160051c820191505b81811015613c2f57828155600101613c1c565b505050505050565b81516001600160401b03811115613c5057613c50613723565b613c6481613c5e8454613b86565b84613be9565b602080601f831160018114613c995760008415613c815750858301515b600019600386901b1c1916600185901b178555613c2f565b600085815260208120601f198616915b82811015613cc857888601518255948401946001909101908401613ca9565b5085821015613ce65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006118096040830184613557565b6060815260a0606082015260ff845416610100820152600060018086015461012084015260028601606061014085015260008154613d4c81613b86565b8061016088015261018085831660008114613d6e5760018114613d8857613db9565b60ff1984168983015282151560051b890182019450613db9565b8560005260208060002060005b85811015613db05781548c8201860152908901908201613d95565b8b018401965050505b50505050613e096080860160038a0180546001600160a01b03908116835260019190910154908116602083015260a081901c6001600160401b0316604083015260e01c60ff161515606090910152565b602085019690965250505060400152919050565b600083516020613e308285838901613507565b8184019150601760f91b8252600160008654613e4b81613b86565b8184168015613e615760018114613e7a57613eaa565b60ff198316878601528115158202870185019350613eaa565b896000528560002060005b83811015613ea0578154898201880152908601908701613e85565b5050848288010193505b50919998505050505050505050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215613ee157600080fd5b6114ec8261395b565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008451613f5f818460208901613507565b845190830190613f73818360208901613507565b602f60f81b91019081528351613f90816001840160208801613507565b0160010195945050505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160401b0383111561400657614006613723565b61401a836140148354613b86565b83613be9565b6000601f84116001811461404e57600085156140365750838201355b600019600387901b1c1916600186901b1783556131de565b600083815260209020601f19861690835b8281101561407f578685013582556020948501946001909201910161405f565b508682101561409c5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906141109083018461352b565b9695505050505050565b60006020828403121561412c57600080fd5b81516114ec816134bb565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516141b4816017850160208801613507565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516141e5816028840160208801613507565b01602801949350505050565b80820281158282048414176107d1576107d1613bba565b808201808211156107d1576107d1613bba565b60008161422a5761422a613bba565b506000190190565b818103818111156107d1576107d1613bba565b634e487b7160e01b600052603160045260246000fd5b60006001820161426d5761426d613bba565b506001019056fe1c440effe366cd7c439a4890f8be2342fcaca9b4a192ce8cf2b0e76511b36eba9e4a939112df4627ab5078e49dd57d2c45b4cffd9ae0b912f9fc355e5b1080387b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335765d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862aa2646970667358221220d5f365766b82098eda9a4e3b580d61cb61878c671f3dbf2c54b673d4d11f770064736f6c63430008150033",
  "chainId": 2021,
  "contractName": "RNSUnified",
  "deployedBytecode": "",
  "deployer": "0x968D0Cd7343f711216817E617d3f92a23dC91c07",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "available(uint256)": {
        "details": "Returns true if the specified name is available for registration. Note: Only available after passing the grace period."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "bulkSetProtected(uint256[],bool)": {
        "details": "Sets the protected status of a list of ids. Update operation for {Record.mut.protected}. Requirements: - The method caller must have protected setter role. Emits events {RecordUpdated}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "canSetRecord(address,uint256,uint256)": {
        "details": "Returns whether the requester is able to modify the record based on the updated index. Note: This method strictly follows the permission of struct {MutableRecord}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getDomain(uint256)": {
        "details": "Returns the domain name of id."
      },
      "getGracePeriod()": {
        "details": "Returns the grace period in second(s). Note: This period affects the availability of the domain."
      },
      "getRecord(uint256)": {
        "details": "Returns all record of a domain. Reverts if the token is non existent."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(uint256,string,address,address,uint64)": {
        "details": "Mints token for subnode. Requirements: - The token must be available. - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}. Emits an event {RecordUpdated}.",
        "params": {
          "duration": "Duration in second(s) to expire. Leave 0 to set as parent.",
          "label": "The domain label. Eg, label is duke for domain duke.ron.",
          "owner": "The token owner.",
          "parentId": "The parent node to mint or create subnode.",
          "resolver": "The resolver address."
        }
      },
      "name()": {
        "details": "Override {IERC721Metadata-name}."
      },
      "namehash(string)": {
        "details": "Returns the name hash output of a domain."
      },
      "ownerOf(uint256)": {
        "details": "Override {ERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "reclaim(uint256,address)": {
        "details": "Reclaims ownership. Update operation for {Record.mut.owner}. Requirements: - The method caller should have controller role. - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}. Emits an event {RecordUpdated}."
      },
      "renew(uint256,uint64)": {
        "details": "Renews token. Update operation for {Record.mut.expiry}. Requirements: - The method caller should have controller role. Emits an event {RecordUpdated}."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "setBaseURI(string)": {
        "details": "Sets the base uri. Requirements: - The method caller must be contract owner."
      },
      "setExpiry(uint256,uint64)": {
        "details": "Sets expiry time for a token. Update operation for {Record.mut.expiry}. Requirements: - The method caller must have controller role. Emits an event {RecordUpdated}."
      },
      "setGracePeriod(uint64)": {
        "details": "Sets the grace period in second(s). Requirements: - The method caller must have controller role. Note: This period affects the availability of the domain."
      },
      "setRecord(uint256,uint256,(address,address,uint64,bool))": {
        "details": "Sets record of existing token. Update operation for {Record.mut}. Requirements: - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}. Emits an event {RecordUpdated}."
      },
      "stateOf(uint256)": {
        "details": "Returns the state of the `_tokenId` ERC721. Requirements: - The token exists."
      },
      "supportsInterface(bytes4)": {
        "details": "Override {ERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Override {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "Override {IERC721Metadata-tokenURI}."
      },
      "totalMinted()": {
        "details": "Returns the total minted ids. Note: Burning id will not affect `totalMinted`."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "BaseURIUpdated(address,string)": {
        "details": "Emitted when a base URI is updated."
      },
      "GracePeriodUpdated(address,uint64)": {
        "details": "Emitted when the grace period for all domain is updated."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "NonceUpdated(uint256,uint256)": {
        "details": "Emitted when the token nonce is updated"
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RecordUpdated(uint256,uint256,((uint8,uint256,string),(address,address,uint64,bool)))": {
        "details": "Emitted when the record of node is updated.",
        "params": {
          "indicator": "The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right to left) needs to be updated.",
          "record": "The updated fields."
        }
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "errors": {
      "CannotSetImmutableField()": [
        {
          "details": "Error: Attempting to set an immutable field, which cannot be modified."
        }
      ],
      "ExceedParentExpiry()": [
        {
          "details": "Error: The provided id expiry is greater than parent id expiry."
        }
      ],
      "Expired()": [
        {
          "details": "Error: The provided token id is expired."
        }
      ],
      "ExpiryTimeMustBeLargerThanTheOldOne()": [
        {
          "details": "Error: Attempting to set an expiry time that is not larger than the previous one."
        }
      ],
      "MissingControllerRole()": [
        {
          "details": "Error: Missing controller role required for modification."
        }
      ],
      "MissingProtectedSettlerRole()": [
        {
          "details": "Error: Missing protected settler role required for modification."
        }
      ],
      "NameMustBeRegisteredOrInGracePeriod()": [
        {
          "details": "Error: The provided name must be registered or is in a grace period."
        }
      ],
      "Unauthorized()": [
        {
          "details": "Error: The sender lacks the necessary permissions."
        }
      ],
      "Unavailable()": [
        {
          "details": "Error: The provided name is unavailable for registration."
        }
      ],
      "Unexists()": [
        {
          "details": "Error: The provided token id is unexists."
        }
      ]
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotSetImmutableField\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedParentExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpiryTimeMustBeLargerThanTheOldOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingControllerRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingProtectedSettlerRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameMustBeRegisteredOrInGracePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ThirdLevelDomainUnallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unavailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unexists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"newGracePeriod\",\"type\":\"uint64\"}],\"name\":\"GracePeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"NonceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"node\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"ModifyingIndicator\",\"name\":\"indicator\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct INSUnified.ImmutableRecord\",\"name\":\"immut\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"protected\",\"type\":\"bool\"}],\"internalType\":\"struct INSUnified.MutableRecord\",\"name\":\"mut\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct INSUnified.Record\",\"name\":\"record\",\"type\":\"tuple\"}],\"name\":\"RecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONTROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_EXPIRY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTECTED_SETTLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVATION_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"protected\",\"type\":\"bool\"}],\"name\":\"bulkSetProtected\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"ModifyingIndicator\",\"name\":\"indicator\",\"type\":\"uint256\"}],\"name\":\"canSetRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getDomain\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGracePeriod\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRecord\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"depth\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct INSUnified.ImmutableRecord\",\"name\":\"immut\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"protected\",\"type\":\"bool\"}],\"internalType\":\"struct INSUnified.MutableRecord\",\"name\":\"mut\",\"type\":\"tuple\"}],\"internalType\":\"struct INSUnified.Record\",\"name\":\"record\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protectedSettler\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"gracePeriod\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"parentId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"duration\",\"type\":\"uint64\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"expiryTime\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"namehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashed\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"reclaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"duration\",\"type\":\"uint64\"}],\"name\":\"renew\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"setExpiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"gracePeriod\",\"type\":\"uint64\"}],\"name\":\"setGracePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"ModifyingIndicator\",\"name\":\"indicator\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"protected\",\"type\":\"bool\"}],\"internalType\":\"struct INSUnified.MutableRecord\",\"name\":\"mutRecord\",\"type\":\"tuple\"}],\"name\":\"setRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stateOf\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CannotSetImmutableField()\":[{\"details\":\"Error: Attempting to set an immutable field, which cannot be modified.\"}],\"ExceedParentExpiry()\":[{\"details\":\"Error: The provided id expiry is greater than parent id expiry.\"}],\"Expired()\":[{\"details\":\"Error: The provided token id is expired.\"}],\"ExpiryTimeMustBeLargerThanTheOldOne()\":[{\"details\":\"Error: Attempting to set an expiry time that is not larger than the previous one.\"}],\"MissingControllerRole()\":[{\"details\":\"Error: Missing controller role required for modification.\"}],\"MissingProtectedSettlerRole()\":[{\"details\":\"Error: Missing protected settler role required for modification.\"}],\"NameMustBeRegisteredOrInGracePeriod()\":[{\"details\":\"Error: The provided name must be registered or is in a grace period.\"}],\"Unauthorized()\":[{\"details\":\"Error: The sender lacks the necessary permissions.\"}],\"Unavailable()\":[{\"details\":\"Error: The provided name is unavailable for registration.\"}],\"Unexists()\":[{\"details\":\"Error: The provided token id is unexists.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BaseURIUpdated(address,string)\":{\"details\":\"Emitted when a base URI is updated.\"},\"GracePeriodUpdated(address,uint64)\":{\"details\":\"Emitted when the grace period for all domain is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NonceUpdated(uint256,uint256)\":{\"details\":\"Emitted when the token nonce is updated\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RecordUpdated(uint256,uint256,((uint8,uint256,string),(address,address,uint64,bool)))\":{\"details\":\"Emitted when the record of node is updated.\",\"params\":{\"indicator\":\"The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right to left) needs to be updated.\",\"record\":\"The updated fields.\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"available(uint256)\":{\"details\":\"Returns true if the specified name is available for registration. Note: Only available after passing the grace period.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"bulkSetProtected(uint256[],bool)\":{\"details\":\"Sets the protected status of a list of ids. Update operation for {Record.mut.protected}. Requirements: - The method caller must have protected setter role. Emits events {RecordUpdated}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"canSetRecord(address,uint256,uint256)\":{\"details\":\"Returns whether the requester is able to modify the record based on the updated index. Note: This method strictly follows the permission of struct {MutableRecord}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getDomain(uint256)\":{\"details\":\"Returns the domain name of id.\"},\"getGracePeriod()\":{\"details\":\"Returns the grace period in second(s). Note: This period affects the availability of the domain.\"},\"getRecord(uint256)\":{\"details\":\"Returns all record of a domain. Reverts if the token is non existent.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(uint256,string,address,address,uint64)\":{\"details\":\"Mints token for subnode. Requirements: - The token must be available. - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}. Emits an event {RecordUpdated}.\",\"params\":{\"duration\":\"Duration in second(s) to expire. Leave 0 to set as parent.\",\"label\":\"The domain label. Eg, label is duke for domain duke.ron.\",\"owner\":\"The token owner.\",\"parentId\":\"The parent node to mint or create subnode.\",\"resolver\":\"The resolver address.\"}},\"name()\":{\"details\":\"Override {IERC721Metadata-name}.\"},\"namehash(string)\":{\"details\":\"Returns the name hash output of a domain.\"},\"ownerOf(uint256)\":{\"details\":\"Override {ERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"reclaim(uint256,address)\":{\"details\":\"Reclaims ownership. Update operation for {Record.mut.owner}. Requirements: - The method caller should have controller role. - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}. Emits an event {RecordUpdated}.\"},\"renew(uint256,uint64)\":{\"details\":\"Renews token. Update operation for {Record.mut.expiry}. Requirements: - The method caller should have controller role. Emits an event {RecordUpdated}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"Sets the base uri. Requirements: - The method caller must be contract owner.\"},\"setExpiry(uint256,uint64)\":{\"details\":\"Sets expiry time for a token. Update operation for {Record.mut.expiry}. Requirements: - The method caller must have controller role. Emits an event {RecordUpdated}.\"},\"setGracePeriod(uint64)\":{\"details\":\"Sets the grace period in second(s). Requirements: - The method caller must have controller role. Note: This period affects the availability of the domain.\"},\"setRecord(uint256,uint256,(address,address,uint64,bool))\":{\"details\":\"Sets record of existing token. Update operation for {Record.mut}. Requirements: - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}. Emits an event {RecordUpdated}.\"},\"stateOf(uint256)\":{\"details\":\"Returns the state of the `_tokenId` ERC721. Requirements: - The token exists.\"},\"supportsInterface(bytes4)\":{\"details\":\"Override {ERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Override {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"Override {IERC721Metadata-tokenURI}.\"},\"totalMinted()\":{\"details\":\"Returns the total minted ids. Note: Burning id will not affect `totalMinted`.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"stateVariables\":{\"CONTROLLER_ROLE\":{\"details\":\"Returns the controller role.\"},\"MAX_EXPIRY\":{\"details\":\"Returns the max expiry value.\"},\"PROTECTED_SETTLER_ROLE\":{\"details\":\"Returns the protected setter role.\"},\"RESERVATION_ROLE\":{\"details\":\"Returns the reservation role.\"},\"____gap\":{\"details\":\"Gap for upgradeability.\"},\"_recordOf\":{\"details\":\"Mapping from token id => record\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CONTROLLER_ROLE()\":{\"notice\":\"Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}.\"},\"PROTECTED_SETTLER_ROLE()\":{\"notice\":\"Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`.\"},\"RESERVATION_ROLE()\":{\"notice\":\"Never expire for token owner has this role.\"},\"stateOf(uint256)\":{\"notice\":\"The token state presents the properties of a token at a certain point in time, it should be unique. The token state helps other contracts can verify the token properties without getting and selecting properties from the base contract. For example: ```solidity contract Kitty {   function stateOf(uint256 _tokenId) external view returns (bytes memory) {     return abi.encodePacked(ownerOf(_tokenId), genesOf(_tokenId), levelOf(_tokenId));   } } interface Exchange {   // Buy NFT with the specificed state of `_tokenId`.   function buy(uint256 _tokenId, uint256 _price, bytes calldata _kittyState) external; } ```\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RNSUnified.sol\":\"RNSUnified\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/=lib/pyth-sdk-solidity/\",\":@rns-contracts/=src/\",\":buffer/=lib/buffer/contracts/\",\":contract-template/=lib/contract-template/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/contract-template/src/refs/ERC721Nonce.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\n\\n/**\\n * @title ERC721Nonce\\n * @dev This contract provides a nonce that will be increased whenever the token is tranferred.\\n */\\nabstract contract ERC721Nonce is ERC721 {\\n  /// @dev Emitted when the token nonce is updated\\n  event NonceUpdated(uint256 indexed _tokenId, uint256 indexed _nonce);\\n\\n  /// @dev Mapping from token id => token nonce\\n  mapping(uint256 => uint256) public nonces;\\n\\n  /**\\n   * @dev This empty reserved space is put in place to allow future versions to add new\\n   * variables without shifting down storage in the inheritance chain.\\n   */\\n  uint256[50] private ______gap;\\n\\n  /**\\n   * @dev Override `ERC721-_beforeTokenTransfer`.\\n   */\\n  function _beforeTokenTransfer(address _from, address _to, uint256 _firstTokenId, uint256 _batchSize)\\n    internal\\n    virtual\\n    override\\n  {\\n    for (uint256 _tokenId = _firstTokenId; _tokenId < _firstTokenId + _batchSize; _tokenId++) {\\n      emit NonceUpdated(_tokenId, ++nonces[_tokenId]);\\n    }\\n    super._beforeTokenTransfer(_from, _to, _firstTokenId, _batchSize);\\n  }\\n}\\n\",\"keccak256\":\"0xc5695e9c5ae6a3c24c612cc970bd69c456d06e285ca8a95c2795d864ae478c9a\",\"license\":\"MIT\"},\"lib/contract-template/src/refs/IERC721State.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface IERC721State {\\n  /**\\n   * @dev Returns the state of the `_tokenId` ERC721.\\n   *\\n   * Requirements:\\n   *\\n   * - The token exists.\\n   *\\n   * @notice The token state presents the properties of a token at a certain point in time, it should be unique.\\n   * The token state helps other contracts can verify the token properties without getting and selecting properties from the base contract.\\n   *\\n   * For example:\\n   *\\n   * ```solidity\\n   * contract Kitty {\\n   *   function stateOf(uint256 _tokenId) external view returns (bytes memory) {\\n   *     return abi.encodePacked(ownerOf(_tokenId), genesOf(_tokenId), levelOf(_tokenId));\\n   *   }\\n   * }\\n   *\\n   * interface Exchange {\\n   *   // Buy NFT with the specificed state of `_tokenId`.\\n   *   function buy(uint256 _tokenId, uint256 _price, bytes calldata _kittyState) external;\\n   * }\\n   * ```\\n   */\\n  function stateOf(uint256 _tokenId) external view returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x462e648b1de6597ea496fbe91da2d28061cbef49612cd39288d64985f087de7d\",\"license\":\"UNLICENSED\"},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlEnumerable.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\nimport \\\"../utils/structs/EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\\n */\\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\\n        return _roleMembers[role].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\\n        return _roleMembers[role].length();\\n    }\\n\\n    /**\\n     * @dev Overload {_grantRole} to track enumerable memberships\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual override {\\n        super._grantRole(role, account);\\n        _roleMembers[role].add(account);\\n    }\\n\\n    /**\\n     * @dev Overload {_revokeRole} to track enumerable memberships\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual override {\\n        super._revokeRole(role, account);\\n        _roleMembers[role].remove(account);\\n    }\\n}\\n\",\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerable is IAccessControl {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _burn(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x52da94e59d870f54ca0eb4f485c3d9602011f668ba34d72c88124a1496ebaab1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_beforeTokenTransfer}.\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\\n\\n        if (batchSize > 1) {\\n            // Will only trigger during construction. Batch transferring (minting) is not available afterwards.\\n            revert(\\\"ERC721Enumerable: consecutive transfers not supported\\\");\\n        }\\n\\n        uint256 tokenId = firstTokenId;\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/extensions/ERC721Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../security/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC721 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract unpausable.\\n */\\nabstract contract ERC721Pausable is ERC721, Pausable {\\n    /**\\n     * @dev See {ERC721-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\\n\\n        require(!paused(), \\\"ERC721Pausable: token transfer while paused\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x645230d3afe28f9108eef658e77bb6ac72cea51ac091b40951977c88f7044142\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"src/RNSToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC165, AccessControlEnumerable } from \\\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\\\";\\nimport { IERC721Metadata, IERC721, ERC721 } from \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport { ERC721Burnable } from \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\nimport { ERC721Pausable } from \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\\\";\\nimport { ERC721Enumerable } from \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport { ERC721Nonce } from \\\"contract-template/refs/ERC721Nonce.sol\\\";\\nimport { INSUnified } from \\\"./interfaces/INSUnified.sol\\\";\\nimport { IERC721State } from \\\"contract-template/refs/IERC721State.sol\\\";\\nimport { Strings } from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\nabstract contract RNSToken is\\n  AccessControlEnumerable,\\n  ERC721Nonce,\\n  ERC721Burnable,\\n  ERC721Pausable,\\n  ERC721Enumerable,\\n  IERC721State,\\n  INSUnified\\n{\\n  using Strings for *;\\n\\n  bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n\\n  /// @dev Gap for upgradeability.\\n  uint256[50] private ____gap;\\n\\n  uint256 internal _idCounter;\\n  string internal _baseTokenURI;\\n\\n  modifier onlyMinted(uint256 tokenId) {\\n    _requireMinted(tokenId);\\n    _;\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function setBaseURI(string calldata baseTokenURI) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setBaseURI(baseTokenURI);\\n  }\\n\\n  /**\\n   * @dev Pauses all token transfers.\\n   *\\n   * See {ERC721Pausable} and {Pausable-_pause}.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must have the `PAUSER_ROLE`.\\n   */\\n  function pause() external virtual onlyRole(PAUSER_ROLE) {\\n    _pause();\\n  }\\n\\n  /**\\n   * @dev Unpauses all token transfers.\\n   *\\n   * See {ERC721Pausable} and {Pausable-_unpause}.\\n   *\\n   * Requirements:\\n   *\\n   * - the caller must have the `PAUSER_ROLE`.\\n   */\\n  function unpause() external virtual onlyRole(PAUSER_ROLE) {\\n    _unpause();\\n  }\\n\\n  /// @dev Override {IERC721Metadata-name}.\\n  function name() public view virtual override(ERC721, IERC721Metadata) returns (string memory) {\\n    return \\\"Ronin Name Service\\\";\\n  }\\n\\n  /// @dev Override {IERC721Metadata-symbol}.\\n  function symbol() public view virtual override(ERC721, IERC721Metadata) returns (string memory) {\\n    return \\\"RNS\\\";\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function totalMinted() external view virtual returns (uint256) {\\n    return _idCounter;\\n  }\\n\\n  /// @dev Override {IERC721Metadata-tokenURI}.\\n  function tokenURI(uint256 tokenId)\\n    public\\n    view\\n    virtual\\n    override(ERC721, IERC721Metadata)\\n    onlyMinted(tokenId)\\n    returns (string memory)\\n  {\\n    string memory baseURI = _baseURI();\\n    return bytes(baseURI).length > 0 ? string.concat(baseURI, address(this).toHexString(), \\\"/\\\", tokenId.toString()) : \\\"\\\";\\n  }\\n\\n  /// @dev Override {ERC165-supportsInterface}.\\n  function supportsInterface(bytes4 interfaceId)\\n    public\\n    view\\n    virtual\\n    override(ERC721, AccessControlEnumerable, ERC721Enumerable, IERC165)\\n    returns (bool)\\n  {\\n    return super.supportsInterface(interfaceId) || interfaceId == type(INSUnified).interfaceId;\\n  }\\n\\n  /// @dev Override {ERC721-_mint}.\\n  function _mint(address to, uint256 tokenId) internal virtual override {\\n    unchecked {\\n      ++_idCounter;\\n    }\\n    super._mint(to, tokenId);\\n  }\\n\\n  /**\\n   * @dev Helper method to set base uri.\\n   */\\n  function _setBaseURI(string calldata baseTokenURI) internal virtual {\\n    _baseTokenURI = baseTokenURI;\\n    emit BaseURIUpdated(_msgSender(), baseTokenURI);\\n  }\\n\\n  /// @dev Override {ERC721-_beforeTokenTransfer}.\\n  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize)\\n    internal\\n    virtual\\n    override(ERC721, ERC721Nonce, ERC721Enumerable, ERC721Pausable)\\n  {\\n    super._beforeTokenTransfer(from, to, firstTokenId, batchSize);\\n  }\\n\\n  /// @dev Override {ERC721-_baseURI}.\\n  function _baseURI() internal view virtual override returns (string memory) {\\n    return _baseTokenURI;\\n  }\\n}\\n\",\"keccak256\":\"0x329a95b72af71faddd0ecf15fe610e42f02ea417864e58d1ff604a7496912360\",\"license\":\"MIT\"},\"src/RNSUnified.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { IERC721State, IERC721, ERC721, INSUnified, RNSToken } from \\\"./RNSToken.sol\\\";\\nimport { LibRNSDomain } from \\\"./libraries/LibRNSDomain.sol\\\";\\nimport { LibSafeRange } from \\\"./libraries/math/LibSafeRange.sol\\\";\\nimport { ModifyingField, LibModifyingField } from \\\"./libraries/LibModifyingField.sol\\\";\\nimport {\\n  ALL_FIELDS_INDICATOR,\\n  IMMUTABLE_FIELDS_INDICATOR,\\n  USER_FIELDS_INDICATOR,\\n  ModifyingIndicator\\n} from \\\"./types/ModifyingIndicator.sol\\\";\\n\\ncontract RNSUnified is Initializable, RNSToken {\\n  using LibRNSDomain for string;\\n  using LibModifyingField for ModifyingField;\\n\\n  bytes32 public constant CONTROLLER_ROLE = keccak256(\\\"CONTROLLER_ROLE\\\");\\n  bytes32 public constant RESERVATION_ROLE = keccak256(\\\"RESERVATION_ROLE\\\");\\n  bytes32 public constant PROTECTED_SETTLER_ROLE = keccak256(\\\"PROTECTED_SETTLER_ROLE\\\");\\n  uint64 public constant MAX_EXPIRY = type(uint64).max;\\n\\n  /// @dev Gap for upgradeability.\\n  uint256[50] private ____gap;\\n\\n  uint64 internal _gracePeriod;\\n  /// @dev Mapping from token id => record\\n  mapping(uint256 => Record) internal _recordOf;\\n\\n  modifier onlyAuthorized(uint256 id, ModifyingIndicator indicator) {\\n    _requireAuthorized(id, indicator);\\n    _;\\n  }\\n\\n  constructor() payable ERC721(\\\"\\\", \\\"\\\") {\\n    _disableInitializers();\\n  }\\n\\n  function initialize(\\n    address admin,\\n    address pauser,\\n    address controller,\\n    address protectedSettler,\\n    uint64 gracePeriod,\\n    string calldata baseTokenURI\\n  ) external initializer {\\n    _grantRole(DEFAULT_ADMIN_ROLE, admin);\\n    _grantRole(PAUSER_ROLE, pauser);\\n    _grantRole(CONTROLLER_ROLE, controller);\\n    _grantRole(PROTECTED_SETTLER_ROLE, protectedSettler);\\n\\n    _setBaseURI(baseTokenURI);\\n    _setGracePeriod(gracePeriod);\\n\\n    _mint(admin, 0x0);\\n    Record memory record;\\n    _recordOf[0x0].mut.expiry = record.mut.expiry = MAX_EXPIRY;\\n    emit RecordUpdated(0x0, ModifyingField.Expiry.indicator(), record);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function available(uint256 id) public view returns (bool) {\\n    return block.timestamp > LibSafeRange.add(_expiry(id), _gracePeriod);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function getGracePeriod() external view returns (uint64) {\\n    return _gracePeriod;\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function setGracePeriod(uint64 gracePeriod) external whenNotPaused onlyRole(CONTROLLER_ROLE) {\\n    _setGracePeriod(gracePeriod);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function mint(uint256 parentId, string calldata label, address resolver, address owner, uint64 duration)\\n    external\\n    whenNotPaused\\n    returns (uint64 expiryTime, uint256 id)\\n  {\\n    if (!_checkOwnerRules(_msgSender(), parentId)) revert Unauthorized();\\n    id = LibRNSDomain.toId(parentId, label);\\n    if (!available(id)) revert Unavailable();\\n\\n    if (_exists(id)) _burn(id);\\n    _mint(owner, id);\\n\\n    expiryTime = uint64(LibSafeRange.addWithUpperbound(block.timestamp, duration, MAX_EXPIRY));\\n    _requireValidExpiry(parentId, expiryTime);\\n    Record memory record;\\n    // Preserve previous state of the protected field\\n    record.mut =\\n      MutableRecord({ resolver: resolver, owner: owner, expiry: expiryTime, protected: _recordOf[id].mut.protected });\\n    record.immut = ImmutableRecord({ depth: _recordOf[parentId].immut.depth + 1, parentId: parentId, label: label });\\n    if (record.immut.depth >= 3) revert ThirdLevelDomainUnallowed();\\n\\n    _recordOf[id] = record;\\n    emit RecordUpdated(id, ALL_FIELDS_INDICATOR, record);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function namehash(string memory str) public pure returns (bytes32 hashed) {\\n    hashed = str.namehash();\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function getRecord(uint256 id) external view returns (Record memory record) {\\n    record = _recordOf[id];\\n    record.mut.expiry = _expiry(id);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function getDomain(uint256 id) external view returns (string memory domain) {\\n    if (id == 0) return \\\"\\\";\\n\\n    ImmutableRecord storage sRecord = _recordOf[id].immut;\\n    domain = sRecord.label;\\n    id = sRecord.parentId;\\n    while (id != 0) {\\n      sRecord = _recordOf[id].immut;\\n      domain = string.concat(domain, \\\".\\\", sRecord.label);\\n      id = sRecord.parentId;\\n    }\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function reclaim(uint256 id, address owner)\\n    external\\n    whenNotPaused\\n    onlyAuthorized(id, ModifyingField.Owner.indicator())\\n  {\\n    _safeTransfer(_recordOf[id].mut.owner, owner, id, \\\"\\\");\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function renew(uint256 id, uint64 duration) external whenNotPaused onlyRole(CONTROLLER_ROLE) returns (uint64 expiry) {\\n    Record memory record;\\n    record.mut.expiry = uint64(LibSafeRange.addWithUpperbound(_recordOf[id].mut.expiry, duration, MAX_EXPIRY));\\n    _setExpiry(id, record.mut.expiry);\\n    expiry = record.mut.expiry;\\n    emit RecordUpdated(id, ModifyingField.Expiry.indicator(), record);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function setExpiry(uint256 id, uint64 expiry) external whenNotPaused onlyRole(CONTROLLER_ROLE) {\\n    Record memory record;\\n    _setExpiry(id, record.mut.expiry = expiry);\\n    emit RecordUpdated(id, ModifyingField.Expiry.indicator(), record);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function bulkSetProtected(uint256[] calldata ids, bool protected) external onlyRole(PROTECTED_SETTLER_ROLE) {\\n    ModifyingIndicator indicator = ModifyingField.Protected.indicator();\\n    uint256 id;\\n    Record memory record;\\n    record.mut.protected = protected;\\n\\n    for (uint256 i; i < ids.length;) {\\n      id = ids[i];\\n      if (_recordOf[id].mut.protected != protected) {\\n        _recordOf[id].mut.protected = protected;\\n        emit RecordUpdated(id, indicator, record);\\n      }\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function setRecord(uint256 id, ModifyingIndicator indicator, MutableRecord calldata mutRecord)\\n    external\\n    whenNotPaused\\n    onlyAuthorized(id, indicator)\\n  {\\n    Record memory record;\\n    MutableRecord storage sMutRecord = _recordOf[id].mut;\\n\\n    if (indicator.hasAny(ModifyingField.Protected.indicator())) {\\n      sMutRecord.protected = record.mut.protected = mutRecord.protected;\\n    }\\n    if (indicator.hasAny(ModifyingField.Expiry.indicator())) {\\n      _setExpiry(id, record.mut.expiry = mutRecord.expiry);\\n    }\\n    if (indicator.hasAny(ModifyingField.Resolver.indicator())) {\\n      sMutRecord.resolver = record.mut.resolver = mutRecord.resolver;\\n    }\\n    emit RecordUpdated(id, indicator, record);\\n\\n    // Updating owner might emit more {RecordUpdated} events. See method {_transfer}.\\n    if (indicator.hasAny(ModifyingField.Owner.indicator())) {\\n      _safeTransfer(_recordOf[id].mut.owner, mutRecord.owner, id, \\\"\\\");\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc IERC721State\\n   */\\n  function stateOf(uint256 tokenId) external view virtual override onlyMinted(tokenId) returns (bytes memory) {\\n    return abi.encode(_recordOf[tokenId], nonces[tokenId], tokenId);\\n  }\\n\\n  /// @inheritdoc INSUnified\\n  function canSetRecord(address requester, uint256 id, ModifyingIndicator indicator)\\n    public\\n    view\\n    returns (bool allowed, bytes4)\\n  {\\n    if (indicator.hasAny(IMMUTABLE_FIELDS_INDICATOR)) {\\n      return (false, CannotSetImmutableField.selector);\\n    }\\n    if (!_exists(id)) return (false, Unexists.selector);\\n    if (indicator.hasAny(ModifyingField.Protected.indicator()) && !hasRole(PROTECTED_SETTLER_ROLE, requester)) {\\n      return (false, MissingProtectedSettlerRole.selector);\\n    }\\n    bool hasControllerRole = hasRole(CONTROLLER_ROLE, requester);\\n    if (indicator.hasAny(ModifyingField.Expiry.indicator()) && !hasControllerRole) {\\n      return (false, MissingControllerRole.selector);\\n    }\\n    if (indicator.hasAny(USER_FIELDS_INDICATOR) && !(hasControllerRole || _checkOwnerRules(requester, id))) {\\n      return (false, Unauthorized.selector);\\n    }\\n\\n    return (true, 0x0);\\n  }\\n\\n  /// @dev Override {ERC721-ownerOf}.\\n  function ownerOf(uint256 tokenId) public view override(ERC721, IERC721) returns (address) {\\n    if (_isExpired(tokenId)) return address(0x0);\\n    return super.ownerOf(tokenId);\\n  }\\n\\n  /// @dev Override {ERC721-_isApprovedOrOwner}.\\n  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual override returns (bool) {\\n    if (_isExpired(tokenId)) return false;\\n    return super._isApprovedOrOwner(spender, tokenId);\\n  }\\n\\n  /**\\n   * @dev Helper method to check whether the id is expired.\\n   */\\n  function _isExpired(uint256 id) internal view returns (bool) {\\n    return block.timestamp > _expiry(id);\\n  }\\n\\n  /**\\n   * @dev Helper method to calculate expiry time for specific id.\\n   */\\n  function _expiry(uint256 id) internal view returns (uint64) {\\n    if (hasRole(RESERVATION_ROLE, _ownerOf(id))) return MAX_EXPIRY;\\n    return _recordOf[id].mut.expiry;\\n  }\\n\\n  /**\\n   * @dev Helper method to check whether the address is owner of parent token.\\n   */\\n  function _isHierarchyOwner(address spender, uint256 id) internal view returns (bool) {\\n    address owner;\\n\\n    while (id != 0) {\\n      owner = _recordOf[id].mut.owner;\\n      if (owner == spender) return true;\\n      id = _recordOf[id].immut.parentId;\\n    }\\n\\n    return false;\\n  }\\n\\n  /**\\n   * @dev Returns whether the owner rules is satisfied.\\n   * Returns true only if the spender is owner, or approved spender, or owner of parent token.\\n   */\\n  function _checkOwnerRules(address spender, uint256 id) internal view returns (bool) {\\n    return _isApprovedOrOwner(spender, id) || _isHierarchyOwner(spender, id);\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure msg.sender is authorized to modify record of the token id.\\n   */\\n  function _requireAuthorized(uint256 id, ModifyingIndicator indicator) internal view {\\n    (bool allowed, bytes4 errorCode) = canSetRecord(_msgSender(), id, indicator);\\n    if (!allowed) {\\n      assembly (\\\"memory-safe\\\") {\\n        mstore(0x0, errorCode)\\n        revert(0x0, 0x04)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure expiry of an id is lower or equal expiry of parent id.\\n   */\\n  function _requireValidExpiry(uint256 parentId, uint64 expiry) internal view {\\n    if (expiry > _recordOf[parentId].mut.expiry) revert ExceedParentExpiry();\\n  }\\n\\n  /**\\n   * @dev Helper method to set expiry time of a token.\\n   *\\n   * Requirement:\\n   * - The token must be registered or in grace period.\\n   * - Expiry time must be larger than the old one.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function _setExpiry(uint256 id, uint64 expiry) internal {\\n    _requireValidExpiry(_recordOf[id].immut.parentId, expiry);\\n    if (available(id)) revert NameMustBeRegisteredOrInGracePeriod();\\n    if (expiry <= _recordOf[id].mut.expiry) revert ExpiryTimeMustBeLargerThanTheOldOne();\\n\\n    Record memory record;\\n    _recordOf[id].mut.expiry = record.mut.expiry = expiry;\\n  }\\n\\n  /**\\n   * @dev Helper method to set grace period.\\n   *\\n   * Emits an event {GracePeriodUpdated}.\\n   */\\n  function _setGracePeriod(uint64 gracePeriod) internal {\\n    _gracePeriod = gracePeriod;\\n    emit GracePeriodUpdated(_msgSender(), gracePeriod);\\n  }\\n\\n  /// @dev Override {ERC721-_transfer}.\\n  function _transfer(address from, address to, uint256 id) internal override {\\n    super._transfer(from, to, id);\\n\\n    Record memory record;\\n    ModifyingIndicator indicator = ModifyingField.Owner.indicator();\\n\\n    _recordOf[id].mut.owner = record.mut.owner = to;\\n    if (!hasRole(PROTECTED_SETTLER_ROLE, _msgSender()) && _recordOf[id].mut.protected) {\\n      _recordOf[id].mut.protected = false;\\n      indicator = indicator | ModifyingField.Protected.indicator();\\n    }\\n    emit RecordUpdated(id, indicator, record);\\n  }\\n\\n  /// @dev Override {ERC721-_burn}.\\n  function _burn(uint256 id) internal override {\\n    super._burn(id);\\n    delete _recordOf[id].mut;\\n    Record memory record;\\n    emit RecordUpdated(id, USER_FIELDS_INDICATOR, record);\\n  }\\n}\\n\",\"keccak256\":\"0xb021c81c72cd4dbbd77b3599446b5e8f5a272516d35f10d1208e178e0c66e691\",\"license\":\"MIT\"},\"src/interfaces/INSUnified.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC721Metadata } from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport { IAccessControlEnumerable } from \\\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\\\";\\nimport { ModifyingIndicator } from \\\"../types/ModifyingIndicator.sol\\\";\\n\\ninterface INSUnified is IAccessControlEnumerable, IERC721Metadata {\\n  /// @dev Error: The provided token id is expired.\\n  error Expired();\\n  /// @dev Error: The provided token id is unexists.\\n  error Unexists();\\n  error ThirdLevelDomainUnallowed();\\n  /// @dev Error: The provided id expiry is greater than parent id expiry.\\n  error ExceedParentExpiry();\\n  /// @dev Error: The provided name is unavailable for registration.\\n  error Unavailable();\\n  /// @dev Error: The sender lacks the necessary permissions.\\n  error Unauthorized();\\n  /// @dev Error: Missing controller role required for modification.\\n  error MissingControllerRole();\\n  /// @dev Error: Attempting to set an immutable field, which cannot be modified.\\n  error CannotSetImmutableField();\\n  /// @dev Error: Missing protected settler role required for modification.\\n  error MissingProtectedSettlerRole();\\n  /// @dev Error: Attempting to set an expiry time that is not larger than the previous one.\\n  error ExpiryTimeMustBeLargerThanTheOldOne();\\n  /// @dev Error: The provided name must be registered or is in a grace period.\\n  error NameMustBeRegisteredOrInGracePeriod();\\n\\n  /**\\n   * | Fields\\\\Idc | Modifying Indicator |\\n   * | ---------- | ------------------- |\\n   * | depth      | 0b00000001          |\\n   * | parentId   | 0b00000010          |\\n   * | label      | 0b00000100          |\\n   */\\n  struct ImmutableRecord {\\n    // The level-th of a domain.\\n    uint8 depth;\\n    // The node of parent token. Eg, parent node of vip.duke.ron equals to namehash('duke.ron')\\n    uint256 parentId;\\n    // The label of a domain. Eg, label is vip for domain vip.duke.ron\\n    string label;\\n  }\\n\\n  /**\\n   * | Fields\\\\Idc,Roles | Modifying Indicator | Controller | Protected setter | (Parent) Owner/Spender |\\n   * | ---------------- | ------------------- | ---------- | ---------------- | ---------------------- |\\n   * | resolver         | 0b00001000          | x          |                  | x                      |\\n   * | owner            | 0b00010000          | x          |                  | x                      |\\n   * | expiry           | 0b00100000          | x          |                  |                        |\\n   * | protected        | 0b01000000          |            | x                |                        |\\n   * Note: (Parent) Owner/Spender means parent owner or current owner or current token spender.\\n   */\\n  struct MutableRecord {\\n    // The resolver address.\\n    address resolver;\\n    // The record owner. This field must equal to the owner of token.\\n    address owner;\\n    // Expiry timestamp.\\n    uint64 expiry;\\n    // Flag indicating whether the token is protected or not.\\n    bool protected;\\n  }\\n\\n  struct Record {\\n    ImmutableRecord immut;\\n    MutableRecord mut;\\n  }\\n\\n  /// @dev Emitted when a base URI is updated.\\n  event BaseURIUpdated(address indexed operator, string newURI);\\n  /// @dev Emitted when the grace period for all domain is updated.\\n  event GracePeriodUpdated(address indexed operator, uint64 newGracePeriod);\\n\\n  /**\\n   * @dev Emitted when the record of node is updated.\\n   * @param indicator The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right\\n   * to left) needs to be updated.\\n   * @param record The updated fields.\\n   */\\n  event RecordUpdated(uint256 indexed node, ModifyingIndicator indicator, Record record);\\n\\n  /**\\n   * @dev Returns the controller role.\\n   * @notice Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}.\\n   */\\n  function CONTROLLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the protected setter role.\\n   * @notice Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`.\\n   */\\n  function PROTECTED_SETTLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the reservation role.\\n   * @notice Never expire for token owner has this role.\\n   */\\n  function RESERVATION_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the max expiry value.\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the name hash output of a domain.\\n   */\\n  function namehash(string memory domain) external pure returns (bytes32 node);\\n\\n  /**\\n   * @dev Returns true if the specified name is available for registration.\\n   * Note: Only available after passing the grace period.\\n   */\\n  function available(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the grace period in second(s).\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function getGracePeriod() external view returns (uint64);\\n\\n  /**\\n   * @dev Returns the total minted ids.\\n   * Note: Burning id will not affect `totalMinted`.\\n   */\\n  function totalMinted() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the grace period in second(s).\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function setGracePeriod(uint64) external;\\n\\n  /**\\n   * @dev Sets the base uri.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract owner.\\n   *\\n   */\\n  function setBaseURI(string calldata baseTokenURI) external;\\n\\n  /**\\n   * @dev Mints token for subnode.\\n   *\\n   * Requirements:\\n   * - The token must be available.\\n   * - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   *\\n   * @param parentId The parent node to mint or create subnode.\\n   * @param label The domain label. Eg, label is duke for domain duke.ron.\\n   * @param resolver The resolver address.\\n   * @param owner The token owner.\\n   * @param duration Duration in second(s) to expire. Leave 0 to set as parent.\\n   */\\n  function mint(uint256 parentId, string calldata label, address resolver, address owner, uint64 duration)\\n    external\\n    returns (uint64 expiryTime, uint256 id);\\n\\n  /**\\n   * @dev Returns all record of a domain.\\n   * Reverts if the token is non existent.\\n   */\\n  function getRecord(uint256 id) external view returns (Record memory record);\\n\\n  /**\\n   * @dev Returns the domain name of id.\\n   */\\n  function getDomain(uint256 id) external view returns (string memory domain);\\n\\n  /**\\n   * @dev Returns whether the requester is able to modify the record based on the updated index.\\n   * Note: This method strictly follows the permission of struct {MutableRecord}.\\n   */\\n  function canSetRecord(address requester, uint256 id, ModifyingIndicator indicator)\\n    external\\n    view\\n    returns (bool, bytes4 error);\\n\\n  /**\\n   * @dev Sets record of existing token. Update operation for {Record.mut}.\\n   *\\n   * Requirements:\\n   * - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setRecord(uint256 id, ModifyingIndicator indicator, MutableRecord calldata record) external;\\n\\n  /**\\n   * @dev Reclaims ownership. Update operation for {Record.mut.owner}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   * - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function reclaim(uint256 id, address owner) external;\\n\\n  /**\\n   * @dev Renews token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function renew(uint256 id, uint64 duration) external returns (uint64 expiry);\\n\\n  /**\\n   * @dev Sets expiry time for a token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setExpiry(uint256 id, uint64 expiry) external;\\n\\n  /**\\n   * @dev Sets the protected status of a list of ids. Update operation for {Record.mut.protected}.\\n   *\\n   * Requirements:\\n   * - The method caller must have protected setter role.\\n   *\\n   * Emits events {RecordUpdated}.\\n   */\\n  function bulkSetProtected(uint256[] calldata ids, bool protected) external;\\n}\\n\",\"keccak256\":\"0x8d79100edefc3a3b52f5e306a002867dade01728925a6626f5227077bc0f535c\",\"license\":\"MIT\"},\"src/libraries/LibModifyingField.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { ModifyingIndicator } from \\\"../types/ModifyingIndicator.sol\\\";\\n\\nenum ModifyingField {\\n  Depth,\\n  ParentId,\\n  Label,\\n  Resolver,\\n  Owner,\\n  Expiry,\\n  Protected\\n}\\n\\nlibrary LibModifyingField {\\n  function indicator(ModifyingField opt) internal pure returns (ModifyingIndicator) {\\n    return ModifyingIndicator.wrap(1 << uint8(opt));\\n  }\\n}\\n\",\"keccak256\":\"0xa3a752a56545a4beff2784a42b295c3c4af6f70cbe1a18fd32479686e1a06c41\",\"license\":\"MIT\"},\"src/libraries/LibRNSDomain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nlibrary LibRNSDomain {\\n  /// @dev Value equals to namehash('ron')\\n  uint256 internal constant RON_ID = 0xba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d688;\\n  /// @dev Value equals to namehash('addr.reverse')\\n  uint256 internal constant ADDR_REVERSE_ID = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n  /**\\n   * @dev Calculate the corresponding id given parentId and label.\\n   */\\n  function toId(uint256 parentId, string memory label) internal pure returns (uint256 id) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(0x0, parentId)\\n      mstore(0x20, keccak256(add(label, 32), mload(label)))\\n      id := keccak256(0x0, 64)\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates the hash of the label.\\n   */\\n  function hashLabel(string memory label) internal pure returns (bytes32 hashed) {\\n    assembly (\\\"memory-safe\\\") {\\n      hashed := keccak256(add(label, 32), mload(label))\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculate the RNS namehash of a str.\\n   */\\n  function namehash(string memory str) internal pure returns (bytes32 hashed) {\\n    // notice: this method is case-sensitive, ensure the string is lowercased before calling this method\\n    assembly (\\\"memory-safe\\\") {\\n      // load str length\\n      let len := mload(str)\\n      // returns bytes32(0x0) if length is zero\\n      if iszero(iszero(len)) {\\n        let hashedLen\\n        // compute pointer to str[0]\\n        let head := add(str, 32)\\n        // compute pointer to str[length - 1]\\n        let tail := add(head, sub(len, 1))\\n        // cleanup dirty bytes if contains any\\n        mstore(0x0, 0)\\n        // loop backwards from `tail` to `head`\\n        for { let i := tail } iszero(lt(i, head)) { i := sub(i, 1) } {\\n          // check if `i` is `head`\\n          let isHead := eq(i, head)\\n          // check if `str[i-1]` is \\\".\\\"\\n          // `0x2e` == bytes1(\\\".\\\")\\n          let isDotNext := eq(shr(248, mload(sub(i, 1))), 0x2e)\\n          if or(isHead, isDotNext) {\\n            // size = distance(length, i) - hashedLength + 1\\n            let size := add(sub(sub(tail, i), hashedLen), 1)\\n            mstore(0x20, keccak256(i, size))\\n            mstore(0x0, keccak256(0x0, 64))\\n            // skip \\\".\\\" thereby + 1\\n            hashedLen := add(hashedLen, add(size, 1))\\n          }\\n        }\\n      }\\n      hashed := mload(0x0)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x715029b2b420c6ec00bc1f939b837acf45d247fde8426089575b0e7b5e84518b\",\"license\":\"MIT\"},\"src/libraries/math/LibSafeRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary LibSafeRange {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    unchecked {\\n      c = a + b;\\n      if (c < a) return type(uint256).max;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns value of a + b; in case result is larger than upperbound, upperbound is returned.\\n   */\\n  function addWithUpperbound(uint256 a, uint256 b, uint256 ceil) internal pure returns (uint256 c) {\\n    if (a > ceil || b > ceil) return ceil;\\n    c = add(a, b);\\n    if (c > ceil) return ceil;\\n  }\\n}\\n\",\"keccak256\":\"0x12cf5f592a2d80b9c1b0ea11b8fe2b3ed42fc6d62303ba667edc56464baa8810\",\"license\":\"MIT\"},\"src/types/ModifyingIndicator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ntype ModifyingIndicator is uint256;\\n\\nusing { hasAny } for ModifyingIndicator global;\\nusing { or as | } for ModifyingIndicator global;\\nusing { and as & } for ModifyingIndicator global;\\nusing { eq as == } for ModifyingIndicator global;\\nusing { not as ~ } for ModifyingIndicator global;\\nusing { xor as ^ } for ModifyingIndicator global;\\nusing { neq as != } for ModifyingIndicator global;\\n\\n/// @dev Indicator for modifying immutable fields: Depth, ParentId, Label. See struct {INSUnified.ImmutableRecord}.\\nModifyingIndicator constant IMMUTABLE_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x7);\\n\\n/// @dev Indicator for modifying user fields: Resolver, Owner. See struct {INSUnified.MutableRecord}.\\nModifyingIndicator constant USER_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x18);\\n\\n/// @dev Indicator when modifying all of the fields in {ModifyingField}.\\nModifyingIndicator constant ALL_FIELDS_INDICATOR = ModifyingIndicator.wrap(type(uint256).max);\\n\\nfunction eq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return ModifyingIndicator.unwrap(self) == ModifyingIndicator.unwrap(other);\\n}\\n\\nfunction neq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return !eq(self, other);\\n}\\n\\nfunction xor(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) ^ ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction not(ModifyingIndicator self) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(~ModifyingIndicator.unwrap(self));\\n}\\n\\nfunction or(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) | ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction and(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) & ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction hasAny(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return self & other != ModifyingIndicator.wrap(0);\\n}\\n\",\"keccak256\":\"0x2e42fbba358c470ff6b57268367d248f0e2fcf8d7142d762688f7aef5efae7ee\",\"license\":\"MIT\"}},\"version\":1}",
  "nonce": 182605,
  "numDeployments": 3,
  "storageLayout": {
    "storage": [
      {
        "astId": 50078,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 50081,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 48551,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)48546_storage)"
      },
      {
        "astId": 48861,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_roleMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(AddressSet)54430_storage)"
      },
      {
        "astId": 50439,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 50441,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 50445,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_owners",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 50449,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_balances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 50453,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 50459,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 439,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "nonces",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 444,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "______gap",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 50258,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_paused",
        "offset": 0,
        "slot": "60",
        "type": "t_bool"
      },
      {
        "astId": 51519,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_ownedTokens",
        "offset": 0,
        "slot": "61",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 51523,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_ownedTokensIndex",
        "offset": 0,
        "slot": "62",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 51526,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_allTokens",
        "offset": 0,
        "slot": "63",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 51530,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_allTokensIndex",
        "offset": 0,
        "slot": "64",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 61903,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "____gap",
        "offset": 0,
        "slot": "65",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 61905,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_idCounter",
        "offset": 0,
        "slot": "115",
        "type": "t_uint256"
      },
      {
        "astId": 61907,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_baseTokenURI",
        "offset": 0,
        "slot": "116",
        "type": "t_string_storage"
      },
      {
        "astId": 62193,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "____gap",
        "offset": 0,
        "slot": "117",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 62195,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_gracePeriod",
        "offset": 0,
        "slot": "167",
        "type": "t_uint64"
      },
      {
        "astId": 62201,
        "contract": "src/RNSUnified.sol:RNSUnified",
        "label": "_recordOf",
        "offset": 0,
        "slot": "168",
        "type": "t_mapping(t_uint256,t_struct(Record)65419_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_array(t_uint256)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(AddressSet)54430_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)54430_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)48546_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)48546_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Record)65419_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct INSUnified.Record)",
        "numberOfBytes": "32",
        "value": "t_struct(Record)65419_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressSet)54430_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 54429,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)54115_storage"
          }
        ]
      },
      "t_struct(ImmutableRecord)65402_storage": {
        "encoding": "inplace",
        "label": "struct INSUnified.ImmutableRecord",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 65397,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "depth",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 65399,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "parentId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 65401,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "label",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(MutableRecord)65412_storage": {
        "encoding": "inplace",
        "label": "struct INSUnified.MutableRecord",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 65405,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "resolver",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 65407,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 65409,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "expiry",
            "offset": 20,
            "slot": "1",
            "type": "t_uint64"
          },
          {
            "astId": 65411,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "protected",
            "offset": 28,
            "slot": "1",
            "type": "t_bool"
          }
        ]
      },
      "t_struct(Record)65419_storage": {
        "encoding": "inplace",
        "label": "struct INSUnified.Record",
        "numberOfBytes": "160",
        "members": [
          {
            "astId": 65415,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "immut",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(ImmutableRecord)65402_storage"
          },
          {
            "astId": 65418,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "mut",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(MutableRecord)65412_storage"
          }
        ]
      },
      "t_struct(RoleData)48546_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 48543,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 48545,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_struct(Set)54115_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 54110,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 54114,
            "contract": "src/RNSUnified.sol:RNSUnified",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1698142362,
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "CONTROLLER_ROLE()": {
        "notice": "Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}."
      },
      "PROTECTED_SETTLER_ROLE()": {
        "notice": "Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`."
      },
      "RESERVATION_ROLE()": {
        "notice": "Never expire for token owner has this role."
      },
      "stateOf(uint256)": {
        "notice": "The token state presents the properties of a token at a certain point in time, it should be unique. The token state helps other contracts can verify the token properties without getting and selecting properties from the base contract. For example: ```solidity contract Kitty {   function stateOf(uint256 _tokenId) external view returns (bytes memory) {     return abi.encodePacked(ownerOf(_tokenId), genesOf(_tokenId), levelOf(_tokenId));   } } interface Exchange {   // Buy NFT with the specificed state of `_tokenId`.   function buy(uint256 _tokenId, uint256 _price, bytes calldata _kittyState) external; } ```"
      }
    }
  }
}