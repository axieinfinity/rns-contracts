{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyBidding",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractBidderIsForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EventIsNotCreatedOrAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidArrayLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidEventRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameNotReserved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOneBidded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotYetEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAssignment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QueryIsNotInPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RatioIsTooLarge",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct EventRange",
          "name": "range",
          "type": "tuple"
        }
      ],
      "name": "AuctionEventSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "name": "BidGapRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousBidder",
          "type": "address"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "startingPrices",
          "type": "uint256[]"
        }
      ],
      "name": "LabelsListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_EXPIRY_DURATION",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_AUCTION_DOMAIN_EXPIRY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_EXPIRY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "bulkClaimBidNames",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "claimedAts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "labels",
          "type": "string[]"
        }
      ],
      "name": "bulkRegister",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct EventRange",
          "name": "range",
          "type": "tuple"
        }
      ],
      "name": "createAuctionEvent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAuction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "auctionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimedAt",
                  "type": "uint256"
                }
              ],
              "internalType": "struct INSAuction.Bid",
              "name": "bid",
              "type": "tuple"
            }
          ],
          "internalType": "struct INSAuction.DomainAuction",
          "name": "auction",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "beatPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        }
      ],
      "name": "getAuctionEvent",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct EventRange",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBidGapRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRNSUnified",
      "outputs": [
        {
          "internalType": "contract INSUnified",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        },
        {
          "internalType": "contract INSUnified",
          "name": "rnsUnified",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "treasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidGapRatio",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "startingPrices",
          "type": "uint256[]"
        }
      ],
      "name": "listNamesForAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "reserved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct EventRange",
          "name": "range",
          "type": "tuple"
        }
      ],
      "name": "setAuctionEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "name": "setBidGapRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "address": "0xc1A64532aB6e3EC0E01f2064A9075311B483Acb9",
  "args": "0x",
  "ast": {
    "absolutePath": "src/RNSAuction.sol",
    "id": 59648,
    "exportedSymbols": {
      "AccessControlEnumerable": [
        48591
      ],
      "BitMaps": [
        53728
      ],
      "EventRange": [
        65968
      ],
      "INSAuction": [
        64411
      ],
      "INSUnified": [
        65048
      ],
      "Initializable": [
        49864
      ],
      "LibEventRange": [
        66039
      ],
      "LibRNSDomain": [
        66115
      ],
      "LibSafeRange": [
        66659
      ],
      "Math": [
        53173
      ],
      "RNSAuction": [
        59647
      ],
      "RONTransferHelper": [
        67517
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9957:85",
    "nodes": [
      {
        "id": 58651,
        "nodeType": "PragmaDirective",
        "src": "32:24:85",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 58653,
        "nodeType": "ImportDirective",
        "src": "58:86:85",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 49865,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58652,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49864,
              "src": "67:13:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58655,
        "nodeType": "ImportDirective",
        "src": "145:101:85",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 48592,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58654,
              "name": "AccessControlEnumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48591,
              "src": "154:23:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58657,
        "nodeType": "ImportDirective",
        "src": "247:67:85",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 53174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58656,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53173,
              "src": "256:4:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58659,
        "nodeType": "ImportDirective",
        "src": "315:76:85",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol",
        "file": "@openzeppelin/contracts/utils/structs/BitMaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 53729,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58658,
              "name": "BitMaps",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53728,
              "src": "324:7:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58662,
        "nodeType": "ImportDirective",
        "src": "392:69:85",
        "nodes": [],
        "absolutePath": "src/interfaces/INSAuction.sol",
        "file": "./interfaces/INSAuction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 64412,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58660,
              "name": "INSUnified",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65048,
              "src": "401:10:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 58661,
              "name": "INSAuction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64411,
              "src": "413:10:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58664,
        "nodeType": "ImportDirective",
        "src": "462:65:85",
        "nodes": [],
        "absolutePath": "src/libraries/math/LibSafeRange.sol",
        "file": "./libraries/math/LibSafeRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 66660,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58663,
              "name": "LibSafeRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66659,
              "src": "471:12:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58666,
        "nodeType": "ImportDirective",
        "src": "528:60:85",
        "nodes": [],
        "absolutePath": "src/libraries/LibRNSDomain.sol",
        "file": "./libraries/LibRNSDomain.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 66116,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58665,
              "name": "LibRNSDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66115,
              "src": "537:12:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58669,
        "nodeType": "ImportDirective",
        "src": "589:74:85",
        "nodes": [],
        "absolutePath": "src/libraries/LibEventRange.sol",
        "file": "./libraries/LibEventRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 66040,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58667,
              "name": "LibEventRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66039,
              "src": "598:13:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 58668,
              "name": "EventRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65968,
              "src": "613:10:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 58671,
        "nodeType": "ImportDirective",
        "src": "664:80:85",
        "nodes": [],
        "absolutePath": "src/libraries/transfers/RONTransferHelper.sol",
        "file": "./libraries/transfers/RONTransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59648,
        "sourceUnit": 67518,
        "symbolAliases": [
          {
            "foreign": {
              "id": 58670,
              "name": "RONTransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67517,
              "src": "673:17:85",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59647,
        "nodeType": "ContractDefinition",
        "src": "746:9242:85",
        "nodes": [
          {
            "id": 58680,
            "nodeType": "UsingForDirective",
            "src": "824:31:85",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 58678,
              "name": "LibSafeRange",
              "nameLocations": [
                "830:12:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66659,
              "src": "830:12:85"
            },
            "typeName": {
              "id": 58679,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 58684,
            "nodeType": "UsingForDirective",
            "src": "858:33:85",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 58681,
              "name": "BitMaps",
              "nameLocations": [
                "864:7:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53728,
              "src": "864:7:85"
            },
            "typeName": {
              "id": 58683,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58682,
                "name": "BitMaps.BitMap",
                "nameLocations": [
                  "876:7:85",
                  "884:6:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53598,
                "src": "876:14:85"
              },
              "referencedDeclaration": 53598,
              "src": "876:14:85",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$53598_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            }
          },
          {
            "id": 58688,
            "nodeType": "UsingForDirective",
            "src": "894:35:85",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 58685,
              "name": "LibEventRange",
              "nameLocations": [
                "900:13:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66039,
              "src": "900:13:85"
            },
            "typeName": {
              "id": 58687,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58686,
                "name": "EventRange",
                "nameLocations": [
                  "918:10:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65968,
                "src": "918:10:85"
              },
              "referencedDeclaration": 65968,
              "src": "918:10:85",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                "typeString": "struct EventRange"
              }
            }
          },
          {
            "id": 58696,
            "nodeType": "VariableDeclaration",
            "src": "962:52:85",
            "nodes": [],
            "baseFunctions": [
              64271
            ],
            "constant": true,
            "documentation": {
              "id": 58689,
              "nodeType": "StructuredDocumentation",
              "src": "933:26:85",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "b9671690",
            "mutability": "constant",
            "name": "MAX_EXPIRY",
            "nameLocation": "985:10:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 58690,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "962:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 58693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1003:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint64_$",
                      "typeString": "type(uint64)"
                    },
                    "typeName": {
                      "id": 58692,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "1003:6:85",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint64_$",
                      "typeString": "type(uint64)"
                    }
                  ],
                  "id": 58691,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "998:4:85",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 58694,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "998:12:85",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint64",
                  "typeString": "type(uint64)"
                }
              },
              "id": 58695,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "1011:3:85",
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "998:16:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58700,
            "nodeType": "VariableDeclaration",
            "src": "1047:47:85",
            "nodes": [],
            "baseFunctions": [
              64289
            ],
            "constant": true,
            "documentation": {
              "id": 58697,
              "nodeType": "StructuredDocumentation",
              "src": "1018:26:85",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "4c255c97",
            "mutability": "constant",
            "name": "MAX_PERCENTAGE",
            "nameLocation": "1071:14:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58698,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1047:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130305f3030",
              "id": 58699,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1088:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "100_00"
            },
            "visibility": "public"
          },
          {
            "id": 58704,
            "nodeType": "VariableDeclaration",
            "src": "1127:56:85",
            "nodes": [],
            "baseFunctions": [
              64295
            ],
            "constant": true,
            "documentation": {
              "id": 58701,
              "nodeType": "StructuredDocumentation",
              "src": "1098:26:85",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "19a3ee40",
            "mutability": "constant",
            "name": "DOMAIN_EXPIRY_DURATION",
            "nameLocation": "1150:22:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 58702,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1127:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "333635",
              "id": 58703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1175:8:85",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "365"
            },
            "visibility": "public"
          },
          {
            "id": 58710,
            "nodeType": "VariableDeclaration",
            "src": "1216:63:85",
            "nodes": [],
            "baseFunctions": [
              64277
            ],
            "constant": true,
            "documentation": {
              "id": 58705,
              "nodeType": "StructuredDocumentation",
              "src": "1187:26:85",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "0afe1bb3",
            "mutability": "constant",
            "name": "MAX_AUCTION_DOMAIN_EXPIRY",
            "nameLocation": "1239:25:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 58706,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1216:6:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_94608000_by_1",
                "typeString": "int_const 94608000"
              },
              "id": 58709,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "333635",
                "id": 58707,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1267:8:85",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_31536000_by_1",
                  "typeString": "int_const 31536000"
                },
                "value": "365"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "33",
                "id": 58708,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1278:1:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "src": "1267:12:85",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_94608000_by_1",
                "typeString": "int_const 94608000"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58716,
            "nodeType": "VariableDeclaration",
            "src": "1312:66:85",
            "nodes": [],
            "baseFunctions": [
              64283
            ],
            "constant": true,
            "documentation": {
              "id": 58711,
              "nodeType": "StructuredDocumentation",
              "src": "1283:26:85",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "f5b541a6",
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "1336:13:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 58712,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1312:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 58714,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1362:15:85",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 58713,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1352:9:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 58715,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1352:26:85",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 58721,
            "nodeType": "VariableDeclaration",
            "src": "1418:27:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58717,
              "nodeType": "StructuredDocumentation",
              "src": "1383:32:85",
              "text": "@dev Gap for upgradeability."
            },
            "mutability": "mutable",
            "name": "____gap",
            "nameLocation": "1438:7:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 58718,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1418:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 58720,
              "length": {
                "hexValue": "3530",
                "id": 58719,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1426:2:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1418:11:85",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 58725,
            "nodeType": "VariableDeclaration",
            "src": "1485:31:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58722,
              "nodeType": "StructuredDocumentation",
              "src": "1449:33:85",
              "text": "@dev The RNSUnified contract."
            },
            "mutability": "mutable",
            "name": "_rnsUnified",
            "nameLocation": "1505:11:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INSUnified_$65048",
              "typeString": "contract INSUnified"
            },
            "typeName": {
              "id": 58724,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58723,
                "name": "INSUnified",
                "nameLocations": [
                  "1485:10:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65048,
                "src": "1485:10:85"
              },
              "referencedDeclaration": 65048,
              "src": "1485:10:85",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INSUnified_$65048",
                "typeString": "contract INSUnified"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58731,
            "nodeType": "VariableDeclaration",
            "src": "1570:63:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58726,
              "nodeType": "StructuredDocumentation",
              "src": "1520:47:85",
              "text": "@dev Mapping from auction Id => event range"
            },
            "mutability": "mutable",
            "name": "_auctionRange",
            "nameLocation": "1620:13:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
              "typeString": "mapping(bytes32 => struct EventRange)"
            },
            "typeName": {
              "id": 58730,
              "keyName": "auctionId",
              "keyNameLocation": "1586:9:85",
              "keyType": {
                "id": 58727,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1578:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1570:40:85",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                "typeString": "mapping(bytes32 => struct EventRange)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 58729,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 58728,
                  "name": "EventRange",
                  "nameLocations": [
                    "1599:10:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65968,
                  "src": "1599:10:85"
                },
                "referencedDeclaration": 65968,
                "src": "1599:10:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                  "typeString": "struct EventRange"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58737,
            "nodeType": "VariableDeclaration",
            "src": "1699:60:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58732,
              "nodeType": "StructuredDocumentation",
              "src": "1637:59:85",
              "text": "@dev Mapping from id of domain names => auction detail."
            },
            "mutability": "mutable",
            "name": "_domainAuction",
            "nameLocation": "1745:14:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
              "typeString": "mapping(uint256 => struct INSAuction.DomainAuction)"
            },
            "typeName": {
              "id": 58736,
              "keyName": "id",
              "keyNameLocation": "1715:2:85",
              "keyType": {
                "id": 58733,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1707:7:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1699:36:85",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                "typeString": "mapping(uint256 => struct INSAuction.DomainAuction)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 58735,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 58734,
                  "name": "DomainAuction",
                  "nameLocations": [
                    "1721:13:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64221,
                  "src": "1721:13:85"
                },
                "referencedDeclaration": 64221,
                "src": "1721:13:85",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                  "typeString": "struct INSAuction.DomainAuction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58740,
            "nodeType": "VariableDeclaration",
            "src": "1789:34:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58738,
              "nodeType": "StructuredDocumentation",
              "src": "1764:22:85",
              "text": "@dev The treasury."
            },
            "mutability": "mutable",
            "name": "_treasury",
            "nameLocation": "1814:9:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 58739,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1789:15:85",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58743,
            "nodeType": "VariableDeclaration",
            "src": "1892:29:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58741,
              "nodeType": "StructuredDocumentation",
              "src": "1827:62:85",
              "text": "@dev The gap ratio between 2 bids with the starting price."
            },
            "mutability": "mutable",
            "name": "_bidGapRatio",
            "nameLocation": "1909:12:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58742,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1892:7:85",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58747,
            "nodeType": "VariableDeclaration",
            "src": "1976:33:85",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 58744,
              "nodeType": "StructuredDocumentation",
              "src": "1925:48:85",
              "text": "@dev Mapping from id => bool reserved status"
            },
            "mutability": "mutable",
            "name": "_reserved",
            "nameLocation": "2000:9:85",
            "scope": 59647,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_BitMap_$53598_storage",
              "typeString": "struct BitMaps.BitMap"
            },
            "typeName": {
              "id": 58746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 58745,
                "name": "BitMaps.BitMap",
                "nameLocations": [
                  "1976:7:85",
                  "1984:6:85"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53598,
                "src": "1976:14:85"
              },
              "referencedDeclaration": 53598,
              "src": "1976:14:85",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$53598_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 58757,
            "nodeType": "ModifierDefinition",
            "src": "2014:90:85",
            "nodes": [],
            "body": {
              "id": 58756,
              "nodeType": "Block",
              "src": "2057:47:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58752,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58749,
                        "src": "2082:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 58751,
                      "name": "_requireNotStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59646,
                      "src": "2063:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 58753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:29:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58754,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:29:85"
                },
                {
                  "id": 58755,
                  "nodeType": "PlaceholderStatement",
                  "src": "2098:1:85"
                }
              ]
            },
            "name": "whenNotStarted",
            "nameLocation": "2023:14:85",
            "parameters": {
              "id": 58750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58749,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "2046:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58757,
                  "src": "2038:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58748,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2038:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:19:85"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 58768,
            "nodeType": "ModifierDefinition",
            "src": "2108:104:85",
            "nodes": [],
            "body": {
              "id": 58767,
              "nodeType": "Block",
              "src": "2164:48:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58763,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58760,
                        "src": "2194:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      ],
                      "id": 58762,
                      "name": "_requireValidEventRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59629,
                      "src": "2170:23:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$65968_calldata_ptr_$returns$__$",
                        "typeString": "function (struct EventRange calldata) view"
                      }
                    },
                    "id": 58764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:30:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58765,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:30:85"
                },
                {
                  "id": 58766,
                  "nodeType": "PlaceholderStatement",
                  "src": "2206:1:85"
                }
              ]
            },
            "name": "onlyValidEventRange",
            "nameLocation": "2117:19:85",
            "parameters": {
              "id": 58761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58760,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "2157:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58768,
                  "src": "2137:25:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 58759,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58758,
                      "name": "EventRange",
                      "nameLocations": [
                        "2137:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65968,
                      "src": "2137:10:85"
                    },
                    "referencedDeclaration": 65968,
                    "src": "2137:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2136:27:85"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 58775,
            "nodeType": "FunctionDefinition",
            "src": "2216:55:85",
            "nodes": [],
            "body": {
              "id": 58774,
              "nodeType": "Block",
              "src": "2238:33:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58771,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49845,
                      "src": "2244:20:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 58772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:22:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58773,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:22:85"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 58769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:2:85"
            },
            "returnParameters": {
              "id": 58770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2238:0:85"
            },
            "scope": 59647,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58838,
            "nodeType": "FunctionDefinition",
            "src": "2275:531:85",
            "nodes": [],
            "body": {
              "id": 58837,
              "nodeType": "Block",
              "src": "2455:351:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58793,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58785,
                        "src": "2474:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 58792,
                      "name": "_setTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59540,
                      "src": "2461:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 58794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2461:22:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58795,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58797,
                        "name": "bidGapRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58787,
                        "src": "2505:11:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58796,
                      "name": "_setBidGapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59562,
                      "src": "2489:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 58798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:28:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58799,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58801,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48178,
                        "src": "2534:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 58802,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58777,
                        "src": "2554:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 58800,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48374,
                      "src": "2523:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 58803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2523:37:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58804,
                  "nodeType": "ExpressionStatement",
                  "src": "2523:37:85"
                },
                {
                  "assignments": [
                    58806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58806,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2575:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58837,
                      "src": "2567:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2567:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58809,
                  "initialValue": {
                    "expression": {
                      "id": 58807,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58780,
                      "src": "2584:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 58808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2594:6:85",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2584:16:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2567:33:85"
                },
                {
                  "assignments": [
                    58811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58811,
                      "mutability": "mutable",
                      "name": "operatorRole",
                      "nameLocation": "2614:12:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58837,
                      "src": "2606:20:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 58810,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58813,
                  "initialValue": {
                    "id": 58812,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58716,
                    "src": "2629:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2606:36:85"
                },
                {
                  "body": {
                    "id": 58831,
                    "nodeType": "Block",
                    "src": "2678:93:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 58821,
                              "name": "operatorRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58811,
                              "src": "2697:12:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 58822,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58780,
                                "src": "2711:9:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 58824,
                              "indexExpression": {
                                "id": 58823,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58815,
                                "src": "2721:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2711:12:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 58820,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48374,
                            "src": "2686:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 58825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2686:38:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58826,
                        "nodeType": "ExpressionStatement",
                        "src": "2686:38:85"
                      },
                      {
                        "id": 58830,
                        "nodeType": "UncheckedBlock",
                        "src": "2733:32:85",
                        "statements": [
                          {
                            "expression": {
                              "id": 58828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2753:3:85",
                              "subExpression": {
                                "id": 58827,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58815,
                                "src": "2755:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 58829,
                            "nodeType": "ExpressionStatement",
                            "src": "2753:3:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 58819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 58817,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58815,
                      "src": "2665:1:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 58818,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58806,
                      "src": "2669:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2665:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58832,
                  "initializationExpression": {
                    "assignments": [
                      58815
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 58815,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2662:1:85",
                        "nodeType": "VariableDeclaration",
                        "scope": 58832,
                        "src": "2654:9:85",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58814,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2654:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 58816,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2654:9:85"
                  },
                  "nodeType": "ForStatement",
                  "src": "2649:122:85"
                },
                {
                  "expression": {
                    "id": 58835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58833,
                      "name": "_rnsUnified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58725,
                      "src": "2777:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$65048",
                        "typeString": "contract INSUnified"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58834,
                      "name": "rnsUnified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58783,
                      "src": "2791:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$65048",
                        "typeString": "contract INSUnified"
                      }
                    },
                    "src": "2777:24:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "id": 58836,
                  "nodeType": "ExpressionStatement",
                  "src": "2777:24:85"
                }
              ]
            },
            "functionSelector": "ec14cf37",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 58790,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58789,
                  "name": "initializer",
                  "nameLocations": [
                    "2443:11:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49766,
                  "src": "2443:11:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "2443:11:85"
              }
            ],
            "name": "initialize",
            "nameLocation": "2284:10:85",
            "parameters": {
              "id": 58788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58777,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "2308:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58838,
                  "src": "2300:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58780,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "2338:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58838,
                  "src": "2319:28:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 58778,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2319:7:85",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 58779,
                    "nodeType": "ArrayTypeName",
                    "src": "2319:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58783,
                  "mutability": "mutable",
                  "name": "rnsUnified",
                  "nameLocation": "2364:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58838,
                  "src": "2353:21:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSUnified_$65048",
                    "typeString": "contract INSUnified"
                  },
                  "typeName": {
                    "id": 58782,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58781,
                      "name": "INSUnified",
                      "nameLocations": [
                        "2353:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65048,
                      "src": "2353:10:85"
                    },
                    "referencedDeclaration": 65048,
                    "src": "2353:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58785,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nameLocation": "2396:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58838,
                  "src": "2380:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 58784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:15:85",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58787,
                  "mutability": "mutable",
                  "name": "bidGapRatio",
                  "nameLocation": "2418:11:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58838,
                  "src": "2410:19:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2410:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:139:85"
            },
            "returnParameters": {
              "id": 58791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2455:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58928,
            "nodeType": "FunctionDefinition",
            "src": "2850:598:85",
            "nodes": [],
            "body": {
              "id": 58927,
              "nodeType": "Block",
              "src": "2962:486:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58852,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2976:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58927,
                      "src": "2968:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58855,
                  "initialValue": {
                    "expression": {
                      "id": 58853,
                      "name": "labels",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58842,
                      "src": "2985:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "string calldata[] calldata"
                      }
                    },
                    "id": 58854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2992:6:85",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2985:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:30:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 58858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 58856,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58852,
                      "src": "3008:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 58857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3018:1:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3008:11:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58862,
                  "nodeType": "IfStatement",
                  "src": "3004:44:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 58859,
                        "name": "InvalidArrayLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64200,
                        "src": "3028:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 58860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3028:20:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 58861,
                    "nodeType": "RevertStatement",
                    "src": "3021:27:85"
                  }
                },
                {
                  "expression": {
                    "id": 58869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58863,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58849,
                      "src": "3054:3:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58867,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58852,
                          "src": "3074:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 58866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3060:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 58864,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3064:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 58865,
                          "nodeType": "ArrayTypeName",
                          "src": "3064:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 58868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3060:21:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3054:27:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 58870,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:27:85"
                },
                {
                  "assignments": [
                    58873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58873,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "3098:10:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58927,
                      "src": "3087:21:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$65048",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 58872,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 58871,
                          "name": "INSUnified",
                          "nameLocations": [
                            "3087:10:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65048,
                          "src": "3087:10:85"
                        },
                        "referencedDeclaration": 65048,
                        "src": "3087:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$65048",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58875,
                  "initialValue": {
                    "id": 58874,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58725,
                    "src": "3111:11:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:35:85"
                },
                {
                  "assignments": [
                    58877
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58877,
                      "mutability": "mutable",
                      "name": "parentId",
                      "nameLocation": "3136:8:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58927,
                      "src": "3128:16:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58876,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3128:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58880,
                  "initialValue": {
                    "expression": {
                      "id": 58878,
                      "name": "LibRNSDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66115,
                      "src": "3147:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$66115_$",
                        "typeString": "type(library LibRNSDomain)"
                      }
                    },
                    "id": 58879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3160:6:85",
                    "memberName": "RON_ID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66078,
                    "src": "3147:19:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3128:38:85"
                },
                {
                  "assignments": [
                    58882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58882,
                      "mutability": "mutable",
                      "name": "domainExpiryDuration",
                      "nameLocation": "3179:20:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 58927,
                      "src": "3172:27:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 58881,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3172:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58884,
                  "initialValue": {
                    "id": 58883,
                    "name": "DOMAIN_EXPIRY_DURATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58704,
                    "src": "3202:22:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3172:52:85"
                },
                {
                  "body": {
                    "id": 58925,
                    "nodeType": "Block",
                    "src": "3260:184:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 58911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              {
                                "baseExpression": {
                                  "id": 58891,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58849,
                                  "src": "3271:3:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 58893,
                                "indexExpression": {
                                  "id": 58892,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58886,
                                  "src": "3275:1:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3271:6:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 58894,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3268:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$_t_uint256_$",
                              "typeString": "tuple(,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 58897,
                                "name": "parentId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58877,
                                "src": "3297:8:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 58898,
                                  "name": "labels",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58842,
                                  "src": "3307:6:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "string calldata[] calldata"
                                  }
                                },
                                "id": 58900,
                                "indexExpression": {
                                  "id": 58899,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58886,
                                  "src": "3314:1:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3307:9:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 58903,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3326:3:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 58902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3318:7:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 58901,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3318:7:85",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 58904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3318:12:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 58907,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3340:4:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RNSAuction_$59647",
                                      "typeString": "contract RNSAuction"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RNSAuction_$59647",
                                      "typeString": "contract RNSAuction"
                                    }
                                  ],
                                  "id": 58906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3332:7:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 58905,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3332:7:85",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 58908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3332:13:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 58909,
                                "name": "domainExpiryDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58882,
                                "src": "3347:20:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "expression": {
                                "id": 58895,
                                "name": "rnsUnified",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58873,
                                "src": "3281:10:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_INSUnified_$65048",
                                  "typeString": "contract INSUnified"
                                }
                              },
                              "id": 58896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3292:4:85",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64968,
                              "src": "3281:15:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint64_$returns$_t_uint64_$_t_uint256_$",
                                "typeString": "function (uint256,string memory,address,address,uint64) external returns (uint64,uint256)"
                              }
                            },
                            "id": 58910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3281:87:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint64_$_t_uint256_$",
                              "typeString": "tuple(uint64,uint256)"
                            }
                          },
                          "src": "3268:100:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58912,
                        "nodeType": "ExpressionStatement",
                        "src": "3268:100:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 58916,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58849,
                                "src": "3390:3:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 58918,
                              "indexExpression": {
                                "id": 58917,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58886,
                                "src": "3394:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3390:6:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 58913,
                              "name": "_reserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58747,
                              "src": "3376:9:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BitMap_$53598_storage",
                                "typeString": "struct BitMaps.BitMap storage ref"
                              }
                            },
                            "id": 58915,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3386:3:85",
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53693,
                            "src": "3376:13:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BitMap_$53598_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_BitMap_$53598_storage_ptr_$",
                              "typeString": "function (struct BitMaps.BitMap storage pointer,uint256)"
                            }
                          },
                          "id": 58919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3376:21:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58920,
                        "nodeType": "ExpressionStatement",
                        "src": "3376:21:85"
                      },
                      {
                        "id": 58924,
                        "nodeType": "UncheckedBlock",
                        "src": "3406:32:85",
                        "statements": [
                          {
                            "expression": {
                              "id": 58922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "3426:3:85",
                              "subExpression": {
                                "id": 58921,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58886,
                                "src": "3428:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 58923,
                            "nodeType": "ExpressionStatement",
                            "src": "3426:3:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 58890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 58888,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58886,
                      "src": "3247:1:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 58889,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58852,
                      "src": "3251:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58926,
                  "initializationExpression": {
                    "assignments": [
                      58886
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 58886,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3244:1:85",
                        "nodeType": "VariableDeclaration",
                        "scope": 58926,
                        "src": "3236:9:85",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3236:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 58887,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3236:9:85"
                  },
                  "nodeType": "ForStatement",
                  "src": "3231:213:85"
                }
              ]
            },
            "baseFunctions": [
              64305
            ],
            "documentation": {
              "id": 58839,
              "nodeType": "StructuredDocumentation",
              "src": "2810:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "791a26b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 58845,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58716,
                    "src": "2916:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 58846,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58844,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2907:8:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "2907:8:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "2907:23:85"
              }
            ],
            "name": "bulkRegister",
            "nameLocation": "2859:12:85",
            "parameters": {
              "id": 58843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58842,
                  "mutability": "mutable",
                  "name": "labels",
                  "nameLocation": "2890:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58928,
                  "src": "2872:24:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 58840,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2872:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 58841,
                    "nodeType": "ArrayTypeName",
                    "src": "2872:8:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2871:26:85"
            },
            "returnParameters": {
              "id": 58850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58849,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2957:3:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58928,
                  "src": "2940:20:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 58847,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2940:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 58848,
                    "nodeType": "ArrayTypeName",
                    "src": "2940:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:22:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58942,
            "nodeType": "FunctionDefinition",
            "src": "3492:92:85",
            "nodes": [],
            "body": {
              "id": 58941,
              "nodeType": "Block",
              "src": "3549:35:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58938,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58931,
                        "src": "3576:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58936,
                        "name": "_reserved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58747,
                        "src": "3562:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BitMap_$53598_storage",
                          "typeString": "struct BitMaps.BitMap storage ref"
                        }
                      },
                      "id": 58937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3572:3:85",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53634,
                      "src": "3562:13:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_BitMap_$53598_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_BitMap_$53598_storage_ptr_$",
                        "typeString": "function (struct BitMaps.BitMap storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 58939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:17:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 58935,
                  "id": 58940,
                  "nodeType": "Return",
                  "src": "3555:24:85"
                }
              ]
            },
            "baseFunctions": [
              64313
            ],
            "documentation": {
              "id": 58929,
              "nodeType": "StructuredDocumentation",
              "src": "3452:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "53f9195e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserved",
            "nameLocation": "3501:8:85",
            "parameters": {
              "id": 58932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58931,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3518:2:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58942,
                  "src": "3510:10:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:12:85"
            },
            "returnParameters": {
              "id": 58935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58934,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58942,
                  "src": "3543:4:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58933,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3543:4:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3542:6:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58980,
            "nodeType": "FunctionDefinition",
            "src": "3628:313:85",
            "nodes": [],
            "body": {
              "id": 58979,
              "nodeType": "Block",
              "src": "3794:147:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 58966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58957,
                      "name": "auctionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58955,
                      "src": "3800:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 58961,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51922,
                                "src": "3833:10:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 58962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3833:12:85",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 58963,
                              "name": "range",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58946,
                              "src": "3847:5:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                                "typeString": "struct EventRange calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                                "typeString": "struct EventRange calldata"
                              }
                            ],
                            "expression": {
                              "id": 58959,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3822:3:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 58960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3826:6:85",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "3822:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 58964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3822:31:85",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 58958,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3812:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 58965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3812:42:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3800:54:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 58967,
                  "nodeType": "ExpressionStatement",
                  "src": "3800:54:85"
                },
                {
                  "expression": {
                    "id": 58972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 58968,
                        "name": "_auctionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58731,
                        "src": "3860:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                          "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                        }
                      },
                      "id": 58970,
                      "indexExpression": {
                        "id": 58969,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58955,
                        "src": "3874:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3860:24:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                        "typeString": "struct EventRange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58971,
                      "name": "range",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58946,
                      "src": "3887:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                        "typeString": "struct EventRange calldata"
                      }
                    },
                    "src": "3860:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "id": 58973,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:32:85"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 58975,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58955,
                        "src": "3919:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 58976,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58946,
                        "src": "3930:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      ],
                      "id": 58974,
                      "name": "AuctionEventSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64229,
                      "src": "3903:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_EventRange_$65968_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct EventRange memory)"
                      }
                    },
                    "id": 58977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3903:33:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58978,
                  "nodeType": "EmitStatement",
                  "src": "3898:38:85"
                }
              ]
            },
            "baseFunctions": [
              64322
            ],
            "documentation": {
              "id": 58943,
              "nodeType": "StructuredDocumentation",
              "src": "3588:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "db5e1ec6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 58949,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "3709:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 58950,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58948,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3700:8:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "3700:8:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "3700:28:85"
              },
              {
                "arguments": [
                  {
                    "id": 58952,
                    "name": "range",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58946,
                    "src": "3753:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                      "typeString": "struct EventRange calldata"
                    }
                  }
                ],
                "id": 58953,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58951,
                  "name": "onlyValidEventRange",
                  "nameLocations": [
                    "3733:19:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58768,
                  "src": "3733:19:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "3733:26:85"
              }
            ],
            "name": "createAuctionEvent",
            "nameLocation": "3637:18:85",
            "parameters": {
              "id": 58947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58946,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "3676:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58980,
                  "src": "3656:25:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 58945,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58944,
                      "name": "EventRange",
                      "nameLocations": [
                        "3656:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65968,
                      "src": "3656:10:85"
                    },
                    "referencedDeclaration": 65968,
                    "src": "3656:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3655:27:85"
            },
            "returnParameters": {
              "id": 58956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58955,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "3781:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 58980,
                  "src": "3773:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58954,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3772:19:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59010,
            "nodeType": "FunctionDefinition",
            "src": "3985:267:85",
            "nodes": [],
            "body": {
              "id": 59009,
              "nodeType": "Block",
              "src": "4165:87:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 58998,
                        "name": "_auctionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58731,
                        "src": "4171:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                          "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                        }
                      },
                      "id": 59000,
                      "indexExpression": {
                        "id": 58999,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58983,
                        "src": "4185:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4171:24:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                        "typeString": "struct EventRange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59001,
                      "name": "range",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58986,
                      "src": "4198:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                        "typeString": "struct EventRange calldata"
                      }
                    },
                    "src": "4171:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "id": 59003,
                  "nodeType": "ExpressionStatement",
                  "src": "4171:32:85"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59005,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58983,
                        "src": "4230:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59006,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58986,
                        "src": "4241:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      ],
                      "id": 59004,
                      "name": "AuctionEventSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64229,
                      "src": "4214:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_EventRange_$65968_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct EventRange memory)"
                      }
                    },
                    "id": 59007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:33:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59008,
                  "nodeType": "EmitStatement",
                  "src": "4209:38:85"
                }
              ]
            },
            "baseFunctions": [
              64331
            ],
            "documentation": {
              "id": 58981,
              "nodeType": "StructuredDocumentation",
              "src": "3945:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "81bec1b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 58989,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "4082:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 58990,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58988,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4073:8:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "4073:8:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "4073:28:85"
              },
              {
                "arguments": [
                  {
                    "id": 58992,
                    "name": "range",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58986,
                    "src": "4126:5:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                      "typeString": "struct EventRange calldata"
                    }
                  }
                ],
                "id": 58993,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58991,
                  "name": "onlyValidEventRange",
                  "nameLocations": [
                    "4106:19:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58768,
                  "src": "4106:19:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "4106:26:85"
              },
              {
                "arguments": [
                  {
                    "id": 58995,
                    "name": "auctionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58983,
                    "src": "4152:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 58996,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58994,
                  "name": "whenNotStarted",
                  "nameLocations": [
                    "4137:14:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58757,
                  "src": "4137:14:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "4137:25:85"
              }
            ],
            "name": "setAuctionEvent",
            "nameLocation": "3994:15:85",
            "parameters": {
              "id": 58987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58983,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "4018:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59010,
                  "src": "4010:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 58982,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58986,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "4049:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59010,
                  "src": "4029:25:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 58985,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58984,
                      "name": "EventRange",
                      "nameLocations": [
                        "4029:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65968,
                      "src": "4029:10:85"
                    },
                    "referencedDeclaration": 65968,
                    "src": "4029:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4009:46:85"
            },
            "returnParameters": {
              "id": 58997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59024,
            "nodeType": "FunctionDefinition",
            "src": "4296:126:85",
            "nodes": [],
            "body": {
              "id": 59023,
              "nodeType": "Block",
              "src": "4380:42:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59019,
                      "name": "_auctionRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58731,
                      "src": "4393:13:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                        "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                      }
                    },
                    "id": 59021,
                    "indexExpression": {
                      "id": 59020,
                      "name": "auctionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59013,
                      "src": "4407:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4393:24:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "functionReturnParameters": 59018,
                  "id": 59022,
                  "nodeType": "Return",
                  "src": "4386:31:85"
                }
              ]
            },
            "baseFunctions": [
              64340
            ],
            "documentation": {
              "id": 59011,
              "nodeType": "StructuredDocumentation",
              "src": "4256:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "15a29162",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuctionEvent",
            "nameLocation": "4305:15:85",
            "parameters": {
              "id": 59014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59013,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "4329:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59024,
                  "src": "4321:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59012,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4321:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4320:19:85"
            },
            "returnParameters": {
              "id": 59018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59017,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59024,
                  "src": "4361:17:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 59016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59015,
                      "name": "EventRange",
                      "nameLocations": [
                        "4361:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65968,
                      "src": "4361:10:85"
                    },
                    "referencedDeclaration": 65968,
                    "src": "4361:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4360:19:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59147,
            "nodeType": "FunctionDefinition",
            "src": "4466:884:85",
            "nodes": [],
            "body": {
              "id": 59146,
              "nodeType": "Block",
              "src": "4646:704:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59043,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "4660:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59146,
                      "src": "4652:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59042,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4652:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59046,
                  "initialValue": {
                    "expression": {
                      "id": 59044,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59030,
                      "src": "4669:3:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 59045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4673:6:85",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4669:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:27:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 59054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 59049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 59047,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59043,
                        "src": "4689:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 59048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4699:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4689:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 59053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 59050,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59043,
                        "src": "4704:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 59051,
                          "name": "startingPrices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59033,
                          "src": "4714:14:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 59052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4729:6:85",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4714:21:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4704:31:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4689:46:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59058,
                  "nodeType": "IfStatement",
                  "src": "4685:79:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59055,
                        "name": "InvalidArrayLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64200,
                        "src": "4744:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4744:20:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59057,
                    "nodeType": "RevertStatement",
                    "src": "4737:27:85"
                  }
                },
                {
                  "assignments": [
                    59060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59060,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "4778:2:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59146,
                      "src": "4770:10:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59059,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4770:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59061,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4770:10:85"
                },
                {
                  "assignments": [
                    59063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59063,
                      "mutability": "mutable",
                      "name": "mAuctionId",
                      "nameLocation": "4794:10:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59146,
                      "src": "4786:18:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 59062,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4786:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59064,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4786:18:85"
                },
                {
                  "assignments": [
                    59067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59067,
                      "mutability": "mutable",
                      "name": "sAuction",
                      "nameLocation": "4832:8:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59146,
                      "src": "4810:30:85",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                        "typeString": "struct INSAuction.DomainAuction"
                      },
                      "typeName": {
                        "id": 59066,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59065,
                          "name": "DomainAuction",
                          "nameLocations": [
                            "4810:13:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64221,
                          "src": "4810:13:85"
                        },
                        "referencedDeclaration": 64221,
                        "src": "4810:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                          "typeString": "struct INSAuction.DomainAuction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59068,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:30:85"
                },
                {
                  "body": {
                    "id": 59138,
                    "nodeType": "Block",
                    "src": "4876:414:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 59079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59075,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59060,
                            "src": "4884:2:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 59076,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59030,
                              "src": "4889:3:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 59078,
                            "indexExpression": {
                              "id": 59077,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59070,
                              "src": "4893:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4889:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4884:11:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59080,
                        "nodeType": "ExpressionStatement",
                        "src": "4884:11:85"
                      },
                      {
                        "condition": {
                          "id": 59084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4907:13:85",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 59082,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59060,
                                "src": "4917:2:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 59081,
                              "name": "reserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58942,
                              "src": "4908:8:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 59083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4908:12:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 59088,
                        "nodeType": "IfStatement",
                        "src": "4903:43:85",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 59085,
                              "name": "NameNotReserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64192,
                              "src": "4929:15:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 59086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4929:17:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 59087,
                          "nodeType": "RevertStatement",
                          "src": "4922:24:85"
                        }
                      },
                      {
                        "expression": {
                          "id": 59093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59089,
                            "name": "sAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59067,
                            "src": "4955:8:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                              "typeString": "struct INSAuction.DomainAuction storage pointer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 59090,
                              "name": "_domainAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58737,
                              "src": "4966:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                                "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                              }
                            },
                            "id": 59092,
                            "indexExpression": {
                              "id": 59091,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59060,
                              "src": "4981:2:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4966:18:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$64221_storage",
                              "typeString": "struct INSAuction.DomainAuction storage ref"
                            }
                          },
                          "src": "4955:29:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                            "typeString": "struct INSAuction.DomainAuction storage pointer"
                          }
                        },
                        "id": 59094,
                        "nodeType": "ExpressionStatement",
                        "src": "4955:29:85"
                      },
                      {
                        "expression": {
                          "id": 59098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59095,
                            "name": "mAuctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59063,
                            "src": "4992:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 59096,
                              "name": "sAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59067,
                              "src": "5005:8:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                                "typeString": "struct INSAuction.DomainAuction storage pointer"
                              }
                            },
                            "id": 59097,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5014:9:85",
                            "memberName": "auctionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64215,
                            "src": "5005:18:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4992:31:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 59099,
                        "nodeType": "ExpressionStatement",
                        "src": "4992:31:85"
                      },
                      {
                        "condition": {
                          "id": 59114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5035:76:85",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 59112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 59106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 59102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 59100,
                                      "name": "mAuctionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59063,
                                      "src": "5037:10:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 59101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5051:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "5037:15:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 59105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 59103,
                                      "name": "mAuctionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59063,
                                      "src": "5056:10:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 59104,
                                      "name": "auctionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59027,
                                      "src": "5070:9:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "5056:23:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5037:42:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 59111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 59107,
                                        "name": "sAuction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59067,
                                        "src": "5083:8:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                                          "typeString": "struct INSAuction.DomainAuction storage pointer"
                                        }
                                      },
                                      "id": 59108,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5092:3:85",
                                      "memberName": "bid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 64220,
                                      "src": "5083:12:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bid_$64213_storage",
                                        "typeString": "struct INSAuction.Bid storage ref"
                                      }
                                    },
                                    "id": 59109,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5096:9:85",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64210,
                                    "src": "5083:22:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 59110,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5109:1:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5083:27:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5037:73:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 59113,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5036:75:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 59119,
                        "nodeType": "IfStatement",
                        "src": "5031:124:85",
                        "trueBody": {
                          "id": 59118,
                          "nodeType": "Block",
                          "src": "5113:42:85",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 59115,
                                  "name": "AlreadyBidding",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64188,
                                  "src": "5130:14:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 59116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5130:16:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59117,
                              "nodeType": "RevertStatement",
                              "src": "5123:23:85"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 59124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 59120,
                              "name": "sAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59067,
                              "src": "5163:8:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                                "typeString": "struct INSAuction.DomainAuction storage pointer"
                              }
                            },
                            "id": 59122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5172:9:85",
                            "memberName": "auctionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64215,
                            "src": "5163:18:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 59123,
                            "name": "auctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59027,
                            "src": "5184:9:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5163:30:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 59125,
                        "nodeType": "ExpressionStatement",
                        "src": "5163:30:85"
                      },
                      {
                        "expression": {
                          "id": 59132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 59126,
                              "name": "sAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59067,
                              "src": "5201:8:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                                "typeString": "struct INSAuction.DomainAuction storage pointer"
                              }
                            },
                            "id": 59128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5210:13:85",
                            "memberName": "startingPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64217,
                            "src": "5201:22:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 59129,
                              "name": "startingPrices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59033,
                              "src": "5226:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 59131,
                            "indexExpression": {
                              "id": 59130,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59070,
                              "src": "5241:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5226:17:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5201:42:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59133,
                        "nodeType": "ExpressionStatement",
                        "src": "5201:42:85"
                      },
                      {
                        "id": 59137,
                        "nodeType": "UncheckedBlock",
                        "src": "5252:32:85",
                        "statements": [
                          {
                            "expression": {
                              "id": 59135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "5272:3:85",
                              "subExpression": {
                                "id": 59134,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59070,
                                "src": "5274:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59136,
                            "nodeType": "ExpressionStatement",
                            "src": "5272:3:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59072,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59070,
                      "src": "4863:1:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 59073,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59043,
                      "src": "4867:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4863:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59139,
                  "initializationExpression": {
                    "assignments": [
                      59070
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59070,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4860:1:85",
                        "nodeType": "VariableDeclaration",
                        "scope": 59139,
                        "src": "4852:9:85",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 59069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4852:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 59071,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4852:9:85"
                  },
                  "nodeType": "ForStatement",
                  "src": "4847:443:85"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59141,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59027,
                        "src": "5314:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59142,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59030,
                        "src": "5325:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 59143,
                        "name": "startingPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59033,
                        "src": "5330:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 59140,
                      "name": "LabelsListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64240,
                      "src": "5301:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 59144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5301:44:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59145,
                  "nodeType": "EmitStatement",
                  "src": "5296:49:85"
                }
              ]
            },
            "baseFunctions": [
              64352
            ],
            "documentation": {
              "id": 59025,
              "nodeType": "StructuredDocumentation",
              "src": "4426:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "777b0a18",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59036,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58716,
                    "src": "4599:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59037,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59035,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4590:8:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "4590:8:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "4590:23:85"
              },
              {
                "arguments": [
                  {
                    "id": 59039,
                    "name": "auctionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59027,
                    "src": "4633:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59038,
                  "name": "whenNotStarted",
                  "nameLocations": [
                    "4618:14:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58757,
                  "src": "4618:14:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "4618:25:85"
              }
            ],
            "name": "listNamesForAuction",
            "nameLocation": "4475:19:85",
            "parameters": {
              "id": 59034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59027,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "4503:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59147,
                  "src": "4495:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59026,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59030,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4533:3:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59147,
                  "src": "4514:22:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59028,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4514:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59029,
                    "nodeType": "ArrayTypeName",
                    "src": "4514:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59033,
                  "mutability": "mutable",
                  "name": "startingPrices",
                  "nameLocation": "4557:14:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59147,
                  "src": "4538:33:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59031,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4538:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59032,
                    "nodeType": "ArrayTypeName",
                    "src": "4538:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:78:85"
            },
            "returnParameters": {
              "id": 59041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4646:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59270,
            "nodeType": "FunctionDefinition",
            "src": "5394:938:85",
            "nodes": [],
            "body": {
              "id": 59269,
              "nodeType": "Block",
              "src": "5441:891:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59155,
                      "mutability": "mutable",
                      "name": "auction",
                      "nameLocation": "5468:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "5447:28:85",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                        "typeString": "struct INSAuction.DomainAuction"
                      },
                      "typeName": {
                        "id": 59154,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59153,
                          "name": "DomainAuction",
                          "nameLocations": [
                            "5447:13:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64221,
                          "src": "5447:13:85"
                        },
                        "referencedDeclaration": 64221,
                        "src": "5447:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                          "typeString": "struct INSAuction.DomainAuction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59159,
                  "initialValue": {
                    "baseExpression": {
                      "id": 59156,
                      "name": "_domainAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58737,
                      "src": "5478:14:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                        "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                      }
                    },
                    "id": 59158,
                    "indexExpression": {
                      "id": 59157,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59150,
                      "src": "5493:2:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5478:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$64221_storage",
                      "typeString": "struct INSAuction.DomainAuction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5447:49:85"
                },
                {
                  "assignments": [
                    59162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59162,
                      "mutability": "mutable",
                      "name": "range",
                      "nameLocation": "5520:5:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "5502:23:85",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                        "typeString": "struct EventRange"
                      },
                      "typeName": {
                        "id": 59161,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59160,
                          "name": "EventRange",
                          "nameLocations": [
                            "5502:10:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65968,
                          "src": "5502:10:85"
                        },
                        "referencedDeclaration": 65968,
                        "src": "5502:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                          "typeString": "struct EventRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59167,
                  "initialValue": {
                    "baseExpression": {
                      "id": 59163,
                      "name": "_auctionRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58731,
                      "src": "5528:13:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                        "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                      }
                    },
                    "id": 59166,
                    "indexExpression": {
                      "expression": {
                        "id": 59164,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59155,
                        "src": "5542:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      "id": 59165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5550:9:85",
                      "memberName": "auctionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64215,
                      "src": "5542:17:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5528:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5502:58:85"
                },
                {
                  "assignments": [
                    59169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59169,
                      "mutability": "mutable",
                      "name": "beatPrice",
                      "nameLocation": "5574:9:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "5566:17:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5566:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 59171,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59155,
                        "src": "5600:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      {
                        "id": 59172,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59162,
                        "src": "5609:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                          "typeString": "struct EventRange memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                          "typeString": "struct EventRange memory"
                        }
                      ],
                      "id": 59170,
                      "name": "_getBeatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59608,
                      "src": "5586:13:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_DomainAuction_$64221_memory_ptr_$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct INSAuction.DomainAuction memory,struct EventRange memory) view returns (uint256)"
                      }
                    },
                    "id": 59173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5586:29:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5566:49:85"
                },
                {
                  "condition": {
                    "id": 59178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5626:19:85",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 59175,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59162,
                          "src": "5627:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        },
                        "id": 59176,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5633:10:85",
                        "memberName": "isInPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66038,
                        "src": "5627:16:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$65968_memory_ptr_$",
                          "typeString": "function (struct EventRange memory) view returns (bool)"
                        }
                      },
                      "id": 59177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5627:18:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59182,
                  "nodeType": "IfStatement",
                  "src": "5622:52:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59179,
                        "name": "QueryIsNotInPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64196,
                        "src": "5654:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5654:20:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59181,
                    "nodeType": "RevertStatement",
                    "src": "5647:27:85"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 59183,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5684:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5688:5:85",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "5684:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 59185,
                      "name": "beatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59169,
                      "src": "5696:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5684:21:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59190,
                  "nodeType": "IfStatement",
                  "src": "5680:54:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59187,
                        "name": "InsufficientAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64198,
                        "src": "5714:18:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5714:20:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59189,
                    "nodeType": "RevertStatement",
                    "src": "5707:27:85"
                  }
                },
                {
                  "assignments": [
                    59192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59192,
                      "mutability": "mutable",
                      "name": "bidder",
                      "nameLocation": "5756:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "5740:22:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 59191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5740:15:85",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59198,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 59195,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51922,
                          "src": "5773:10:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 59196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5773:12:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5765:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 59193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5765:8:85",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 59197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5765:21:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5740:46:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 59202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59199,
                      "name": "bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59192,
                      "src": "5844:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 59200,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "5854:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 59201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5857:6:85",
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "5854:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5844:19:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59206,
                  "nodeType": "IfStatement",
                  "src": "5840:59:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59203,
                        "name": "ContractBidderIsForbidden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64202,
                        "src": "5872:25:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5872:27:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59205,
                    "nodeType": "RevertStatement",
                    "src": "5865:34:85"
                  }
                },
                {
                  "assignments": [
                    59208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59208,
                      "mutability": "mutable",
                      "name": "prvBidder",
                      "nameLocation": "5921:9:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "5905:25:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 59207,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5905:15:85",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59212,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 59209,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59155,
                        "src": "5933:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      "id": 59210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5941:3:85",
                      "memberName": "bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "5933:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                        "typeString": "struct INSAuction.Bid memory"
                      }
                    },
                    "id": 59211,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5945:6:85",
                    "memberName": "bidder",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64206,
                    "src": "5933:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5905:46:85"
                },
                {
                  "assignments": [
                    59214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59214,
                      "mutability": "mutable",
                      "name": "prvPrice",
                      "nameLocation": "5965:8:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "5957:16:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5957:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59218,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 59215,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59155,
                        "src": "5976:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      "id": 59216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5984:3:85",
                      "memberName": "bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "5976:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                        "typeString": "struct INSAuction.Bid memory"
                      }
                    },
                    "id": 59217,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5988:5:85",
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64208,
                    "src": "5976:17:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5957:36:85"
                },
                {
                  "assignments": [
                    59221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59221,
                      "mutability": "mutable",
                      "name": "sBid",
                      "nameLocation": "6012:4:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59269,
                      "src": "6000:16:85",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$64213_storage_ptr",
                        "typeString": "struct INSAuction.Bid"
                      },
                      "typeName": {
                        "id": 59220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59219,
                          "name": "Bid",
                          "nameLocations": [
                            "6000:3:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64213,
                          "src": "6000:3:85"
                        },
                        "referencedDeclaration": 64213,
                        "src": "6000:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$64213_storage_ptr",
                          "typeString": "struct INSAuction.Bid"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59226,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 59222,
                        "name": "_domainAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58737,
                        "src": "6019:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                          "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                        }
                      },
                      "id": 59224,
                      "indexExpression": {
                        "id": 59223,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59150,
                        "src": "6034:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6019:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$64221_storage",
                        "typeString": "struct INSAuction.DomainAuction storage ref"
                      }
                    },
                    "id": 59225,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6038:3:85",
                    "memberName": "bid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64220,
                    "src": "6019:22:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$64213_storage",
                      "typeString": "struct INSAuction.Bid storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6000:41:85"
                },
                {
                  "expression": {
                    "id": 59232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 59227,
                        "name": "sBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59221,
                        "src": "6047:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$64213_storage_ptr",
                          "typeString": "struct INSAuction.Bid storage pointer"
                        }
                      },
                      "id": 59229,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6052:5:85",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64208,
                      "src": "6047:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 59230,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6060:3:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 59231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6064:5:85",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6060:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6047:22:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59233,
                  "nodeType": "ExpressionStatement",
                  "src": "6047:22:85"
                },
                {
                  "expression": {
                    "id": 59238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 59234,
                        "name": "sBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59221,
                        "src": "6075:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$64213_storage_ptr",
                          "typeString": "struct INSAuction.Bid storage pointer"
                        }
                      },
                      "id": 59236,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6080:6:85",
                      "memberName": "bidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64206,
                      "src": "6075:11:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59237,
                      "name": "bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59192,
                      "src": "6089:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6075:20:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 59239,
                  "nodeType": "ExpressionStatement",
                  "src": "6075:20:85"
                },
                {
                  "expression": {
                    "id": 59245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 59240,
                        "name": "sBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59221,
                        "src": "6101:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$64213_storage_ptr",
                          "typeString": "struct INSAuction.Bid storage pointer"
                        }
                      },
                      "id": 59242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6106:9:85",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64210,
                      "src": "6101:14:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 59243,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6118:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 59244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6124:9:85",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6118:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6101:32:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59246,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:32:85"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59248,
                          "name": "auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59155,
                          "src": "6154:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        "id": 59249,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6162:9:85",
                        "memberName": "auctionId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64215,
                        "src": "6154:17:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59250,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59150,
                        "src": "6173:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 59251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6177:3:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6181:5:85",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6177:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59253,
                        "name": "bidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59192,
                        "src": "6188:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 59254,
                        "name": "prvPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59214,
                        "src": "6196:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59255,
                        "name": "prvBidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59208,
                        "src": "6206:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 59247,
                      "name": "BidPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64255,
                      "src": "6144:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address payable,uint256,address)"
                      }
                    },
                    "id": 59256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6144:72:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59257,
                  "nodeType": "EmitStatement",
                  "src": "6139:77:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59258,
                      "name": "prvPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59214,
                      "src": "6261:8:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 59259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6273:1:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6261:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59268,
                  "nodeType": "IfStatement",
                  "src": "6257:70:85",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 59264,
                          "name": "prvBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59208,
                          "src": "6307:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 59265,
                          "name": "prvPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59214,
                          "src": "6318:8:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 59261,
                          "name": "RONTransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67517,
                          "src": "6276:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RONTransferHelper_$67517_$",
                            "typeString": "type(library RONTransferHelper)"
                          }
                        },
                        "id": 59263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6294:12:85",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67492,
                        "src": "6276:30:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                          "typeString": "function (address payable,uint256)"
                        }
                      },
                      "id": 59266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6276:51:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59267,
                    "nodeType": "ExpressionStatement",
                    "src": "6276:51:85"
                  }
                }
              ]
            },
            "baseFunctions": [
              64358
            ],
            "documentation": {
              "id": 59148,
              "nodeType": "StructuredDocumentation",
              "src": "5354:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "9979ef45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "5403:8:85",
            "parameters": {
              "id": 59151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59150,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5420:2:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59270,
                  "src": "5412:10:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5412:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5411:12:85"
            },
            "returnParameters": {
              "id": 59152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5441:0:85"
            },
            "scope": 59647,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59426,
            "nodeType": "FunctionDefinition",
            "src": "6376:1072:85",
            "nodes": [],
            "body": {
              "id": 59425,
              "nodeType": "Block",
              "src": "6474:974:85",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59281,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "6488:2:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6480:10:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6480:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59282,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6480:10:85"
                },
                {
                  "assignments": [
                    59284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59284,
                      "mutability": "mutable",
                      "name": "accumulatedRON",
                      "nameLocation": "6504:14:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6496:22:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6496:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59285,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6496:22:85"
                },
                {
                  "assignments": [
                    59288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59288,
                      "mutability": "mutable",
                      "name": "range",
                      "nameLocation": "6542:5:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6524:23:85",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                        "typeString": "struct EventRange"
                      },
                      "typeName": {
                        "id": 59287,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59286,
                          "name": "EventRange",
                          "nameLocations": [
                            "6524:10:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65968,
                          "src": "6524:10:85"
                        },
                        "referencedDeclaration": 65968,
                        "src": "6524:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                          "typeString": "struct EventRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59289,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6524:23:85"
                },
                {
                  "assignments": [
                    59292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59292,
                      "mutability": "mutable",
                      "name": "auction",
                      "nameLocation": "6574:7:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6553:28:85",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                        "typeString": "struct INSAuction.DomainAuction"
                      },
                      "typeName": {
                        "id": 59291,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59290,
                          "name": "DomainAuction",
                          "nameLocations": [
                            "6553:13:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64221,
                          "src": "6553:13:85"
                        },
                        "referencedDeclaration": 64221,
                        "src": "6553:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                          "typeString": "struct INSAuction.DomainAuction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59293,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6553:28:85"
                },
                {
                  "assignments": [
                    59295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59295,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "6595:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6587:14:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6587:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59298,
                  "initialValue": {
                    "expression": {
                      "id": 59296,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59274,
                      "src": "6604:3:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 59297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6608:6:85",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6604:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6587:27:85"
                },
                {
                  "expression": {
                    "id": 59305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59299,
                      "name": "claimedAts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59278,
                      "src": "6620:10:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59303,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59295,
                          "src": "6647:6:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 59302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6633:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 59300,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6637:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 59301,
                          "nodeType": "ArrayTypeName",
                          "src": "6637:9:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 59304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6633:21:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6620:34:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 59306,
                  "nodeType": "ExpressionStatement",
                  "src": "6620:34:85"
                },
                {
                  "assignments": [
                    59309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59309,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "6671:10:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6660:21:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$65048",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 59308,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59307,
                          "name": "INSUnified",
                          "nameLocations": [
                            "6660:10:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65048,
                          "src": "6660:10:85"
                        },
                        "referencedDeclaration": 65048,
                        "src": "6660:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$65048",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59311,
                  "initialValue": {
                    "id": 59310,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58725,
                    "src": "6684:11:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6660:35:85"
                },
                {
                  "assignments": [
                    59313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59313,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "6708:6:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59425,
                      "src": "6701:13:85",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 59312,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6701:6:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59323,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 59319,
                            "name": "DOMAIN_EXPIRY_DURATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58704,
                            "src": "6758:22:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 59320,
                            "name": "MAX_EXPIRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58696,
                            "src": "6782:10:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 59316,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6724:5:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 59317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6730:9:85",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6724:15:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 59318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6740:17:85",
                          "memberName": "addWithUpperbound",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66658,
                          "src": "6724:33:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 59321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6724:69:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6717:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 59314,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6717:6:85",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 59322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6717:77:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6701:93:85"
                },
                {
                  "body": {
                    "id": 59416,
                    "nodeType": "Block",
                    "src": "6830:550:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 59334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59330,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59281,
                            "src": "6838:2:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 59331,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59274,
                              "src": "6843:3:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 59333,
                            "indexExpression": {
                              "id": 59332,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59325,
                              "src": "6847:1:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6843:6:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6838:11:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59335,
                        "nodeType": "ExpressionStatement",
                        "src": "6838:11:85"
                      },
                      {
                        "expression": {
                          "id": 59340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59336,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59292,
                            "src": "6857:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                              "typeString": "struct INSAuction.DomainAuction memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 59337,
                              "name": "_domainAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58737,
                              "src": "6867:14:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                                "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                              }
                            },
                            "id": 59339,
                            "indexExpression": {
                              "id": 59338,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59281,
                              "src": "6882:2:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6867:18:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$64221_storage",
                              "typeString": "struct INSAuction.DomainAuction storage ref"
                            }
                          },
                          "src": "6857:28:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        "id": 59341,
                        "nodeType": "ExpressionStatement",
                        "src": "6857:28:85"
                      },
                      {
                        "expression": {
                          "id": 59347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59342,
                            "name": "range",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59288,
                            "src": "6893:5:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                              "typeString": "struct EventRange memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 59343,
                              "name": "_auctionRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58731,
                              "src": "6901:13:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                                "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                              }
                            },
                            "id": 59346,
                            "indexExpression": {
                              "expression": {
                                "id": 59344,
                                "name": "auction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59292,
                                "src": "6915:7:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                  "typeString": "struct INSAuction.DomainAuction memory"
                                }
                              },
                              "id": 59345,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6923:9:85",
                              "memberName": "auctionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64215,
                              "src": "6915:17:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6901:32:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                              "typeString": "struct EventRange storage ref"
                            }
                          },
                          "src": "6893:40:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        },
                        "id": 59348,
                        "nodeType": "ExpressionStatement",
                        "src": "6893:40:85"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 59349,
                                "name": "auction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59292,
                                "src": "6946:7:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                  "typeString": "struct INSAuction.DomainAuction memory"
                                }
                              },
                              "id": 59350,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6954:3:85",
                              "memberName": "bid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64220,
                              "src": "6946:11:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                                "typeString": "struct INSAuction.Bid memory"
                              }
                            },
                            "id": 59351,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6958:9:85",
                            "memberName": "claimedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64212,
                            "src": "6946:21:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 59352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6971:1:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6946:26:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 59411,
                        "nodeType": "IfStatement",
                        "src": "6942:392:85",
                        "trueBody": {
                          "id": 59410,
                          "nodeType": "Block",
                          "src": "6974:360:85",
                          "statements": [
                            {
                              "condition": {
                                "id": 59357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "6988:16:85",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 59354,
                                      "name": "range",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59288,
                                      "src": "6989:5:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                                        "typeString": "struct EventRange memory"
                                      }
                                    },
                                    "id": 59355,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6995:7:85",
                                    "memberName": "isEnded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66016,
                                    "src": "6989:13:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$65968_memory_ptr_$",
                                      "typeString": "function (struct EventRange memory) view returns (bool)"
                                    }
                                  },
                                  "id": 59356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6989:15:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 59361,
                              "nodeType": "IfStatement",
                              "src": "6984:42:85",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 59358,
                                    "name": "NotYetEnded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64182,
                                    "src": "7013:11:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 59359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7013:13:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 59360,
                                "nodeType": "RevertStatement",
                                "src": "7006:20:85"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 59366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 59362,
                                      "name": "auction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59292,
                                      "src": "7040:7:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                        "typeString": "struct INSAuction.DomainAuction memory"
                                      }
                                    },
                                    "id": 59363,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7048:3:85",
                                    "memberName": "bid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64220,
                                    "src": "7040:11:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                                      "typeString": "struct INSAuction.Bid memory"
                                    }
                                  },
                                  "id": 59364,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7052:9:85",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64210,
                                  "src": "7040:21:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 59365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7065:1:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7040:26:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 59370,
                              "nodeType": "IfStatement",
                              "src": "7036:52:85",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 59367,
                                    "name": "NoOneBidded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64184,
                                    "src": "7075:11:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 59368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7075:13:85",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 59369,
                                "nodeType": "RevertStatement",
                                "src": "7068:20:85"
                              }
                            },
                            {
                              "expression": {
                                "id": 59375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 59371,
                                  "name": "accumulatedRON",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59284,
                                  "src": "7099:14:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 59372,
                                      "name": "auction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59292,
                                      "src": "7117:7:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                        "typeString": "struct INSAuction.DomainAuction memory"
                                      }
                                    },
                                    "id": 59373,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7125:3:85",
                                    "memberName": "bid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64220,
                                    "src": "7117:11:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                                      "typeString": "struct INSAuction.Bid memory"
                                    }
                                  },
                                  "id": 59374,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7129:5:85",
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64208,
                                  "src": "7117:17:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7099:35:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 59376,
                              "nodeType": "ExpressionStatement",
                              "src": "7099:35:85"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 59380,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59281,
                                    "src": "7165:2:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 59381,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59313,
                                    "src": "7169:6:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "expression": {
                                    "id": 59377,
                                    "name": "rnsUnified",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59309,
                                    "src": "7144:10:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                                      "typeString": "contract INSUnified"
                                    }
                                  },
                                  "id": 59379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7155:9:85",
                                  "memberName": "setExpiry",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65038,
                                  "src": "7144:20:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                                    "typeString": "function (uint256,uint64) external"
                                  }
                                },
                                "id": 59382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7144:32:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59383,
                              "nodeType": "ExpressionStatement",
                              "src": "7144:32:85"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 59389,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7218:4:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_RNSAuction_$59647",
                                          "typeString": "contract RNSAuction"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_RNSAuction_$59647",
                                          "typeString": "contract RNSAuction"
                                        }
                                      ],
                                      "id": 59388,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7210:7:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 59387,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7210:7:85",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 59390,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7210:13:85",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 59391,
                                        "name": "auction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59292,
                                        "src": "7225:7:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                          "typeString": "struct INSAuction.DomainAuction memory"
                                        }
                                      },
                                      "id": 59392,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7233:3:85",
                                      "memberName": "bid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 64220,
                                      "src": "7225:11:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                                        "typeString": "struct INSAuction.Bid memory"
                                      }
                                    },
                                    "id": 59393,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7237:6:85",
                                    "memberName": "bidder",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64206,
                                    "src": "7225:18:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 59394,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59281,
                                    "src": "7245:2:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 59384,
                                    "name": "rnsUnified",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59309,
                                    "src": "7186:10:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                                      "typeString": "contract INSUnified"
                                    }
                                  },
                                  "id": 59386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7197:12:85",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51045,
                                  "src": "7186:23:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 59395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7186:62:85",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 59396,
                              "nodeType": "ExpressionStatement",
                              "src": "7186:62:85"
                            },
                            {
                              "expression": {
                                "id": 59408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 59397,
                                        "name": "_domainAuction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 58737,
                                        "src": "7259:14:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                                          "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                                        }
                                      },
                                      "id": 59399,
                                      "indexExpression": {
                                        "id": 59398,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59281,
                                        "src": "7274:2:85",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7259:18:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DomainAuction_$64221_storage",
                                        "typeString": "struct INSAuction.DomainAuction storage ref"
                                      }
                                    },
                                    "id": 59400,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7278:3:85",
                                    "memberName": "bid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64220,
                                    "src": "7259:22:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bid_$64213_storage",
                                      "typeString": "struct INSAuction.Bid storage ref"
                                    }
                                  },
                                  "id": 59401,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7282:9:85",
                                  "memberName": "claimedAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64212,
                                  "src": "7259:32:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 59407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 59402,
                                      "name": "claimedAts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59278,
                                      "src": "7294:10:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 59404,
                                    "indexExpression": {
                                      "id": 59403,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59325,
                                      "src": "7305:1:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "7294:13:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 59405,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "7310:5:85",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 59406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7316:9:85",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "7310:15:85",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7294:31:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7259:66:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 59409,
                              "nodeType": "ExpressionStatement",
                              "src": "7259:66:85"
                            }
                          ]
                        }
                      },
                      {
                        "id": 59415,
                        "nodeType": "UncheckedBlock",
                        "src": "7342:32:85",
                        "statements": [
                          {
                            "expression": {
                              "id": 59413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7362:3:85",
                              "subExpression": {
                                "id": 59412,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59325,
                                "src": "7364:1:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59414,
                            "nodeType": "ExpressionStatement",
                            "src": "7362:3:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59327,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59325,
                      "src": "6817:1:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 59328,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59295,
                      "src": "6821:6:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6817:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59417,
                  "initializationExpression": {
                    "assignments": [
                      59325
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59325,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6814:1:85",
                        "nodeType": "VariableDeclaration",
                        "scope": 59417,
                        "src": "6806:9:85",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 59324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6806:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 59326,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6806:9:85"
                  },
                  "nodeType": "ForStatement",
                  "src": "6801:579:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59421,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58740,
                        "src": "7417:9:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 59422,
                        "name": "accumulatedRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59284,
                        "src": "7428:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59418,
                        "name": "RONTransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67517,
                        "src": "7386:17:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RONTransferHelper_$67517_$",
                          "typeString": "type(library RONTransferHelper)"
                        }
                      },
                      "id": 59420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7404:12:85",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67492,
                      "src": "7386:30:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 59423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7386:57:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59424,
                  "nodeType": "ExpressionStatement",
                  "src": "7386:57:85"
                }
              ]
            },
            "baseFunctions": [
              64379
            ],
            "documentation": {
              "id": 59271,
              "nodeType": "StructuredDocumentation",
              "src": "6336:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "6e7d60f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkClaimBidNames",
            "nameLocation": "6385:17:85",
            "parameters": {
              "id": 59275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59274,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6422:3:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59426,
                  "src": "6403:22:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59272,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6403:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59273,
                    "nodeType": "ArrayTypeName",
                    "src": "6403:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6402:24:85"
            },
            "returnParameters": {
              "id": 59279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59278,
                  "mutability": "mutable",
                  "name": "claimedAts",
                  "nameLocation": "6462:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59426,
                  "src": "6445:27:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59276,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6445:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59277,
                    "nodeType": "ArrayTypeName",
                    "src": "6445:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6444:29:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59436,
            "nodeType": "FunctionDefinition",
            "src": "7492:89:85",
            "nodes": [],
            "body": {
              "id": 59435,
              "nodeType": "Block",
              "src": "7552:29:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59433,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58725,
                    "src": "7565:11:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "functionReturnParameters": 59432,
                  "id": 59434,
                  "nodeType": "Return",
                  "src": "7558:18:85"
                }
              ]
            },
            "baseFunctions": [
              64410
            ],
            "documentation": {
              "id": 59427,
              "nodeType": "StructuredDocumentation",
              "src": "7452:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "8c843314",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRNSUnified",
            "nameLocation": "7501:13:85",
            "parameters": {
              "id": 59428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7514:2:85"
            },
            "returnParameters": {
              "id": 59432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59436,
                  "src": "7540:10:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSUnified_$65048",
                    "typeString": "contract INSUnified"
                  },
                  "typeName": {
                    "id": 59430,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59429,
                      "name": "INSUnified",
                      "nameLocations": [
                        "7540:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65048,
                      "src": "7540:10:85"
                    },
                    "referencedDeclaration": 65048,
                    "src": "7540:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$65048",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7539:12:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59445,
            "nodeType": "FunctionDefinition",
            "src": "7625:82:85",
            "nodes": [],
            "body": {
              "id": 59444,
              "nodeType": "Block",
              "src": "7680:27:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59442,
                    "name": "_treasury",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58740,
                    "src": "7693:9:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 59441,
                  "id": 59443,
                  "nodeType": "Return",
                  "src": "7686:16:85"
                }
              ]
            },
            "baseFunctions": [
              64385
            ],
            "documentation": {
              "id": 59437,
              "nodeType": "StructuredDocumentation",
              "src": "7585:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "3b19e84a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTreasury",
            "nameLocation": "7634:11:85",
            "parameters": {
              "id": 59438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7645:2:85"
            },
            "returnParameters": {
              "id": 59441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59440,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59445,
                  "src": "7671:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7671:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7670:9:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59454,
            "nodeType": "FunctionDefinition",
            "src": "7751:88:85",
            "nodes": [],
            "body": {
              "id": 59453,
              "nodeType": "Block",
              "src": "7809:30:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59451,
                    "name": "_bidGapRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58743,
                    "src": "7822:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59450,
                  "id": 59452,
                  "nodeType": "Return",
                  "src": "7815:19:85"
                }
              ]
            },
            "baseFunctions": [
              64391
            ],
            "documentation": {
              "id": 59446,
              "nodeType": "StructuredDocumentation",
              "src": "7711:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "a282d4ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBidGapRatio",
            "nameLocation": "7760:14:85",
            "parameters": {
              "id": 59447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7774:2:85"
            },
            "returnParameters": {
              "id": 59450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59454,
                  "src": "7800:7:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7800:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7799:9:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59468,
            "nodeType": "FunctionDefinition",
            "src": "7883:110:85",
            "nodes": [],
            "body": {
              "id": 59467,
              "nodeType": "Block",
              "src": "7964:29:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59464,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59457,
                        "src": "7983:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 59463,
                      "name": "_setTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59540,
                      "src": "7970:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 59465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7970:18:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59466,
                  "nodeType": "ExpressionStatement",
                  "src": "7970:18:85"
                }
              ]
            },
            "baseFunctions": [
              64397
            ],
            "documentation": {
              "id": 59455,
              "nodeType": "StructuredDocumentation",
              "src": "7843:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "f0f44260",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59460,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "7944:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59461,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59459,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7935:8:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "7935:8:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "7935:28:85"
              }
            ],
            "name": "setTreasury",
            "nameLocation": "7892:11:85",
            "parameters": {
              "id": 59458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59457,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7920:4:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59468,
                  "src": "7904:20:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 59456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7904:15:85",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7903:22:85"
            },
            "returnParameters": {
              "id": 59462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7964:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59482,
            "nodeType": "FunctionDefinition",
            "src": "8038:110:85",
            "nodes": [],
            "body": {
              "id": 59481,
              "nodeType": "Block",
              "src": "8115:33:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59478,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59471,
                        "src": "8137:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59477,
                      "name": "_setBidGapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59562,
                      "src": "8121:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 59479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8121:22:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59480,
                  "nodeType": "ExpressionStatement",
                  "src": "8121:22:85"
                }
              ]
            },
            "baseFunctions": [
              64403
            ],
            "documentation": {
              "id": 59469,
              "nodeType": "StructuredDocumentation",
              "src": "7997:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "60223b44",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59474,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "8095:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59473,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8086:8:85"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "8086:8:85"
                },
                "nodeType": "ModifierInvocation",
                "src": "8086:28:85"
              }
            ],
            "name": "setBidGapRatio",
            "nameLocation": "8047:14:85",
            "parameters": {
              "id": 59472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59471,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "8070:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59482,
                  "src": "8062:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8062:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8061:15:85"
            },
            "returnParameters": {
              "id": 59476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8115:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59515,
            "nodeType": "FunctionDefinition",
            "src": "8192:254:85",
            "nodes": [],
            "body": {
              "id": 59514,
              "nodeType": "Block",
              "src": "8294:152:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59493,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59489,
                      "src": "8300:7:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                        "typeString": "struct INSAuction.DomainAuction memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 59494,
                        "name": "_domainAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58737,
                        "src": "8310:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$64221_storage_$",
                          "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                        }
                      },
                      "id": 59496,
                      "indexExpression": {
                        "id": 59495,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59485,
                        "src": "8325:2:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8310:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$64221_storage",
                        "typeString": "struct INSAuction.DomainAuction storage ref"
                      }
                    },
                    "src": "8300:28:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                      "typeString": "struct INSAuction.DomainAuction memory"
                    }
                  },
                  "id": 59498,
                  "nodeType": "ExpressionStatement",
                  "src": "8300:28:85"
                },
                {
                  "assignments": [
                    59501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59501,
                      "mutability": "mutable",
                      "name": "range",
                      "nameLocation": "8352:5:85",
                      "nodeType": "VariableDeclaration",
                      "scope": 59514,
                      "src": "8334:23:85",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                        "typeString": "struct EventRange"
                      },
                      "typeName": {
                        "id": 59500,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59499,
                          "name": "EventRange",
                          "nameLocations": [
                            "8334:10:85"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65968,
                          "src": "8334:10:85"
                        },
                        "referencedDeclaration": 65968,
                        "src": "8334:10:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                          "typeString": "struct EventRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59506,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59503,
                          "name": "auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59489,
                          "src": "8376:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        "id": 59504,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8384:9:85",
                        "memberName": "auctionId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64215,
                        "src": "8376:17:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 59502,
                      "name": "getAuctionEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59024,
                      "src": "8360:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_EventRange_$65968_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct EventRange memory)"
                      }
                    },
                    "id": 59505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:34:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                      "typeString": "struct EventRange memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8334:60:85"
                },
                {
                  "expression": {
                    "id": 59512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59507,
                      "name": "beatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59491,
                      "src": "8400:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59509,
                          "name": "auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59489,
                          "src": "8426:7:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        {
                          "id": 59510,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59501,
                          "src": "8435:5:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        ],
                        "id": 59508,
                        "name": "_getBeatPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59608,
                        "src": "8412:13:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_DomainAuction_$64221_memory_ptr_$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct INSAuction.DomainAuction memory,struct EventRange memory) view returns (uint256)"
                        }
                      },
                      "id": 59511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8412:29:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8400:41:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59513,
                  "nodeType": "ExpressionStatement",
                  "src": "8400:41:85"
                }
              ]
            },
            "baseFunctions": [
              64369
            ],
            "documentation": {
              "id": 59483,
              "nodeType": "StructuredDocumentation",
              "src": "8152:37:85",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "78bd7935",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuction",
            "nameLocation": "8201:10:85",
            "parameters": {
              "id": 59486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59485,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8220:2:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59515,
                  "src": "8212:10:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8212:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8211:12:85"
            },
            "returnParameters": {
              "id": 59492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59489,
                  "mutability": "mutable",
                  "name": "auction",
                  "nameLocation": "8266:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59515,
                  "src": "8245:28:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                    "typeString": "struct INSAuction.DomainAuction"
                  },
                  "typeName": {
                    "id": 59488,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59487,
                      "name": "DomainAuction",
                      "nameLocations": [
                        "8245:13:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64221,
                      "src": "8245:13:85"
                    },
                    "referencedDeclaration": 64221,
                    "src": "8245:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                      "typeString": "struct INSAuction.DomainAuction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59491,
                  "mutability": "mutable",
                  "name": "beatPrice",
                  "nameLocation": "8283:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59515,
                  "src": "8275:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8275:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8244:49:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59540,
            "nodeType": "FunctionDefinition",
            "src": "8547:165:85",
            "nodes": [],
            "body": {
              "id": 59539,
              "nodeType": "Block",
              "src": "8600:112:85",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 59526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59521,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59518,
                      "src": "8610:4:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 59524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8626:1:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 59523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8618:7:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 59522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8618:7:85",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 59525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8618:10:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8610:18:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59530,
                  "nodeType": "IfStatement",
                  "src": "8606:47:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59527,
                        "name": "NullAssignment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64186,
                        "src": "8637:14:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8637:16:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59529,
                    "nodeType": "RevertStatement",
                    "src": "8630:23:85"
                  }
                },
                {
                  "expression": {
                    "id": 59533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59531,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58740,
                      "src": "8659:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59532,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59518,
                      "src": "8671:4:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8659:16:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 59534,
                  "nodeType": "ExpressionStatement",
                  "src": "8659:16:85"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59536,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59518,
                        "src": "8702:4:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 59535,
                      "name": "TreasuryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64260,
                      "src": "8686:15:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 59537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8686:21:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59538,
                  "nodeType": "EmitStatement",
                  "src": "8681:26:85"
                }
              ]
            },
            "documentation": {
              "id": 59516,
              "nodeType": "StructuredDocumentation",
              "src": "8450:94:85",
              "text": " @dev Helper method to set treasury.\n Emits an event {TreasuryUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTreasury",
            "nameLocation": "8556:12:85",
            "parameters": {
              "id": 59519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59518,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8585:4:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59540,
                  "src": "8569:20:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 59517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8569:15:85",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8568:22:85"
            },
            "returnParameters": {
              "id": 59520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8600:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59562,
            "nodeType": "FunctionDefinition",
            "src": "8821:174:85",
            "nodes": [],
            "body": {
              "id": 59561,
              "nodeType": "Block",
              "src": "8870:125:85",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59546,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59543,
                      "src": "8880:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 59547,
                      "name": "MAX_PERCENTAGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58700,
                      "src": "8888:14:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8880:22:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59552,
                  "nodeType": "IfStatement",
                  "src": "8876:52:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59549,
                        "name": "RatioIsTooLarge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64190,
                        "src": "8911:15:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8911:17:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59551,
                    "nodeType": "RevertStatement",
                    "src": "8904:24:85"
                  }
                },
                {
                  "expression": {
                    "id": 59555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59553,
                      "name": "_bidGapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58743,
                      "src": "8934:12:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59554,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59543,
                      "src": "8949:5:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8934:20:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59556,
                  "nodeType": "ExpressionStatement",
                  "src": "8934:20:85"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59558,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59543,
                        "src": "8984:5:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59557,
                      "name": "BidGapRatioUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64265,
                      "src": "8965:18:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 59559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8965:25:85",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59560,
                  "nodeType": "EmitStatement",
                  "src": "8960:30:85"
                }
              ]
            },
            "documentation": {
              "id": 59541,
              "nodeType": "StructuredDocumentation",
              "src": "8716:102:85",
              "text": " @dev Helper method to set bid gap ratio.\n Emits an event {BidGapRatioUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBidGapRatio",
            "nameLocation": "8830:15:85",
            "parameters": {
              "id": 59544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59543,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "8854:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59562,
                  "src": "8846:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8846:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8845:15:85"
            },
            "returnParameters": {
              "id": 59545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8870:0:85"
            },
            "scope": 59647,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59608,
            "nodeType": "FunctionDefinition",
            "src": "9054:440:85",
            "nodes": [],
            "body": {
              "id": 59607,
              "nodeType": "Block",
              "src": "9188:306:85",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59574,
                      "name": "beatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59572,
                      "src": "9194:9:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 59577,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59566,
                            "src": "9215:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                              "typeString": "struct INSAuction.DomainAuction memory"
                            }
                          },
                          "id": 59578,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9223:13:85",
                          "memberName": "startingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64217,
                          "src": "9215:21:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 59579,
                              "name": "auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59566,
                              "src": "9238:7:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                "typeString": "struct INSAuction.DomainAuction memory"
                              }
                            },
                            "id": 59580,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9246:3:85",
                            "memberName": "bid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64220,
                            "src": "9238:11:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                              "typeString": "struct INSAuction.Bid memory"
                            }
                          },
                          "id": 59581,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9250:5:85",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64208,
                          "src": "9238:17:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 59575,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53173,
                          "src": "9206:4:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$53173_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 59576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9211:3:85",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52332,
                        "src": "9206:8:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 59582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9206:50:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9194:62:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59584,
                  "nodeType": "ExpressionStatement",
                  "src": "9194:62:85"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 59594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 59589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 59585,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59566,
                            "src": "9354:7:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                              "typeString": "struct INSAuction.DomainAuction memory"
                            }
                          },
                          "id": 59586,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9362:3:85",
                          "memberName": "bid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64220,
                          "src": "9354:11:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$64213_memory_ptr",
                            "typeString": "struct INSAuction.Bid memory"
                          }
                        },
                        "id": 59587,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9366:5:85",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64208,
                        "src": "9354:17:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 59588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9375:1:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9354:22:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 59593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "9380:16:85",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 59590,
                            "name": "range",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59569,
                            "src": "9381:5:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                              "typeString": "struct EventRange memory"
                            }
                          },
                          "id": 59591,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9387:7:85",
                          "memberName": "isEnded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66016,
                          "src": "9381:13:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$65968_memory_ptr_$",
                            "typeString": "function (struct EventRange memory) view returns (bool)"
                          }
                        },
                        "id": 59592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9381:15:85",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9354:42:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59606,
                  "nodeType": "IfStatement",
                  "src": "9350:140:85",
                  "trueBody": {
                    "id": 59605,
                    "nodeType": "Block",
                    "src": "9398:92:85",
                    "statements": [
                      {
                        "expression": {
                          "id": 59603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 59595,
                            "name": "beatPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59572,
                            "src": "9406:9:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 59598,
                                  "name": "auction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59566,
                                  "src": "9431:7:85",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                                    "typeString": "struct INSAuction.DomainAuction memory"
                                  }
                                },
                                "id": 59599,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9439:13:85",
                                "memberName": "startingPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64217,
                                "src": "9431:21:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 59600,
                                "name": "_bidGapRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58743,
                                "src": "9454:12:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 59601,
                                "name": "MAX_PERCENTAGE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 58700,
                                "src": "9468:14:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 59596,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53173,
                                "src": "9419:4:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$53173_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 59597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9424:6:85",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52521,
                              "src": "9419:11:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 59602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9419:64:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9406:77:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59604,
                        "nodeType": "ExpressionStatement",
                        "src": "9406:77:85"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 59563,
              "nodeType": "StructuredDocumentation",
              "src": "8999:52:85",
              "text": " @dev Helper method to get beat price."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBeatPrice",
            "nameLocation": "9063:13:85",
            "parameters": {
              "id": 59570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59566,
                  "mutability": "mutable",
                  "name": "auction",
                  "nameLocation": "9098:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59608,
                  "src": "9077:28:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DomainAuction_$64221_memory_ptr",
                    "typeString": "struct INSAuction.DomainAuction"
                  },
                  "typeName": {
                    "id": 59565,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59564,
                      "name": "DomainAuction",
                      "nameLocations": [
                        "9077:13:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64221,
                      "src": "9077:13:85"
                    },
                    "referencedDeclaration": 64221,
                    "src": "9077:13:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$64221_storage_ptr",
                      "typeString": "struct INSAuction.DomainAuction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59569,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "9125:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59608,
                  "src": "9107:23:85",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$65968_memory_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 59568,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59567,
                      "name": "EventRange",
                      "nameLocations": [
                        "9107:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65968,
                      "src": "9107:10:85"
                    },
                    "referencedDeclaration": 65968,
                    "src": "9107:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9076:55:85"
            },
            "returnParameters": {
              "id": 59573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59572,
                  "mutability": "mutable",
                  "name": "beatPrice",
                  "nameLocation": "9175:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59608,
                  "src": "9167:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9167:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9166:19:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59629,
            "nodeType": "FunctionDefinition",
            "src": "9566:160:85",
            "nodes": [],
            "body": {
              "id": 59628,
              "nodeType": "Block",
              "src": "9640:86:85",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 59623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9650:43:85",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 59615,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59612,
                                "src": "9652:5:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                                  "typeString": "struct EventRange calldata"
                                }
                              },
                              "id": 59616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9658:5:85",
                              "memberName": "valid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65984,
                              "src": "9652:11:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_EventRange_$65968_calldata_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$65968_calldata_ptr_$",
                                "typeString": "function (struct EventRange calldata) pure returns (bool)"
                              }
                            },
                            "id": 59617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9652:13:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 59618,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59612,
                                "src": "9669:5:85",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                                  "typeString": "struct EventRange calldata"
                                }
                              },
                              "id": 59619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9675:15:85",
                              "memberName": "isNotYetStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66000,
                              "src": "9669:21:85",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$65968_memory_ptr_$",
                                "typeString": "function (struct EventRange memory) view returns (bool)"
                              }
                            },
                            "id": 59620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9669:23:85",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9652:40:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 59622,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9651:42:85",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59627,
                  "nodeType": "IfStatement",
                  "src": "9646:75:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59624,
                        "name": "InvalidEventRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64194,
                        "src": "9702:17:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9702:19:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59626,
                    "nodeType": "RevertStatement",
                    "src": "9695:26:85"
                  }
                }
              ]
            },
            "documentation": {
              "id": 59609,
              "nodeType": "StructuredDocumentation",
              "src": "9498:65:85",
              "text": " @dev Helper method to ensure event range is valid."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireValidEventRange",
            "nameLocation": "9575:23:85",
            "parameters": {
              "id": 59613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59612,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "9619:5:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59629,
                  "src": "9599:25:85",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$65968_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 59611,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59610,
                      "name": "EventRange",
                      "nameLocations": [
                        "9599:10:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65968,
                      "src": "9599:10:85"
                    },
                    "referencedDeclaration": 65968,
                    "src": "9599:10:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$65968_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9598:27:85"
            },
            "returnParameters": {
              "id": 59614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9640:0:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59646,
            "nodeType": "FunctionDefinition",
            "src": "9823:163:85",
            "nodes": [],
            "body": {
              "id": 59645,
              "nodeType": "Block",
              "src": "9884:102:85",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 59640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9894:43:85",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "baseExpression": {
                            "id": 59635,
                            "name": "_auctionRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58731,
                            "src": "9895:13:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$65968_storage_$",
                              "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                            }
                          },
                          "id": 59637,
                          "indexExpression": {
                            "id": 59636,
                            "name": "auctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59632,
                            "src": "9909:9:85",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9895:24:85",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$65968_storage",
                            "typeString": "struct EventRange storage ref"
                          }
                        },
                        "id": 59638,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9920:15:85",
                        "memberName": "isNotYetStarted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66000,
                        "src": "9895:40:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$65968_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$65968_memory_ptr_$",
                          "typeString": "function (struct EventRange memory) view returns (bool)"
                        }
                      },
                      "id": 59639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9895:42:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59644,
                  "nodeType": "IfStatement",
                  "src": "9890:91:85",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59641,
                        "name": "EventIsNotCreatedOrAlreadyStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64204,
                        "src": "9946:33:85",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9946:35:85",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59643,
                    "nodeType": "RevertStatement",
                    "src": "9939:42:85"
                  }
                }
              ]
            },
            "documentation": {
              "id": 59630,
              "nodeType": "StructuredDocumentation",
              "src": "9730:90:85",
              "text": " @dev Helper method to ensure the auction is not yet started or not created."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotStarted",
            "nameLocation": "9832:18:85",
            "parameters": {
              "id": 59633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59632,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "9859:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 59646,
                  "src": "9851:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59631,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9851:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9850:19:85"
            },
            "returnParameters": {
              "id": 59634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9884:0:85"
            },
            "scope": 59647,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 58672,
              "name": "Initializable",
              "nameLocations": [
                "769:13:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49864,
              "src": "769:13:85"
            },
            "id": 58673,
            "nodeType": "InheritanceSpecifier",
            "src": "769:13:85"
          },
          {
            "baseName": {
              "id": 58674,
              "name": "AccessControlEnumerable",
              "nameLocations": [
                "784:23:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48591,
              "src": "784:23:85"
            },
            "id": 58675,
            "nodeType": "InheritanceSpecifier",
            "src": "784:23:85"
          },
          {
            "baseName": {
              "id": 58676,
              "name": "INSAuction",
              "nameLocations": [
                "809:10:85"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64411,
              "src": "809:10:85"
            },
            "id": 58677,
            "nodeType": "InheritanceSpecifier",
            "src": "809:10:85"
          }
        ],
        "canonicalName": "RNSAuction",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59647,
          64411,
          48591,
          48466,
          52295,
          52307,
          48689,
          48664,
          51932,
          49864
        ],
        "name": "RNSAuction",
        "nameLocation": "755:10:85",
        "scope": 59648,
        "usedErrors": [
          64182,
          64184,
          64186,
          64188,
          64190,
          64192,
          64194,
          64196,
          64198,
          64200,
          64202,
          64204
        ],
        "usedEvents": [
          48603,
          48612,
          48621,
          49710,
          64229,
          64240,
          64255,
          64260,
          64265
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 21474288,
  "bytecode": "0x608060405261000c610011565b6100d0565b600054610100900460ff161561007d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100ce576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612443806100df6000396000f3fe6080604052600436106101c25760003560e01c8063791a26b4116100f7578063a282d4ae11610095578063db5e1ec611610064578063db5e1ec6146105b4578063ec14cf37146105d4578063f0f44260146105f4578063f5b541a61461061457600080fd5b8063a282d4ae14610544578063b967169014610559578063ca15c87314610574578063d547741f1461059457600080fd5b80639010d07c116100d15780639010d07c146104dc57806391d14854146104fc5780639979ef451461051c578063a217fddf1461052f57600080fd5b8063791a26b41461047e57806381bec1b31461049e5780638c843314146104be57600080fd5b80633b19e84a1161016457806360223b441161013e57806360223b44146103a15780636e7d60f2146103c1578063777b0a18146103ee57806378bd79351461040e57600080fd5b80633b19e84a146103395780634c255c971461036b57806353f9195e1461038157600080fd5b806319a3ee40116101a057806319a3ee40146102a0578063248a9ca3146102b85780632f2ff15d146102f757806336568abe1461031957600080fd5b806301ffc9a7146101c75780630afe1bb3146101fc57806315a291621461022c575b600080fd5b3480156101d357600080fd5b506101e76101e2366004611cf6565b610636565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b506102146305a39a8081565b6040516001600160401b0390911681526020016101f3565b34801561023857600080fd5b50610285610247366004611d20565b604080518082019091526000808252602082015250600090815260366020908152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252016101f3565b3480156102ac57600080fd5b506102146301e1338081565b3480156102c457600080fd5b506102e96102d3366004611d20565b6000908152600160208190526040909120015490565b6040519081526020016101f3565b34801561030357600080fd5b50610317610312366004611d4e565b610661565b005b34801561032557600080fd5b50610317610334366004611d4e565b61068c565b34801561034557600080fd5b506038546001600160a01b03165b6040516001600160a01b0390911681526020016101f3565b34801561037757600080fd5b506102e961271081565b34801561038d57600080fd5b506101e761039c366004611d20565b61070f565b3480156103ad57600080fd5b506103176103bc366004611d20565b610732565b3480156103cd57600080fd5b506103e16103dc366004611dc9565b610746565b6040516101f39190611e0a565b3480156103fa57600080fd5b50610317610409366004611e4e565b610a35565b34801561041a57600080fd5b5061042e610429366004611d20565b610b98565b6040805183518152602080850151818301529382015180516001600160a01b0316828401529384015160608083019190915291840151608082015292015160a083015260c082015260e0016101f3565b34801561048a57600080fd5b506103e1610499366004611dc9565b610c4d565b3480156104aa57600080fd5b506103176104b9366004611edf565b610e08565b3480156104ca57600080fd5b506035546001600160a01b0316610353565b3480156104e857600080fd5b506103536104f7366004611f0c565b610e85565b34801561050857600080fd5b506101e7610517366004611d4e565b610ea4565b61031761052a366004611d20565b610ecf565b34801561053b57600080fd5b506102e9600081565b34801561055057600080fd5b506039546102e9565b34801561056557600080fd5b506102146001600160401b0381565b34801561058057600080fd5b506102e961058f366004611d20565b611081565b3480156105a057600080fd5b506103176105af366004611d4e565b611098565b3480156105c057600080fd5b506102e96105cf366004611f2e565b6110be565b3480156105e057600080fd5b506103176105ef366004611f4a565b61115b565b34801561060057600080fd5b5061031761060f366004611fce565b6112f8565b34801561062057600080fd5b506102e96000805160206123ee83398151915281565b60006001600160e01b03198216635a05180f60e01b148061065b575061065b8261130c565b92915050565b6000828152600160208190526040909120015461067d81611341565b610687838361134e565b505050565b6001600160a01b03811633146107015760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61070b8282611370565b5050565b600881901c6000908152603a6020526040812054600160ff84161b16151561065b565b600061073d81611341565b61070b82611392565b6060600080610768604051806040016040528060008152602001600081525090565b610770611ca1565b85806001600160401b0381111561078957610789611feb565b6040519080825280602002602001820160405280156107b2578160200160208202803683370190505b506035549096506001600160a01b031660006107da426301e133806001600160401b036113f0565b905060005b83811015610a11578a8a828181106107f9576107f9612001565b60209081029290920135600081815260378452604080822081516060808201845282548252600180840154838a0152845160808101865260028501546001600160a01b031681526003850154818b0152600485015481870152600590940154848301528285019384528251865260368952848620855180870190965280548652015497840197909752905190950151929c5099509297509091039050610a095760208601514210156108be576040516372d1250d60e01b815260040160405180910390fd5b8460400151604001516000036108e7576040516323bbcc0160e01b815260040160405180910390fd5b6040850151602001516108fa908861202d565b60405163fc284d1160e01b8152600481018a90526001600160401b03841660248201529097506001600160a01b0384169063fc284d1190604401600060405180830381600087803b15801561094e57600080fd5b505af1158015610962573d6000803e3d6000fd5b505050506040858101515190516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018a9052908416906323b872dd90606401600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b50505050428982815181106109e8576109e8612001565b602090810291909101810182905260008a8152603790915260409020600501555b6001016107df565b50603854610a28906001600160a01b031687611426565b5050505050505092915050565b6000805160206123ee833981519152610a4d81611341565b85610a578161148b565b84801580610a655750808414155b15610a8357604051634ec4810560e11b815260040160405180910390fd5b6000806000805b84811015610b4c578a8a82818110610aa457610aa4612001565b905060200201359350610ab68461070f565b610ad357604051637d6fe8d760e11b815260040160405180910390fd5b6000848152603760205260409020805493509150821580610af357508b83145b80610b0057506004820154155b610b1d57604051631dc8374160e01b815260040160405180910390fd5b8b8255888882818110610b3257610b32612001565b905060200201358260010181905550806001019050610a8a565b508a7f9a845a1c4235343a450f5e39d4179b7e2a6c9586c02bff45d956717f4a19dd948b8b8b8b604051610b839493929190612072565b60405180910390a25050505050505050505050565b610ba0611ca1565b5060008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b03168152600385015481880152600485015481870152600590940154918401919091528184019290925280518351808501855286815285018690528552603684528285208351808501909452805484529091015492820192909252909190610c4583826114d8565b915050915091565b60606000805160206123ee833981519152610c6781611341565b826000819003610c8a57604051634ec4810560e11b815260040160405180910390fd5b806001600160401b03811115610ca257610ca2611feb565b604051908082528060200260200182016040528015610ccb578160200160208202803683370190505b506035549093506001600160a01b03167fba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d6886301e1338060005b84811015610dfc57836001600160a01b0316630570891f848b8b85818110610d2e57610d2e612001565b9050602002810190610d4091906120a4565b600030886040518763ffffffff1660e01b8152600401610d65969594939291906120ea565b60408051808303816000875af1158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190612146565b9050878281518110610dbb57610dbb612001565b602002602001018181525050610df4878281518110610ddc57610ddc612001565b6020026020010151603a61153090919063ffffffff16565b600101610d04565b50505050505092915050565b6000610e1381611341565b81610e1d81611559565b83610e278161148b565b60008581526036602090815260409091208535815590850135600182015550847fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b85604051610e769190612180565b60405180910390a25050505050565b6000828152600260205260408120610e9d908361159e565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b031681526003850154818801526004850154818701526005909401549184019190915281840192909252805185526036845282852083518085019094528054845290910154928201929092529091610f6383836114d8565b9050610f6e826115aa565b610f8b576040516348c6117b60e11b815260040160405180910390fd5b80341015610fac57604051632ca2f52b60e11b815260040160405180910390fd5b33328114610fcc576040516259ca3d60e61b815260040160405180910390fd5b604084810151805160209182015160008981526037845284902034600382018190556002820180546001600160a01b0319166001600160a01b038981169182178355426004909501949094558b5188519384529683015295810183905290831660608201529193909290918991907f5934294f4724ea4bb71fee8511b9ccb8dd6d2249ac4d120a81ccfcbbd0ad905f9060800160405180910390a38115611077576110778383611426565b5050505050505050565b600081815260026020526040812061065b906115c5565b600082815260016020819052604090912001546110b481611341565b6106878383611370565b6000806110ca81611341565b826110d481611559565b33846040516020016110e7929190612197565b60408051808303601f1901815291815281516020928301206000818152603684529190912086358155918601356001830155935050827fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b8560405161114c9190612180565b60405180910390a25050919050565b600054610100900460ff161580801561117b5750600054600160ff909116105b806111955750303b158015611195575060005460ff166001145b6111f85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f8565b6000805460ff19166001179055801561121b576000805461ff0019166101001790555b611224836115cf565b61122d82611392565b611238600088611640565b846000805160206123ee83398151915260005b8281101561128b57611283828a8a8481811061126957611269612001565b905060200201602081019061127e9190611fce565b611640565b60010161124b565b5050603580546001600160a01b0319166001600160a01b0387161790555080156112ef576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600061130381611341565b61070b826115cf565b60006001600160e01b03198216637965db0b60e01b148061065b57506301ffc9a760e01b6001600160e01b031983161461065b565b61134b813361164a565b50565b611358828261167d565b600082815260026020526040902061068790826116e8565b61137a82826116fd565b60008281526002602052604090206106879082611764565b6127108111156113b55760405163220f1a1560e01b815260040160405180910390fd5b60398190556040518181527f846b33625d74f443855144a5f2aef4dda303cda3dfb1c704cb58ab70671823429060200160405180910390a150565b6000818411806113ff57508183115b1561140b575080610e9d565b6114158484611779565b905081811115610e9d575092915050565b6000611432838361178d565b9050806106875761144b836001600160a01b0316611803565b61145483611819565b6040516020016114659291906121e2565b60408051601f198184030181529082905262461bcd60e51b82526106f891600401612260565b60008181526036602090815260409182902082518084019093528054835260010154908201526114bb9051421090565b61134b5760405163028e4e9760e51b815260040160405180910390fd5b60006114f08360200151846040015160200151611830565b905082604001516020015160001415801561150e5750602082015142105b1561065b576115268360200151603954612710611846565b610e9d908261202d565b600881901c600090815260209290925260409091208054600160ff9093169290921b9091179055565b6020810135813511158015611581575061158161157b36839003830183612293565b51421090565b61134b576040516302ef0c7360e21b815260040160405180910390fd5b6000610e9d8383611930565b60004282600001511115801561065b57505060200151421090565b600061065b825490565b6001600160a01b0381166115f6576040516362daafb160e11b815260040160405180910390fd5b603880546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b61070b828261134e565b6116548282610ea4565b61070b5761166181611803565b61166c83602061195a565b6040516020016114659291906122ef565b6116878282610ea4565b61070b5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610e9d836001600160a01b038416611af5565b6117078282610ea4565b1561070b5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610e9d836001600160a01b038416611b44565b8181018281101561065b575060001961065b565b604080516000808252602082019092526001600160a01b0384169083906040516117b79190612364565b60006040518083038185875af1925050503d80600081146117f4576040519150601f19603f3d011682016040523d82523d6000602084013e6117f9565b606091505b5090949350505050565b606061065b6001600160a01b038316601461195a565b606061065b8261182884611c37565b60010161195a565b600081831161183f5781610e9d565b5090919050565b60008080600019858709858702925082811083820303915050806000036118805783828161187657611876612380565b0492505050610e9d565b8084116118c75760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016106f8565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600082600001828154811061194757611947612001565b9060005260206000200154905092915050565b60606000611969836002612396565b61197490600261202d565b6001600160401b0381111561198b5761198b611feb565b6040519080825280601f01601f1916602001820160405280156119b5576020820181803683370190505b509050600360fc1b816000815181106119d0576119d0612001565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119ff576119ff612001565b60200101906001600160f81b031916908160001a9053506000611a23846002612396565b611a2e90600161202d565b90505b6001811115611aa6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a6257611a62612001565b1a60f81b828281518110611a7857611a78612001565b60200101906001600160f81b031916908160001a90535060049490941c93611a9f816123ad565b9050611a31565b508315610e9d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106f8565b6000818152600183016020526040812054611b3c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561065b565b50600061065b565b60008181526001830160205260408120548015611c2d576000611b686001836123c4565b8554909150600090611b7c906001906123c4565b9050818114611be1576000866000018281548110611b9c57611b9c612001565b9060005260206000200154905080876000018481548110611bbf57611bbf612001565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611bf257611bf26123d7565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061065b565b600091505061065b565b600080608083901c15611c4f5760809290921c916010015b604083901c15611c645760409290921c916008015b602083901c15611c795760209290921c916004015b601083901c15611c8e5760109290921c916002015b600883901c1561065b5760010192915050565b60405180606001604052806000801916815260200160008152602001611cf1604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b905290565b600060208284031215611d0857600080fd5b81356001600160e01b031981168114610e9d57600080fd5b600060208284031215611d3257600080fd5b5035919050565b6001600160a01b038116811461134b57600080fd5b60008060408385031215611d6157600080fd5b823591506020830135611d7381611d39565b809150509250929050565b60008083601f840112611d9057600080fd5b5081356001600160401b03811115611da757600080fd5b6020830191508360208260051b8501011115611dc257600080fd5b9250929050565b60008060208385031215611ddc57600080fd5b82356001600160401b03811115611df257600080fd5b611dfe85828601611d7e565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611e4257835183529284019291840191600101611e26565b50909695505050505050565b600080600080600060608688031215611e6657600080fd5b8535945060208601356001600160401b0380821115611e8457600080fd5b611e9089838a01611d7e565b90965094506040880135915080821115611ea957600080fd5b50611eb688828901611d7e565b969995985093965092949392505050565b600060408284031215611ed957600080fd5b50919050565b60008060608385031215611ef257600080fd5b82359150611f038460208501611ec7565b90509250929050565b60008060408385031215611f1f57600080fd5b50508035926020909101359150565b600060408284031215611f4057600080fd5b610e9d8383611ec7565b60008060008060008060a08789031215611f6357600080fd5b8635611f6e81611d39565b955060208701356001600160401b03811115611f8957600080fd5b611f9589828a01611d7e565b9096509450506040870135611fa981611d39565b92506060870135611fb981611d39565b80925050608087013590509295509295509295565b600060208284031215611fe057600080fd5b8135610e9d81611d39565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561065b5761065b612017565b81835260006001600160fb1b0383111561205957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000612086604083018688612040565b8281036020840152612099818587612040565b979650505050505050565b6000808335601e198436030181126120bb57600080fd5b8301803591506001600160401b038211156120d557600080fd5b602001915036819003821315611dc257600080fd5b86815260a060208201528460a0820152848660c0830137600060c08683018101919091526001600160a01b0394851660408301529290931660608401526001600160401b03166080830152601f909201601f1916010192915050565b6000806040838503121561215957600080fd5b82516001600160401b038116811461217057600080fd5b6020939093015192949293505050565b81358152602080830135908201526040810161065b565b6001600160a01b038316815260608101610e9d602083018480358252602090810135910152565b60005b838110156121d95781810151838201526020016121c1565b50506000910152565b7f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366815269032b9102927a7103a37960b51b60208201526000835161222d81602a8501602088016121be565b660103b30b63ab2960cd1b602a9184019182015283516122548160318401602088016121be565b01603101949350505050565b602081526000825180602084015261227f8160408501602087016121be565b601f01601f19169190910160400192915050565b6000604082840312156122a557600080fd5b604051604081018181106001600160401b03821117156122d557634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123278160178501602088016121be565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123588160288401602088016121be565b01602801949350505050565b600082516123768184602087016121be565b9190910192915050565b634e487b7160e01b600052601260045260246000fd5b808202811582820484141761065b5761065b612017565b6000816123bc576123bc612017565b506000190190565b8181038181111561065b5761065b612017565b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220af269df2a00739b1d11f4b9dfe6c9748aae7893d5be6658d7c88083e147efb3764736f6c63430008150033",
  "chainId": 2021,
  "contractName": "RNSAuction",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c8063791a26b4116100f7578063a282d4ae11610095578063db5e1ec611610064578063db5e1ec6146105b4578063ec14cf37146105d4578063f0f44260146105f4578063f5b541a61461061457600080fd5b8063a282d4ae14610544578063b967169014610559578063ca15c87314610574578063d547741f1461059457600080fd5b80639010d07c116100d15780639010d07c146104dc57806391d14854146104fc5780639979ef451461051c578063a217fddf1461052f57600080fd5b8063791a26b41461047e57806381bec1b31461049e5780638c843314146104be57600080fd5b80633b19e84a1161016457806360223b441161013e57806360223b44146103a15780636e7d60f2146103c1578063777b0a18146103ee57806378bd79351461040e57600080fd5b80633b19e84a146103395780634c255c971461036b57806353f9195e1461038157600080fd5b806319a3ee40116101a057806319a3ee40146102a0578063248a9ca3146102b85780632f2ff15d146102f757806336568abe1461031957600080fd5b806301ffc9a7146101c75780630afe1bb3146101fc57806315a291621461022c575b600080fd5b3480156101d357600080fd5b506101e76101e2366004611cf6565b610636565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b506102146305a39a8081565b6040516001600160401b0390911681526020016101f3565b34801561023857600080fd5b50610285610247366004611d20565b604080518082019091526000808252602082015250600090815260366020908152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252016101f3565b3480156102ac57600080fd5b506102146301e1338081565b3480156102c457600080fd5b506102e96102d3366004611d20565b6000908152600160208190526040909120015490565b6040519081526020016101f3565b34801561030357600080fd5b50610317610312366004611d4e565b610661565b005b34801561032557600080fd5b50610317610334366004611d4e565b61068c565b34801561034557600080fd5b506038546001600160a01b03165b6040516001600160a01b0390911681526020016101f3565b34801561037757600080fd5b506102e961271081565b34801561038d57600080fd5b506101e761039c366004611d20565b61070f565b3480156103ad57600080fd5b506103176103bc366004611d20565b610732565b3480156103cd57600080fd5b506103e16103dc366004611dc9565b610746565b6040516101f39190611e0a565b3480156103fa57600080fd5b50610317610409366004611e4e565b610a35565b34801561041a57600080fd5b5061042e610429366004611d20565b610b98565b6040805183518152602080850151818301529382015180516001600160a01b0316828401529384015160608083019190915291840151608082015292015160a083015260c082015260e0016101f3565b34801561048a57600080fd5b506103e1610499366004611dc9565b610c4d565b3480156104aa57600080fd5b506103176104b9366004611edf565b610e08565b3480156104ca57600080fd5b506035546001600160a01b0316610353565b3480156104e857600080fd5b506103536104f7366004611f0c565b610e85565b34801561050857600080fd5b506101e7610517366004611d4e565b610ea4565b61031761052a366004611d20565b610ecf565b34801561053b57600080fd5b506102e9600081565b34801561055057600080fd5b506039546102e9565b34801561056557600080fd5b506102146001600160401b0381565b34801561058057600080fd5b506102e961058f366004611d20565b611081565b3480156105a057600080fd5b506103176105af366004611d4e565b611098565b3480156105c057600080fd5b506102e96105cf366004611f2e565b6110be565b3480156105e057600080fd5b506103176105ef366004611f4a565b61115b565b34801561060057600080fd5b5061031761060f366004611fce565b6112f8565b34801561062057600080fd5b506102e96000805160206123ee83398151915281565b60006001600160e01b03198216635a05180f60e01b148061065b575061065b8261130c565b92915050565b6000828152600160208190526040909120015461067d81611341565b610687838361134e565b505050565b6001600160a01b03811633146107015760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61070b8282611370565b5050565b600881901c6000908152603a6020526040812054600160ff84161b16151561065b565b600061073d81611341565b61070b82611392565b6060600080610768604051806040016040528060008152602001600081525090565b610770611ca1565b85806001600160401b0381111561078957610789611feb565b6040519080825280602002602001820160405280156107b2578160200160208202803683370190505b506035549096506001600160a01b031660006107da426301e133806001600160401b036113f0565b905060005b83811015610a11578a8a828181106107f9576107f9612001565b60209081029290920135600081815260378452604080822081516060808201845282548252600180840154838a0152845160808101865260028501546001600160a01b031681526003850154818b0152600485015481870152600590940154848301528285019384528251865260368952848620855180870190965280548652015497840197909752905190950151929c5099509297509091039050610a095760208601514210156108be576040516372d1250d60e01b815260040160405180910390fd5b8460400151604001516000036108e7576040516323bbcc0160e01b815260040160405180910390fd5b6040850151602001516108fa908861202d565b60405163fc284d1160e01b8152600481018a90526001600160401b03841660248201529097506001600160a01b0384169063fc284d1190604401600060405180830381600087803b15801561094e57600080fd5b505af1158015610962573d6000803e3d6000fd5b505050506040858101515190516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018a9052908416906323b872dd90606401600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b50505050428982815181106109e8576109e8612001565b602090810291909101810182905260008a8152603790915260409020600501555b6001016107df565b50603854610a28906001600160a01b031687611426565b5050505050505092915050565b6000805160206123ee833981519152610a4d81611341565b85610a578161148b565b84801580610a655750808414155b15610a8357604051634ec4810560e11b815260040160405180910390fd5b6000806000805b84811015610b4c578a8a82818110610aa457610aa4612001565b905060200201359350610ab68461070f565b610ad357604051637d6fe8d760e11b815260040160405180910390fd5b6000848152603760205260409020805493509150821580610af357508b83145b80610b0057506004820154155b610b1d57604051631dc8374160e01b815260040160405180910390fd5b8b8255888882818110610b3257610b32612001565b905060200201358260010181905550806001019050610a8a565b508a7f9a845a1c4235343a450f5e39d4179b7e2a6c9586c02bff45d956717f4a19dd948b8b8b8b604051610b839493929190612072565b60405180910390a25050505050505050505050565b610ba0611ca1565b5060008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b03168152600385015481880152600485015481870152600590940154918401919091528184019290925280518351808501855286815285018690528552603684528285208351808501909452805484529091015492820192909252909190610c4583826114d8565b915050915091565b60606000805160206123ee833981519152610c6781611341565b826000819003610c8a57604051634ec4810560e11b815260040160405180910390fd5b806001600160401b03811115610ca257610ca2611feb565b604051908082528060200260200182016040528015610ccb578160200160208202803683370190505b506035549093506001600160a01b03167fba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d6886301e1338060005b84811015610dfc57836001600160a01b0316630570891f848b8b85818110610d2e57610d2e612001565b9050602002810190610d4091906120a4565b600030886040518763ffffffff1660e01b8152600401610d65969594939291906120ea565b60408051808303816000875af1158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190612146565b9050878281518110610dbb57610dbb612001565b602002602001018181525050610df4878281518110610ddc57610ddc612001565b6020026020010151603a61153090919063ffffffff16565b600101610d04565b50505050505092915050565b6000610e1381611341565b81610e1d81611559565b83610e278161148b565b60008581526036602090815260409091208535815590850135600182015550847fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b85604051610e769190612180565b60405180910390a25050505050565b6000828152600260205260408120610e9d908361159e565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b031681526003850154818801526004850154818701526005909401549184019190915281840192909252805185526036845282852083518085019094528054845290910154928201929092529091610f6383836114d8565b9050610f6e826115aa565b610f8b576040516348c6117b60e11b815260040160405180910390fd5b80341015610fac57604051632ca2f52b60e11b815260040160405180910390fd5b33328114610fcc576040516259ca3d60e61b815260040160405180910390fd5b604084810151805160209182015160008981526037845284902034600382018190556002820180546001600160a01b0319166001600160a01b038981169182178355426004909501949094558b5188519384529683015295810183905290831660608201529193909290918991907f5934294f4724ea4bb71fee8511b9ccb8dd6d2249ac4d120a81ccfcbbd0ad905f9060800160405180910390a38115611077576110778383611426565b5050505050505050565b600081815260026020526040812061065b906115c5565b600082815260016020819052604090912001546110b481611341565b6106878383611370565b6000806110ca81611341565b826110d481611559565b33846040516020016110e7929190612197565b60408051808303601f1901815291815281516020928301206000818152603684529190912086358155918601356001830155935050827fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b8560405161114c9190612180565b60405180910390a25050919050565b600054610100900460ff161580801561117b5750600054600160ff909116105b806111955750303b158015611195575060005460ff166001145b6111f85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f8565b6000805460ff19166001179055801561121b576000805461ff0019166101001790555b611224836115cf565b61122d82611392565b611238600088611640565b846000805160206123ee83398151915260005b8281101561128b57611283828a8a8481811061126957611269612001565b905060200201602081019061127e9190611fce565b611640565b60010161124b565b5050603580546001600160a01b0319166001600160a01b0387161790555080156112ef576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600061130381611341565b61070b826115cf565b60006001600160e01b03198216637965db0b60e01b148061065b57506301ffc9a760e01b6001600160e01b031983161461065b565b61134b813361164a565b50565b611358828261167d565b600082815260026020526040902061068790826116e8565b61137a82826116fd565b60008281526002602052604090206106879082611764565b6127108111156113b55760405163220f1a1560e01b815260040160405180910390fd5b60398190556040518181527f846b33625d74f443855144a5f2aef4dda303cda3dfb1c704cb58ab70671823429060200160405180910390a150565b6000818411806113ff57508183115b1561140b575080610e9d565b6114158484611779565b905081811115610e9d575092915050565b6000611432838361178d565b9050806106875761144b836001600160a01b0316611803565b61145483611819565b6040516020016114659291906121e2565b60408051601f198184030181529082905262461bcd60e51b82526106f891600401612260565b60008181526036602090815260409182902082518084019093528054835260010154908201526114bb9051421090565b61134b5760405163028e4e9760e51b815260040160405180910390fd5b60006114f08360200151846040015160200151611830565b905082604001516020015160001415801561150e5750602082015142105b1561065b576115268360200151603954612710611846565b610e9d908261202d565b600881901c600090815260209290925260409091208054600160ff9093169290921b9091179055565b6020810135813511158015611581575061158161157b36839003830183612293565b51421090565b61134b576040516302ef0c7360e21b815260040160405180910390fd5b6000610e9d8383611930565b60004282600001511115801561065b57505060200151421090565b600061065b825490565b6001600160a01b0381166115f6576040516362daafb160e11b815260040160405180910390fd5b603880546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b61070b828261134e565b6116548282610ea4565b61070b5761166181611803565b61166c83602061195a565b6040516020016114659291906122ef565b6116878282610ea4565b61070b5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610e9d836001600160a01b038416611af5565b6117078282610ea4565b1561070b5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610e9d836001600160a01b038416611b44565b8181018281101561065b575060001961065b565b604080516000808252602082019092526001600160a01b0384169083906040516117b79190612364565b60006040518083038185875af1925050503d80600081146117f4576040519150601f19603f3d011682016040523d82523d6000602084013e6117f9565b606091505b5090949350505050565b606061065b6001600160a01b038316601461195a565b606061065b8261182884611c37565b60010161195a565b600081831161183f5781610e9d565b5090919050565b60008080600019858709858702925082811083820303915050806000036118805783828161187657611876612380565b0492505050610e9d565b8084116118c75760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016106f8565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600082600001828154811061194757611947612001565b9060005260206000200154905092915050565b60606000611969836002612396565b61197490600261202d565b6001600160401b0381111561198b5761198b611feb565b6040519080825280601f01601f1916602001820160405280156119b5576020820181803683370190505b509050600360fc1b816000815181106119d0576119d0612001565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119ff576119ff612001565b60200101906001600160f81b031916908160001a9053506000611a23846002612396565b611a2e90600161202d565b90505b6001811115611aa6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a6257611a62612001565b1a60f81b828281518110611a7857611a78612001565b60200101906001600160f81b031916908160001a90535060049490941c93611a9f816123ad565b9050611a31565b508315610e9d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106f8565b6000818152600183016020526040812054611b3c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561065b565b50600061065b565b60008181526001830160205260408120548015611c2d576000611b686001836123c4565b8554909150600090611b7c906001906123c4565b9050818114611be1576000866000018281548110611b9c57611b9c612001565b9060005260206000200154905080876000018481548110611bbf57611bbf612001565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611bf257611bf26123d7565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061065b565b600091505061065b565b600080608083901c15611c4f5760809290921c916010015b604083901c15611c645760409290921c916008015b602083901c15611c795760209290921c916004015b601083901c15611c8e5760109290921c916002015b600883901c1561065b5760010192915050565b60405180606001604052806000801916815260200160008152602001611cf1604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b905290565b600060208284031215611d0857600080fd5b81356001600160e01b031981168114610e9d57600080fd5b600060208284031215611d3257600080fd5b5035919050565b6001600160a01b038116811461134b57600080fd5b60008060408385031215611d6157600080fd5b823591506020830135611d7381611d39565b809150509250929050565b60008083601f840112611d9057600080fd5b5081356001600160401b03811115611da757600080fd5b6020830191508360208260051b8501011115611dc257600080fd5b9250929050565b60008060208385031215611ddc57600080fd5b82356001600160401b03811115611df257600080fd5b611dfe85828601611d7e565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611e4257835183529284019291840191600101611e26565b50909695505050505050565b600080600080600060608688031215611e6657600080fd5b8535945060208601356001600160401b0380821115611e8457600080fd5b611e9089838a01611d7e565b90965094506040880135915080821115611ea957600080fd5b50611eb688828901611d7e565b969995985093965092949392505050565b600060408284031215611ed957600080fd5b50919050565b60008060608385031215611ef257600080fd5b82359150611f038460208501611ec7565b90509250929050565b60008060408385031215611f1f57600080fd5b50508035926020909101359150565b600060408284031215611f4057600080fd5b610e9d8383611ec7565b60008060008060008060a08789031215611f6357600080fd5b8635611f6e81611d39565b955060208701356001600160401b03811115611f8957600080fd5b611f9589828a01611d7e565b9096509450506040870135611fa981611d39565b92506060870135611fb981611d39565b80925050608087013590509295509295509295565b600060208284031215611fe057600080fd5b8135610e9d81611d39565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561065b5761065b612017565b81835260006001600160fb1b0383111561205957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000612086604083018688612040565b8281036020840152612099818587612040565b979650505050505050565b6000808335601e198436030181126120bb57600080fd5b8301803591506001600160401b038211156120d557600080fd5b602001915036819003821315611dc257600080fd5b86815260a060208201528460a0820152848660c0830137600060c08683018101919091526001600160a01b0394851660408301529290931660608401526001600160401b03166080830152601f909201601f1916010192915050565b6000806040838503121561215957600080fd5b82516001600160401b038116811461217057600080fd5b6020939093015192949293505050565b81358152602080830135908201526040810161065b565b6001600160a01b038316815260608101610e9d602083018480358252602090810135910152565b60005b838110156121d95781810151838201526020016121c1565b50506000910152565b7f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366815269032b9102927a7103a37960b51b60208201526000835161222d81602a8501602088016121be565b660103b30b63ab2960cd1b602a9184019182015283516122548160318401602088016121be565b01603101949350505050565b602081526000825180602084015261227f8160408501602087016121be565b601f01601f19169190910160400192915050565b6000604082840312156122a557600080fd5b604051604081018181106001600160401b03821117156122d557634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123278160178501602088016121be565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123588160288401602088016121be565b01602801949350505050565b600082516123768184602087016121be565b9190910192915050565b634e487b7160e01b600052601260045260246000fd5b808202811582820484141761065b5761065b612017565b6000816123bc576123bc612017565b506000190190565b8181038181111561065b5761065b612017565b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220af269df2a00739b1d11f4b9dfe6c9748aae7893d5be6658d7c88083e147efb3764736f6c63430008150033",
  "deployer": "0x968D0Cd7343f711216817E617d3f92a23dC91c07",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "bulkClaimBidNames(uint256[])": {
        "details": "Bulk claims the bid name. Requirements: - Must be called after ended time. - The method caller can be anyone.",
        "params": {
          "ids": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "bulkRegister(string[])": {
        "details": "Claims domain names for auction. Requirements: - The method caller must be contract operator.",
        "params": {
          "labels": "The domain names. Eg, ['foo'] for 'foo.ron'"
        },
        "returns": {
          "ids": "The id corresponding for namehash of domain names."
        }
      },
      "createAuctionEvent((uint256,uint256))": {
        "details": "Creates a new auction to sale with a specific time period. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}.",
        "returns": {
          "auctionId": "The auction id"
        }
      },
      "getAuction(uint256)": {
        "details": "Returns the highest bid and address of the bidder.",
        "params": {
          "id": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "getAuctionEvent(bytes32)": {
        "details": "Returns the event range of an auction."
      },
      "getBidGapRatio()": {
        "details": "Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%."
      },
      "getRNSUnified()": {
        "details": "Returns RNSUnified contract."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getTreasury()": {
        "details": "Returns the treasury."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "listNamesForAuction(bytes32,uint256[],uint256[])": {
        "details": "Lists reserved names to sale in a specified auction. Requirements: - The method caller must be contract operator. - Array length are matched and larger than 0. - Only allow to set when the domain is:   + Not in any auction.   + Or, in the current auction.   + Or, this name is not bided. Emits an event {LabelsListed}. Note: If the name is already listed, this method replaces with a new input value.",
        "params": {
          "ids": "The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "placeBid(uint256)": {
        "details": "Places a bid for a domain name. Requirements: - The name is listed, or the auction is happening. - The msg.value is larger than the current bid price or the auction starting price. Emits an event {BidPlaced}.",
        "params": {
          "id": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "reserved(uint256)": {
        "details": "Checks whether a domain name is currently reserved for auction or not.",
        "params": {
          "id": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setAuctionEvent(bytes32,(uint256,uint256))": {
        "details": "Updates the auction details. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}."
      },
      "setBidGapRatio(uint256)": {
        "details": "Sets commission ratio. Value in range [0;100_00] is 0%-100%. Requirements: - The method caller must be admin Emits an event {BidGapRatioUpdated}."
      },
      "setTreasury(address)": {
        "details": "Sets the treasury. Requirements: - The method caller must be admin Emits an event {TreasuryUpdated}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "events": {
      "AuctionEventSet(bytes32,(uint256,uint256))": {
        "details": "Emitted when an auction is set."
      },
      "BidGapRatioUpdated(uint256)": {
        "details": "Emitted when bid gap ratio is updated."
      },
      "BidPlaced(bytes32,uint256,uint256,address,uint256,address)": {
        "details": "Emitted when a bid is placed for a name."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "LabelsListed(bytes32,uint256[],uint256[])": {
        "details": "Emitted when the labels are listed for auction."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "TreasuryUpdated(address)": {
        "details": "Emitted when the treasury is updated."
      }
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyBidding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractBidderIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventIsNotCreatedOrAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEventRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameNotReserved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOneBidded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotYetEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAssignment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueryIsNotInPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RatioIsTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct EventRange\",\"name\":\"range\",\"type\":\"tuple\"}],\"name\":\"AuctionEventSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"BidGapRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousBidder\",\"type\":\"address\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"startingPrices\",\"type\":\"uint256[]\"}],\"name\":\"LabelsListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_EXPIRY_DURATION\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_AUCTION_DOMAIN_EXPIRY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_EXPIRY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"bulkClaimBidNames\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"claimedAts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"labels\",\"type\":\"string[]\"}],\"name\":\"bulkRegister\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct EventRange\",\"name\":\"range\",\"type\":\"tuple\"}],\"name\":\"createAuctionEvent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct INSAuction.Bid\",\"name\":\"bid\",\"type\":\"tuple\"}],\"internalType\":\"struct INSAuction.DomainAuction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"beatPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"}],\"name\":\"getAuctionEvent\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct EventRange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBidGapRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRNSUnified\",\"outputs\":[{\"internalType\":\"contract INSUnified\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract INSUnified\",\"name\":\"rnsUnified\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidGapRatio\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startingPrices\",\"type\":\"uint256[]\"}],\"name\":\"listNamesForAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"reserved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct EventRange\",\"name\":\"range\",\"type\":\"tuple\"}],\"name\":\"setAuctionEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"setBidGapRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuctionEventSet(bytes32,(uint256,uint256))\":{\"details\":\"Emitted when an auction is set.\"},\"BidGapRatioUpdated(uint256)\":{\"details\":\"Emitted when bid gap ratio is updated.\"},\"BidPlaced(bytes32,uint256,uint256,address,uint256,address)\":{\"details\":\"Emitted when a bid is placed for a name.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"LabelsListed(bytes32,uint256[],uint256[])\":{\"details\":\"Emitted when the labels are listed for auction.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TreasuryUpdated(address)\":{\"details\":\"Emitted when the treasury is updated.\"}},\"kind\":\"dev\",\"methods\":{\"bulkClaimBidNames(uint256[])\":{\"details\":\"Bulk claims the bid name. Requirements: - Must be called after ended time. - The method caller can be anyone.\",\"params\":{\"ids\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"bulkRegister(string[])\":{\"details\":\"Claims domain names for auction. Requirements: - The method caller must be contract operator.\",\"params\":{\"labels\":\"The domain names. Eg, ['foo'] for 'foo.ron'\"},\"returns\":{\"ids\":\"The id corresponding for namehash of domain names.\"}},\"createAuctionEvent((uint256,uint256))\":{\"details\":\"Creates a new auction to sale with a specific time period. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}.\",\"returns\":{\"auctionId\":\"The auction id\"}},\"getAuction(uint256)\":{\"details\":\"Returns the highest bid and address of the bidder.\",\"params\":{\"id\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"getAuctionEvent(bytes32)\":{\"details\":\"Returns the event range of an auction.\"},\"getBidGapRatio()\":{\"details\":\"Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%.\"},\"getRNSUnified()\":{\"details\":\"Returns RNSUnified contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTreasury()\":{\"details\":\"Returns the treasury.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"listNamesForAuction(bytes32,uint256[],uint256[])\":{\"details\":\"Lists reserved names to sale in a specified auction. Requirements: - The method caller must be contract operator. - Array length are matched and larger than 0. - Only allow to set when the domain is:   + Not in any auction.   + Or, in the current auction.   + Or, this name is not bided. Emits an event {LabelsListed}. Note: If the name is already listed, this method replaces with a new input value.\",\"params\":{\"ids\":\"The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"placeBid(uint256)\":{\"details\":\"Places a bid for a domain name. Requirements: - The name is listed, or the auction is happening. - The msg.value is larger than the current bid price or the auction starting price. Emits an event {BidPlaced}.\",\"params\":{\"id\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"reserved(uint256)\":{\"details\":\"Checks whether a domain name is currently reserved for auction or not.\",\"params\":{\"id\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setAuctionEvent(bytes32,(uint256,uint256))\":{\"details\":\"Updates the auction details. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}.\"},\"setBidGapRatio(uint256)\":{\"details\":\"Sets commission ratio. Value in range [0;100_00] is 0%-100%. Requirements: - The method caller must be admin Emits an event {BidGapRatioUpdated}.\"},\"setTreasury(address)\":{\"details\":\"Sets the treasury. Requirements: - The method caller must be admin Emits an event {TreasuryUpdated}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"DOMAIN_EXPIRY_DURATION\":{\"details\":\"The expiry duration of a domain after transferring to bidder.\"},\"MAX_AUCTION_DOMAIN_EXPIRY\":{\"details\":\"The maximum expiry duration of a domain after transferring to bidder.\"},\"MAX_EXPIRY\":{\"details\":\"The maximum expiry duration\"},\"MAX_PERCENTAGE\":{\"details\":\"Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\"},\"OPERATOR_ROLE\":{\"details\":\"Returns the operator role.\"},\"____gap\":{\"details\":\"Gap for upgradeability.\"},\"_auctionRange\":{\"details\":\"Mapping from auction Id => event range\"},\"_bidGapRatio\":{\"details\":\"The gap ratio between 2 bids with the starting price.\"},\"_domainAuction\":{\"details\":\"Mapping from id of domain names => auction detail.\"},\"_reserved\":{\"details\":\"Mapping from id => bool reserved status\"},\"_rnsUnified\":{\"details\":\"The RNSUnified contract.\"},\"_treasury\":{\"details\":\"The treasury.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAuctionEvent((uint256,uint256))\":{\"notice\":\"Please use the method `setAuctionNames` to list all the reserved names.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RNSAuction.sol\":\"RNSAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/=lib/pyth-sdk-solidity/\",\":@rns-contracts/=src/\",\":buffer/=lib/buffer/contracts/\",\":contract-template/=lib/contract-template/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlEnumerable.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\nimport \\\"../utils/structs/EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\\n */\\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\\n        return _roleMembers[role].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\\n        return _roleMembers[role].length();\\n    }\\n\\n    /**\\n     * @dev Overload {_grantRole} to track enumerable memberships\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual override {\\n        super._grantRole(role, account);\\n        _roleMembers[role].add(account);\\n    }\\n\\n    /**\\n     * @dev Overload {_revokeRole} to track enumerable memberships\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual override {\\n        super._revokeRole(role, account);\\n        _roleMembers[role].remove(account);\\n    }\\n}\\n\",\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerable is IAccessControl {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/BitMaps.sol)\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing uint256 to bool mapping in a compact and efficient way, providing the keys are sequential.\\n * Largely inspired by Uniswap's https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol[merkle-distributor].\\n */\\nlibrary BitMaps {\\n    struct BitMap {\\n        mapping(uint256 => uint256) _data;\\n    }\\n\\n    /**\\n     * @dev Returns whether the bit at `index` is set.\\n     */\\n    function get(BitMap storage bitmap, uint256 index) internal view returns (bool) {\\n        uint256 bucket = index >> 8;\\n        uint256 mask = 1 << (index & 0xff);\\n        return bitmap._data[bucket] & mask != 0;\\n    }\\n\\n    /**\\n     * @dev Sets the bit at `index` to the boolean `value`.\\n     */\\n    function setTo(BitMap storage bitmap, uint256 index, bool value) internal {\\n        if (value) {\\n            set(bitmap, index);\\n        } else {\\n            unset(bitmap, index);\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the bit at `index`.\\n     */\\n    function set(BitMap storage bitmap, uint256 index) internal {\\n        uint256 bucket = index >> 8;\\n        uint256 mask = 1 << (index & 0xff);\\n        bitmap._data[bucket] |= mask;\\n    }\\n\\n    /**\\n     * @dev Unsets the bit at `index`.\\n     */\\n    function unset(BitMap storage bitmap, uint256 index) internal {\\n        uint256 bucket = index >> 8;\\n        uint256 mask = 1 << (index & 0xff);\\n        bitmap._data[bucket] &= ~mask;\\n    }\\n}\\n\",\"keccak256\":\"0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"src/RNSAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { AccessControlEnumerable } from \\\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\\\";\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport { BitMaps } from \\\"@openzeppelin/contracts/utils/structs/BitMaps.sol\\\";\\nimport { INSUnified, INSAuction } from \\\"./interfaces/INSAuction.sol\\\";\\nimport { LibSafeRange } from \\\"./libraries/math/LibSafeRange.sol\\\";\\nimport { LibRNSDomain } from \\\"./libraries/LibRNSDomain.sol\\\";\\nimport { LibEventRange, EventRange } from \\\"./libraries/LibEventRange.sol\\\";\\nimport { RONTransferHelper } from \\\"./libraries/transfers/RONTransferHelper.sol\\\";\\n\\ncontract RNSAuction is Initializable, AccessControlEnumerable, INSAuction {\\n  using LibSafeRange for uint256;\\n  using BitMaps for BitMaps.BitMap;\\n  using LibEventRange for EventRange;\\n\\n  /// @inheritdoc INSAuction\\n  uint64 public constant MAX_EXPIRY = type(uint64).max;\\n  /// @inheritdoc INSAuction\\n  uint256 public constant MAX_PERCENTAGE = 100_00;\\n  /// @inheritdoc INSAuction\\n  uint64 public constant DOMAIN_EXPIRY_DURATION = 365 days;\\n  /// @inheritdoc INSAuction\\n  uint64 public constant MAX_AUCTION_DOMAIN_EXPIRY = 365 days * 3;\\n  /// @inheritdoc INSAuction\\n  bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n  /// @dev Gap for upgradeability.\\n  uint256[50] private ____gap;\\n  /// @dev The RNSUnified contract.\\n  INSUnified internal _rnsUnified;\\n  /// @dev Mapping from auction Id => event range\\n  mapping(bytes32 auctionId => EventRange) internal _auctionRange;\\n  /// @dev Mapping from id of domain names => auction detail.\\n  mapping(uint256 id => DomainAuction) internal _domainAuction;\\n\\n  /// @dev The treasury.\\n  address payable internal _treasury;\\n  /// @dev The gap ratio between 2 bids with the starting price.\\n  uint256 internal _bidGapRatio;\\n  /// @dev Mapping from id => bool reserved status\\n  BitMaps.BitMap internal _reserved;\\n\\n  modifier whenNotStarted(bytes32 auctionId) {\\n    _requireNotStarted(auctionId);\\n    _;\\n  }\\n\\n  modifier onlyValidEventRange(EventRange calldata range) {\\n    _requireValidEventRange(range);\\n    _;\\n  }\\n\\n  constructor() payable {\\n    _disableInitializers();\\n  }\\n\\n  function initialize(\\n    address admin,\\n    address[] calldata operators,\\n    INSUnified rnsUnified,\\n    address payable treasury,\\n    uint256 bidGapRatio\\n  ) external initializer {\\n    _setTreasury(treasury);\\n    _setBidGapRatio(bidGapRatio);\\n    _setupRole(DEFAULT_ADMIN_ROLE, admin);\\n\\n    uint256 length = operators.length;\\n    bytes32 operatorRole = OPERATOR_ROLE;\\n\\n    for (uint256 i; i < length;) {\\n      _setupRole(operatorRole, operators[i]);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    _rnsUnified = rnsUnified;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function bulkRegister(string[] calldata labels) external onlyRole(OPERATOR_ROLE) returns (uint256[] memory ids) {\\n    uint256 length = labels.length;\\n    if (length == 0) revert InvalidArrayLength();\\n    ids = new uint256[](length);\\n    INSUnified rnsUnified = _rnsUnified;\\n    uint256 parentId = LibRNSDomain.RON_ID;\\n    uint64 domainExpiryDuration = DOMAIN_EXPIRY_DURATION;\\n\\n    for (uint256 i; i < length;) {\\n      (, ids[i]) = rnsUnified.mint(parentId, labels[i], address(0x0), address(this), domainExpiryDuration);\\n      _reserved.set(ids[i]);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function reserved(uint256 id) public view returns (bool) {\\n    return _reserved.get(id);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function createAuctionEvent(EventRange calldata range)\\n    external\\n    onlyRole(DEFAULT_ADMIN_ROLE)\\n    onlyValidEventRange(range)\\n    returns (bytes32 auctionId)\\n  {\\n    auctionId = keccak256(abi.encode(_msgSender(), range));\\n    _auctionRange[auctionId] = range;\\n    emit AuctionEventSet(auctionId, range);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function setAuctionEvent(bytes32 auctionId, EventRange calldata range)\\n    external\\n    onlyRole(DEFAULT_ADMIN_ROLE)\\n    onlyValidEventRange(range)\\n    whenNotStarted(auctionId)\\n  {\\n    _auctionRange[auctionId] = range;\\n    emit AuctionEventSet(auctionId, range);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getAuctionEvent(bytes32 auctionId) public view returns (EventRange memory) {\\n    return _auctionRange[auctionId];\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function listNamesForAuction(bytes32 auctionId, uint256[] calldata ids, uint256[] calldata startingPrices)\\n    external\\n    onlyRole(OPERATOR_ROLE)\\n    whenNotStarted(auctionId)\\n  {\\n    uint256 length = ids.length;\\n    if (length == 0 || length != startingPrices.length) revert InvalidArrayLength();\\n    uint256 id;\\n    bytes32 mAuctionId;\\n    DomainAuction storage sAuction;\\n\\n    for (uint256 i; i < length;) {\\n      id = ids[i];\\n      if (!reserved(id)) revert NameNotReserved();\\n\\n      sAuction = _domainAuction[id];\\n      mAuctionId = sAuction.auctionId;\\n      if (!(mAuctionId == 0 || mAuctionId == auctionId || sAuction.bid.timestamp == 0)) {\\n        revert AlreadyBidding();\\n      }\\n\\n      sAuction.auctionId = auctionId;\\n      sAuction.startingPrice = startingPrices[i];\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    emit LabelsListed(auctionId, ids, startingPrices);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function placeBid(uint256 id) external payable {\\n    DomainAuction memory auction = _domainAuction[id];\\n    EventRange memory range = _auctionRange[auction.auctionId];\\n    uint256 beatPrice = _getBeatPrice(auction, range);\\n\\n    if (!range.isInPeriod()) revert QueryIsNotInPeriod();\\n    if (msg.value < beatPrice) revert InsufficientAmount();\\n    address payable bidder = payable(_msgSender());\\n    // check whether the bidder can receive RON\\n    if (bidder != tx.origin) revert ContractBidderIsForbidden();\\n    address payable prvBidder = auction.bid.bidder;\\n    uint256 prvPrice = auction.bid.price;\\n\\n    Bid storage sBid = _domainAuction[id].bid;\\n    sBid.price = msg.value;\\n    sBid.bidder = bidder;\\n    sBid.timestamp = block.timestamp;\\n    emit BidPlaced(auction.auctionId, id, msg.value, bidder, prvPrice, prvBidder);\\n\\n    // refund for previous bidder\\n    if (prvPrice != 0) RONTransferHelper.safeTransfer(prvBidder, prvPrice);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function bulkClaimBidNames(uint256[] calldata ids) external returns (uint256[] memory claimedAts) {\\n    uint256 id;\\n    uint256 accumulatedRON;\\n    EventRange memory range;\\n    DomainAuction memory auction;\\n    uint256 length = ids.length;\\n    claimedAts = new uint256[](length);\\n    INSUnified rnsUnified = _rnsUnified;\\n    uint64 expiry = uint64(block.timestamp.addWithUpperbound(DOMAIN_EXPIRY_DURATION, MAX_EXPIRY));\\n\\n    for (uint256 i; i < length;) {\\n      id = ids[i];\\n      auction = _domainAuction[id];\\n      range = _auctionRange[auction.auctionId];\\n\\n      if (auction.bid.claimedAt == 0) {\\n        if (!range.isEnded()) revert NotYetEnded();\\n        if (auction.bid.timestamp == 0) revert NoOneBidded();\\n\\n        accumulatedRON += auction.bid.price;\\n        rnsUnified.setExpiry(id, expiry);\\n        rnsUnified.transferFrom(address(this), auction.bid.bidder, id);\\n\\n        _domainAuction[id].bid.claimedAt = claimedAts[i] = block.timestamp;\\n      }\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    RONTransferHelper.safeTransfer(_treasury, accumulatedRON);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getRNSUnified() external view returns (INSUnified) {\\n    return _rnsUnified;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getTreasury() external view returns (address) {\\n    return _treasury;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getBidGapRatio() external view returns (uint256) {\\n    return _bidGapRatio;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function setTreasury(address payable addr) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setTreasury(addr);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n\\n  function setBidGapRatio(uint256 ratio) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setBidGapRatio(ratio);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getAuction(uint256 id) public view returns (DomainAuction memory auction, uint256 beatPrice) {\\n    auction = _domainAuction[id];\\n    EventRange memory range = getAuctionEvent(auction.auctionId);\\n    beatPrice = _getBeatPrice(auction, range);\\n  }\\n\\n  /**\\n   * @dev Helper method to set treasury.\\n   *\\n   * Emits an event {TreasuryUpdated}.\\n   */\\n  function _setTreasury(address payable addr) internal {\\n    if (addr == address(0)) revert NullAssignment();\\n    _treasury = addr;\\n    emit TreasuryUpdated(addr);\\n  }\\n\\n  /**\\n   * @dev Helper method to set bid gap ratio.\\n   *\\n   * Emits an event {BidGapRatioUpdated}.\\n   */\\n  function _setBidGapRatio(uint256 ratio) internal {\\n    if (ratio > MAX_PERCENTAGE) revert RatioIsTooLarge();\\n    _bidGapRatio = ratio;\\n    emit BidGapRatioUpdated(ratio);\\n  }\\n\\n  /**\\n   * @dev Helper method to get beat price.\\n   */\\n  function _getBeatPrice(DomainAuction memory auction, EventRange memory range)\\n    internal\\n    view\\n    returns (uint256 beatPrice)\\n  {\\n    beatPrice = Math.max(auction.startingPrice, auction.bid.price);\\n    // Beats price increases if domain is already bided and the event is not yet ended.\\n    if (auction.bid.price != 0 && !range.isEnded()) {\\n      beatPrice += Math.mulDiv(auction.startingPrice, _bidGapRatio, MAX_PERCENTAGE);\\n    }\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure event range is valid.\\n   */\\n  function _requireValidEventRange(EventRange calldata range) internal view {\\n    if (!(range.valid() && range.isNotYetStarted())) revert InvalidEventRange();\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure the auction is not yet started or not created.\\n   */\\n  function _requireNotStarted(bytes32 auctionId) internal view {\\n    if (!_auctionRange[auctionId].isNotYetStarted()) revert EventIsNotCreatedOrAlreadyStarted();\\n  }\\n}\\n\",\"keccak256\":\"0x965d6b3e075fa6a7398c343195416f551fca830c7e4b731554dc73aa8bafa427\",\"license\":\"MIT\"},\"src/interfaces/INSAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { INSUnified } from \\\"./INSUnified.sol\\\";\\nimport { EventRange } from \\\"../libraries/LibEventRange.sol\\\";\\n\\ninterface INSAuction {\\n  error NotYetEnded();\\n  error NoOneBidded();\\n  error NullAssignment();\\n  error AlreadyBidding();\\n  error RatioIsTooLarge();\\n  error NameNotReserved();\\n  error InvalidEventRange();\\n  error QueryIsNotInPeriod();\\n  error InsufficientAmount();\\n  error InvalidArrayLength();\\n  error ContractBidderIsForbidden();\\n  error EventIsNotCreatedOrAlreadyStarted();\\n\\n  struct Bid {\\n    address payable bidder;\\n    uint256 price;\\n    uint256 timestamp;\\n    uint256 claimedAt;\\n  }\\n\\n  struct DomainAuction {\\n    bytes32 auctionId;\\n    uint256 startingPrice;\\n    Bid bid;\\n  }\\n\\n  /// @dev Emitted when an auction is set.\\n  event AuctionEventSet(bytes32 indexed auctionId, EventRange range);\\n  /// @dev Emitted when the labels are listed for auction.\\n  event LabelsListed(bytes32 indexed auctionId, uint256[] ids, uint256[] startingPrices);\\n  /// @dev Emitted when a bid is placed for a name.\\n  event BidPlaced(\\n    bytes32 indexed auctionId,\\n    uint256 indexed id,\\n    uint256 price,\\n    address payable bidder,\\n    uint256 previousPrice,\\n    address previousBidder\\n  );\\n  /// @dev Emitted when the treasury is updated.\\n  event TreasuryUpdated(address indexed addr);\\n  /// @dev Emitted when bid gap ratio is updated.\\n  event BidGapRatioUpdated(uint256 ratio);\\n\\n  /**\\n   * @dev The maximum expiry duration\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev The maximum expiry duration of a domain after transferring to bidder.\\n   */\\n  function MAX_AUCTION_DOMAIN_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the operator role.\\n   */\\n  function OPERATOR_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\\n   */\\n  function MAX_PERCENTAGE() external pure returns (uint256);\\n\\n  /**\\n   * @dev The expiry duration of a domain after transferring to bidder.\\n   */\\n  function DOMAIN_EXPIRY_DURATION() external pure returns (uint64);\\n\\n  /**\\n   * @dev Claims domain names for auction.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract operator.\\n   *\\n   * @param labels The domain names. Eg, ['foo'] for 'foo.ron'\\n   * @return ids The id corresponding for namehash of domain names.\\n   */\\n  function bulkRegister(string[] calldata labels) external returns (uint256[] memory ids);\\n\\n  /**\\n   * @dev Checks whether a domain name is currently reserved for auction or not.\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function reserved(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Creates a new auction to sale with a specific time period.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin.\\n   *\\n   * Emits an event {AuctionEventSet}.\\n   *\\n   * @return auctionId The auction id\\n   * @notice Please use the method `setAuctionNames` to list all the reserved names.\\n   */\\n  function createAuctionEvent(EventRange calldata range) external returns (bytes32 auctionId);\\n\\n  /**\\n   * @dev Updates the auction details.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin.\\n   *\\n   * Emits an event {AuctionEventSet}.\\n   */\\n  function setAuctionEvent(bytes32 auctionId, EventRange calldata range) external;\\n\\n  /**\\n   * @dev Returns the event range of an auction.\\n   */\\n  function getAuctionEvent(bytes32 auctionId) external view returns (EventRange memory);\\n\\n  /**\\n   * @dev Lists reserved names to sale in a specified auction.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract operator.\\n   * - Array length are matched and larger than 0.\\n   * - Only allow to set when the domain is:\\n   *   + Not in any auction.\\n   *   + Or, in the current auction.\\n   *   + Or, this name is not bided.\\n   *\\n   * Emits an event {LabelsListed}.\\n   *\\n   * Note: If the name is already listed, this method replaces with a new input value.\\n   *\\n   * @param ids The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function listNamesForAuction(bytes32 auctionId, uint256[] calldata ids, uint256[] calldata startingPrices) external;\\n\\n  /**\\n   * @dev Places a bid for a domain name.\\n   *\\n   * Requirements:\\n   * - The name is listed, or the auction is happening.\\n   * - The msg.value is larger than the current bid price or the auction starting price.\\n   *\\n   * Emits an event {BidPlaced}.\\n   *\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function placeBid(uint256 id) external payable;\\n\\n  /**\\n   * @dev Returns the highest bid and address of the bidder.\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function getAuction(uint256 id) external view returns (DomainAuction memory, uint256 beatPrice);\\n\\n  /**\\n   * @dev Bulk claims the bid name.\\n   *\\n   * Requirements:\\n   * - Must be called after ended time.\\n   * - The method caller can be anyone.\\n   *\\n   * @param ids The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function bulkClaimBidNames(uint256[] calldata ids) external returns (uint256[] memory claimedAts);\\n\\n  /**\\n   * @dev Returns the treasury.\\n   */\\n  function getTreasury() external view returns (address);\\n\\n  /**\\n   * @dev Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%.\\n   */\\n  function getBidGapRatio() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the treasury.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin\\n   *\\n   * Emits an event {TreasuryUpdated}.\\n   */\\n  function setTreasury(address payable) external;\\n\\n  /**\\n   * @dev Sets commission ratio. Value in range [0;100_00] is 0%-100%.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin\\n   *\\n   * Emits an event {BidGapRatioUpdated}.\\n   */\\n  function setBidGapRatio(uint256) external;\\n\\n  /**\\n   * @dev Returns RNSUnified contract.\\n   */\\n  function getRNSUnified() external view returns (INSUnified);\\n}\\n\",\"keccak256\":\"0x451e7a2f2e5c1c62e1b14ed011a879639a748e24fde0c1fcf27f691bb7946660\",\"license\":\"MIT\"},\"src/interfaces/INSUnified.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC721Metadata } from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport { IAccessControlEnumerable } from \\\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\\\";\\nimport { ModifyingIndicator } from \\\"../types/ModifyingIndicator.sol\\\";\\n\\ninterface INSUnified is IAccessControlEnumerable, IERC721Metadata {\\n  /// @dev Error: The provided token id is expired.\\n  error Expired();\\n  /// @dev Error: The provided token id is unexists.\\n  error Unexists();\\n  /// @dev Error: The provided id expiry is greater than parent id expiry.\\n  error ExceedParentExpiry();\\n  /// @dev Error: The provided name is unavailable for registration.\\n  error Unavailable();\\n  /// @dev Error: The sender lacks the necessary permissions.\\n  error Unauthorized();\\n  /// @dev Error: Missing controller role required for modification.\\n  error MissingControllerRole();\\n  /// @dev Error: Attempting to set an immutable field, which cannot be modified.\\n  error CannotSetImmutableField();\\n  /// @dev Error: Missing protected settler role required for modification.\\n  error MissingProtectedSettlerRole();\\n  /// @dev Error: Attempting to set an expiry time that is not larger than the previous one.\\n  error ExpiryTimeMustBeLargerThanTheOldOne();\\n  /// @dev Error: The provided name must be registered or is in a grace period.\\n  error NameMustBeRegisteredOrInGracePeriod();\\n\\n  /**\\n   * | Fields\\\\Idc | Modifying Indicator |\\n   * | ---------- | ------------------- |\\n   * | depth      | 0b00000001          |\\n   * | parentId   | 0b00000010          |\\n   * | label      | 0b00000100          |\\n   */\\n  struct ImmutableRecord {\\n    // The level-th of a domain.\\n    uint8 depth;\\n    // The node of parent token. Eg, parent node of vip.duke.ron equals to namehash('duke.ron')\\n    uint256 parentId;\\n    // The label of a domain. Eg, label is vip for domain vip.duke.ron\\n    string label;\\n  }\\n\\n  /**\\n   * | Fields\\\\Idc,Roles | Modifying Indicator | Controller | Protected setter | (Parent) Owner/Spender |\\n   * | ---------------- | ------------------- | ---------- | ---------------- | ---------------------- |\\n   * | resolver         | 0b00001000          | x          |                  | x                      |\\n   * | owner            | 0b00010000          | x          |                  | x                      |\\n   * | expiry           | 0b00100000          | x          |                  |                        |\\n   * | protected        | 0b01000000          |            | x                |                        |\\n   * Note: (Parent) Owner/Spender means parent owner or current owner or current token spender.\\n   */\\n  struct MutableRecord {\\n    // The resolver address.\\n    address resolver;\\n    // The record owner. This field must equal to the owner of token.\\n    address owner;\\n    // Expiry timestamp.\\n    uint64 expiry;\\n    // Flag indicating whether the token is protected or not.\\n    bool protected;\\n  }\\n\\n  struct Record {\\n    ImmutableRecord immut;\\n    MutableRecord mut;\\n  }\\n\\n  /// @dev Emitted when a base URI is updated.\\n  event BaseURIUpdated(address indexed operator, string newURI);\\n  /// @dev Emitted when the grace period for all domain is updated.\\n  event GracePeriodUpdated(address indexed operator, uint64 newGracePeriod);\\n\\n  /**\\n   * @dev Emitted when the record of node is updated.\\n   * @param indicator The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right\\n   * to left) needs to be updated.\\n   * @param record The updated fields.\\n   */\\n  event RecordUpdated(uint256 indexed node, ModifyingIndicator indicator, Record record);\\n\\n  /**\\n   * @dev Returns the controller role.\\n   * @notice Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}.\\n   */\\n  function CONTROLLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the protected setter role.\\n   * @notice Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`.\\n   */\\n  function PROTECTED_SETTLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the reservation role.\\n   * @notice Never expire for token owner has this role.\\n   */\\n  function RESERVATION_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the max expiry value.\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the name hash output of a domain.\\n   */\\n  function namehash(string memory domain) external pure returns (bytes32 node);\\n\\n  /**\\n   * @dev Returns true if the specified name is available for registration.\\n   * Note: Only available after passing the grace period.\\n   */\\n  function available(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the grace period in second(s).\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function getGracePeriod() external view returns (uint64);\\n\\n  /**\\n   * @dev Returns the total minted ids.\\n   * Note: Burning id will not affect `totalMinted`.\\n   */\\n  function totalMinted() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the grace period in second(s).\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function setGracePeriod(uint64) external;\\n\\n  /**\\n   * @dev Sets the base uri.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract owner.\\n   *\\n   */\\n  function setBaseURI(string calldata baseTokenURI) external;\\n\\n  /**\\n   * @dev Mints token for subnode.\\n   *\\n   * Requirements:\\n   * - The token must be available.\\n   * - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   *\\n   * @param parentId The parent node to mint or create subnode.\\n   * @param label The domain label. Eg, label is duke for domain duke.ron.\\n   * @param resolver The resolver address.\\n   * @param owner The token owner.\\n   * @param duration Duration in second(s) to expire. Leave 0 to set as parent.\\n   */\\n  function mint(uint256 parentId, string calldata label, address resolver, address owner, uint64 duration)\\n    external\\n    returns (uint64 expiryTime, uint256 id);\\n\\n  /**\\n   * @dev Returns all record of a domain.\\n   * Reverts if the token is non existent.\\n   */\\n  function getRecord(uint256 id) external view returns (Record memory record);\\n\\n  /**\\n   * @dev Returns the domain name of id.\\n   */\\n  function getDomain(uint256 id) external view returns (string memory domain);\\n\\n  /**\\n   * @dev Returns whether the requester is able to modify the record based on the updated index.\\n   * Note: This method strictly follows the permission of struct {MutableRecord}.\\n   */\\n  function canSetRecord(address requester, uint256 id, ModifyingIndicator indicator)\\n    external\\n    view\\n    returns (bool, bytes4 error);\\n\\n  /**\\n   * @dev Sets record of existing token. Update operation for {Record.mut}.\\n   *\\n   * Requirements:\\n   * - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setRecord(uint256 id, ModifyingIndicator indicator, MutableRecord calldata record) external;\\n\\n  /**\\n   * @dev Reclaims ownership. Update operation for {Record.mut.owner}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   * - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function reclaim(uint256 id, address owner) external;\\n\\n  /**\\n   * @dev Renews token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function renew(uint256 id, uint64 duration) external returns (uint64 expiry);\\n\\n  /**\\n   * @dev Sets expiry time for a token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setExpiry(uint256 id, uint64 expiry) external;\\n\\n  /**\\n   * @dev Sets the protected status of a list of ids. Update operation for {Record.mut.protected}.\\n   *\\n   * Requirements:\\n   * - The method caller must have protected setter role.\\n   *\\n   * Emits events {RecordUpdated}.\\n   */\\n  function bulkSetProtected(uint256[] calldata ids, bool protected) external;\\n}\\n\",\"keccak256\":\"0xaef1c58bb7c8688d6677a1c2739c0dc9e645ca5c64dd875be2f2b7a318a11406\",\"license\":\"MIT\"},\"src/libraries/LibEventRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nstruct EventRange {\\n  uint256 startedAt;\\n  uint256 endedAt;\\n}\\n\\nlibrary LibEventRange {\\n  /**\\n   * @dev Checks whether the event range is valid.\\n   */\\n  function valid(EventRange calldata range) internal pure returns (bool) {\\n    return range.startedAt <= range.endedAt;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current range is not yet started.\\n   */\\n  function isNotYetStarted(EventRange memory range) internal view returns (bool) {\\n    return block.timestamp < range.startedAt;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current range is ended or not.\\n   */\\n  function isEnded(EventRange memory range) internal view returns (bool) {\\n    return range.endedAt <= block.timestamp;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current block is in period.\\n   */\\n  function isInPeriod(EventRange memory range) internal view returns (bool) {\\n    return range.startedAt <= block.timestamp && block.timestamp < range.endedAt;\\n  }\\n}\\n\",\"keccak256\":\"0x95bf015c4245919cbcbcd810dd597fdb23eb4e58b62df8ef74b1c8c60a969bea\",\"license\":\"MIT\"},\"src/libraries/LibRNSDomain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nlibrary LibRNSDomain {\\n  /// @dev Value equals to namehash('ron')\\n  uint256 internal constant RON_ID = 0xba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d688;\\n  /// @dev Value equals to namehash('addr.reverse')\\n  uint256 internal constant ADDR_REVERSE_ID = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n  /**\\n   * @dev Calculate the corresponding id given parentId and label.\\n   */\\n  function toId(uint256 parentId, string memory label) internal pure returns (uint256 id) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(0x0, parentId)\\n      mstore(0x20, keccak256(add(label, 32), mload(label)))\\n      id := keccak256(0x0, 64)\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates the hash of the label.\\n   */\\n  function hashLabel(string memory label) internal pure returns (bytes32 hashed) {\\n    assembly (\\\"memory-safe\\\") {\\n      hashed := keccak256(add(label, 32), mload(label))\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculate the RNS namehash of a str.\\n   */\\n  function namehash(string memory str) internal pure returns (bytes32 hashed) {\\n    // notice: this method is case-sensitive, ensure the string is lowercased before calling this method\\n    assembly (\\\"memory-safe\\\") {\\n      // load str length\\n      let len := mload(str)\\n      // returns bytes32(0x0) if length is zero\\n      if iszero(iszero(len)) {\\n        let hashedLen\\n        // compute pointer to str[0]\\n        let head := add(str, 32)\\n        // compute pointer to str[length - 1]\\n        let tail := add(head, sub(len, 1))\\n        // cleanup dirty bytes if contains any\\n        mstore(0x0, 0)\\n        // loop backwards from `tail` to `head`\\n        for { let i := tail } iszero(lt(i, head)) { i := sub(i, 1) } {\\n          // check if `i` is `head`\\n          let isHead := eq(i, head)\\n          // check if `str[i-1]` is \\\".\\\"\\n          // `0x2e` == bytes1(\\\".\\\")\\n          let isDotNext := eq(shr(248, mload(sub(i, 1))), 0x2e)\\n          if or(isHead, isDotNext) {\\n            // size = distance(length, i) - hashedLength + 1\\n            let size := add(sub(sub(tail, i), hashedLen), 1)\\n            mstore(0x20, keccak256(i, size))\\n            mstore(0x0, keccak256(0x0, 64))\\n            // skip \\\".\\\" thereby + 1\\n            hashedLen := add(hashedLen, add(size, 1))\\n          }\\n        }\\n      }\\n      hashed := mload(0x0)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x715029b2b420c6ec00bc1f939b837acf45d247fde8426089575b0e7b5e84518b\",\"license\":\"MIT\"},\"src/libraries/math/LibSafeRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary LibSafeRange {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    unchecked {\\n      c = a + b;\\n      if (c < a) return type(uint256).max;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns value of a + b; in case result is larger than upperbound, upperbound is returned.\\n   */\\n  function addWithUpperbound(uint256 a, uint256 b, uint256 ceil) internal pure returns (uint256 c) {\\n    if (a > ceil || b > ceil) return ceil;\\n    c = add(a, b);\\n    if (c > ceil) return ceil;\\n  }\\n}\\n\",\"keccak256\":\"0x12cf5f592a2d80b9c1b0ea11b8fe2b3ed42fc6d62303ba667edc56464baa8810\",\"license\":\"MIT\"},\"src/libraries/transfers/RONTransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { Strings } from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n/**\\n * @title RONTransferHelper\\n */\\nlibrary RONTransferHelper {\\n  using Strings for *;\\n\\n  /**\\n   * @dev Transfers RON and wraps result for the method caller to a recipient.\\n   */\\n  function safeTransfer(address payable _to, uint256 _value) internal {\\n    bool _success = send(_to, _value);\\n    if (!_success) {\\n      revert(\\n        string.concat(\\\"TransferHelper: could not transfer RON to \\\", _to.toHexString(), \\\" value \\\", _value.toHexString())\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns whether the call was success.\\n   * Note: this function should use with the `ReentrancyGuard`.\\n   */\\n  function send(address payable _to, uint256 _value) internal returns (bool _success) {\\n    (_success,) = _to.call{ value: _value }(new bytes(0));\\n  }\\n}\\n\",\"keccak256\":\"0x733e60374ee0a33d0da2ee24976b893ca6b6d9764243b175e1ac8025240394da\",\"license\":\"MIT\"},\"src/types/ModifyingIndicator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ntype ModifyingIndicator is uint256;\\n\\nusing { hasAny } for ModifyingIndicator global;\\nusing { or as | } for ModifyingIndicator global;\\nusing { and as & } for ModifyingIndicator global;\\nusing { eq as == } for ModifyingIndicator global;\\nusing { not as ~ } for ModifyingIndicator global;\\nusing { xor as ^ } for ModifyingIndicator global;\\nusing { neq as != } for ModifyingIndicator global;\\n\\n/// @dev Indicator for modifying immutable fields: Depth, ParentId, Label. See struct {INSUnified.ImmutableRecord}.\\nModifyingIndicator constant IMMUTABLE_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x7);\\n\\n/// @dev Indicator for modifying user fields: Resolver, Owner. See struct {INSUnified.MutableRecord}.\\nModifyingIndicator constant USER_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x18);\\n\\n/// @dev Indicator when modifying all of the fields in {ModifyingField}.\\nModifyingIndicator constant ALL_FIELDS_INDICATOR = ModifyingIndicator.wrap(type(uint256).max);\\n\\nfunction eq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return ModifyingIndicator.unwrap(self) == ModifyingIndicator.unwrap(other);\\n}\\n\\nfunction neq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return !eq(self, other);\\n}\\n\\nfunction xor(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) ^ ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction not(ModifyingIndicator self) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(~ModifyingIndicator.unwrap(self));\\n}\\n\\nfunction or(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) | ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction and(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) & ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction hasAny(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return self & other != ModifyingIndicator.wrap(0);\\n}\\n\",\"keccak256\":\"0x2e42fbba358c470ff6b57268367d248f0e2fcf8d7142d762688f7aef5efae7ee\",\"license\":\"MIT\"}},\"version\":1}",
  "nonce": 182592,
  "numDeployments": 3,
  "storageLayout": {
    "storage": [
      {
        "astId": 49702,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 49705,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 48175,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)48170_storage)"
      },
      {
        "astId": 48485,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_roleMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(AddressSet)54054_storage)"
      },
      {
        "astId": 58721,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "____gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 58725,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_rnsUnified",
        "offset": 0,
        "slot": "53",
        "type": "t_contract(INSUnified)65048"
      },
      {
        "astId": 58731,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_auctionRange",
        "offset": 0,
        "slot": "54",
        "type": "t_mapping(t_bytes32,t_struct(EventRange)65968_storage)"
      },
      {
        "astId": 58737,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_domainAuction",
        "offset": 0,
        "slot": "55",
        "type": "t_mapping(t_uint256,t_struct(DomainAuction)64221_storage)"
      },
      {
        "astId": 58740,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_treasury",
        "offset": 0,
        "slot": "56",
        "type": "t_address_payable"
      },
      {
        "astId": 58743,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_bidGapRatio",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 58747,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_reserved",
        "offset": 0,
        "slot": "58",
        "type": "t_struct(BitMap)53598_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(INSUnified)65048": {
        "encoding": "inplace",
        "label": "contract INSUnified",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(AddressSet)54054_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)54054_storage"
      },
      "t_mapping(t_bytes32,t_struct(EventRange)65968_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EventRange)",
        "numberOfBytes": "32",
        "value": "t_struct(EventRange)65968_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)48170_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)48170_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(DomainAuction)64221_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct INSAuction.DomainAuction)",
        "numberOfBytes": "32",
        "value": "t_struct(DomainAuction)64221_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)54054_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 54053,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)53739_storage"
          }
        ]
      },
      "t_struct(Bid)64213_storage": {
        "encoding": "inplace",
        "label": "struct INSAuction.Bid",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 64206,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 64208,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 64210,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 64212,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "claimedAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(BitMap)53598_storage": {
        "encoding": "inplace",
        "label": "struct BitMaps.BitMap",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 53597,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_data",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)"
          }
        ]
      },
      "t_struct(DomainAuction)64221_storage": {
        "encoding": "inplace",
        "label": "struct INSAuction.DomainAuction",
        "numberOfBytes": "192",
        "members": [
          {
            "astId": 64215,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "auctionId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 64217,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "startingPrice",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 64220,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "bid",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Bid)64213_storage"
          }
        ]
      },
      "t_struct(EventRange)65968_storage": {
        "encoding": "inplace",
        "label": "struct EventRange",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 65965,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "startedAt",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 65967,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "endedAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(RoleData)48170_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 48167,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 48169,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_struct(Set)53739_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 53734,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 53738,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1698122937,
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "createAuctionEvent((uint256,uint256))": {
        "notice": "Please use the method `setAuctionNames` to list all the reserved names."
      }
    }
  }
}