{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "int32",
          "name": "expo1",
          "type": "int32"
        },
        {
          "internalType": "int32",
          "name": "expo2",
          "type": "int32"
        },
        {
          "internalType": "int64",
          "name": "price1",
          "type": "int64"
        }
      ],
      "name": "ErrComputedPriceTooLarge",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "int32",
          "name": "expo",
          "type": "int32"
        }
      ],
      "name": "ErrExponentTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExceedAuctionDomainExpiry",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidArrayLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "PeriodNumOverflowedUint16",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenewalFeeIsNotOverriden",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint192",
          "name": "ratio",
          "type": "uint192"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "period",
          "type": "uint64"
        }
      ],
      "name": "DomainPriceScaleRuleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "labelHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "proofHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "setType",
          "type": "uint256"
        }
      ],
      "name": "DomainPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "maxLength",
          "type": "uint256"
        }
      ],
      "name": "MaxRenewalFeeLengthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IPyth",
          "name": "pyth",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxAcceptableAge",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "pythIdForRONUSD",
          "type": "bytes32"
        }
      ],
      "name": "PythOracleConfigUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "labelLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "renewalFee",
          "type": "uint256"
        }
      ],
      "name": "RenewalFeeByLengthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "labelHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "inverseRenewalFee",
          "type": "uint256"
        }
      ],
      "name": "RenewalFeeOverridingUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "name": "TaxRatioUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USD_DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "lbHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "usdPrices",
          "type": "uint256[]"
        }
      ],
      "name": "bulkOverrideRenewalFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "lbHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ronPrices",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proofHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "setTypes",
          "type": "uint256[]"
        }
      ],
      "name": "bulkSetDomainPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "lbHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ronPrices",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proofHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "setTypes",
          "type": "uint256[]"
        }
      ],
      "name": "bulkTrySetDomainPrice",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "updated",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ronWei",
          "type": "uint256"
        }
      ],
      "name": "convertRONToUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "usdWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usdWei",
          "type": "uint256"
        }
      ],
      "name": "convertUSDToRON",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ronWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "getDomainPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "usdPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ronPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "getOverriddenRenewalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "usdFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPythOracleConfig",
      "outputs": [
        {
          "internalType": "contract IPyth",
          "name": "pyth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAcceptableAge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "pythIdForRONUSD",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "getRenewalFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "usd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ron",
              "type": "uint256"
            }
          ],
          "internalType": "struct INSDomainPrice.UnitPrice",
          "name": "basePrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "usd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ron",
              "type": "uint256"
            }
          ],
          "internalType": "struct INSDomainPrice.UnitPrice",
          "name": "tax",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRenewalFeeByLengths",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "labelLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "internalType": "struct INSDomainPrice.RenewalFee[]",
          "name": "renewalFees",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getScaleDownRuleForDomainPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint192",
              "name": "ratio",
              "type": "uint192"
            },
            {
              "internalType": "uint64",
              "name": "period",
              "type": "uint64"
            }
          ],
          "internalType": "struct PeriodScaler",
          "name": "scaleRule",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTaxRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "labelLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "internalType": "struct INSDomainPrice.RenewalFee[]",
          "name": "renewalFees",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "taxRatio",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint192",
              "name": "ratio",
              "type": "uint192"
            },
            {
              "internalType": "uint64",
              "name": "period",
              "type": "uint64"
            }
          ],
          "internalType": "struct PeriodScaler",
          "name": "domainPriceScaleRule",
          "type": "tuple"
        },
        {
          "internalType": "contract IPyth",
          "name": "pyth",
          "type": "address"
        },
        {
          "internalType": "contract INSAuction",
          "name": "auction",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAcceptableAge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "pythIdForRONUSD",
          "type": "bytes32"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPyth",
          "name": "pyth",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAcceptableAge",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "pythIdForRONUSD",
          "type": "bytes32"
        }
      ],
      "name": "setPythOracleConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "labelLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "internalType": "struct INSDomainPrice.RenewalFee[]",
          "name": "renewalFees",
          "type": "tuple[]"
        }
      ],
      "name": "setRenewalFeeByLengths",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint192",
              "name": "ratio",
              "type": "uint192"
            },
            {
              "internalType": "uint64",
              "name": "period",
              "type": "uint64"
            }
          ],
          "internalType": "struct PeriodScaler",
          "name": "scaleRule",
          "type": "tuple"
        }
      ],
      "name": "setScaleDownRuleForDomainPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "name": "setTaxRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "address": "0xa45Dd6a8DE1bCcb4C390f0504cC440B8Ef2a5b05",
  "args": "0x",
  "ast": {
    "absolutePath": "src/RNSDomainPrice.sol",
    "id": 60776,
    "exportedSymbols": {
      "AccessControlEnumerable": [
        48591
      ],
      "INSAuction": [
        64365
      ],
      "INSDomainPrice": [
        64629
      ],
      "INSUnified": [
        65002
      ],
      "IPyth": [
        54460
      ],
      "Initializable": [
        49864
      ],
      "LibPeriodScaler": [
        66715
      ],
      "LibRNSDomain": [
        66069
      ],
      "LibSafeRange": [
        66613
      ],
      "LibString": [
        66351
      ],
      "Math": [
        53173
      ],
      "PeriodScaler": [
        66624
      ],
      "PythConverter": [
        67404
      ],
      "PythStructs": [
        54503
      ],
      "RNSDomainPrice": [
        60775
      ],
      "TimestampWrapper": [
        66547
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:13046:84",
    "nodes": [
      {
        "id": 59609,
        "nodeType": "PragmaDirective",
        "src": "32:24:84",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 59611,
        "nodeType": "ImportDirective",
        "src": "58:86:84",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 49865,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59610,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49864,
              "src": "67:13:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59613,
        "nodeType": "ImportDirective",
        "src": "145:101:84",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 48592,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59612,
              "name": "AccessControlEnumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48591,
              "src": "154:23:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59615,
        "nodeType": "ImportDirective",
        "src": "247:67:84",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 53174,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59614,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53173,
              "src": "256:4:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59618,
        "nodeType": "ImportDirective",
        "src": "315:60:84",
        "nodes": [],
        "absolutePath": "lib/pyth-sdk-solidity/IPyth.sol",
        "file": "@pythnetwork/IPyth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 54461,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59616,
              "name": "IPyth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54460,
              "src": "324:5:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59617,
              "name": "PythStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54503,
              "src": "331:11:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59620,
        "nodeType": "ImportDirective",
        "src": "376:57:84",
        "nodes": [],
        "absolutePath": "src/interfaces/INSUnified.sol",
        "file": "./interfaces/INSUnified.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 65003,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59619,
              "name": "INSUnified",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65002,
              "src": "385:10:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59622,
        "nodeType": "ImportDirective",
        "src": "434:57:84",
        "nodes": [],
        "absolutePath": "src/interfaces/INSAuction.sol",
        "file": "./interfaces/INSAuction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 64366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59621,
              "name": "INSAuction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64365,
              "src": "443:10:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59624,
        "nodeType": "ImportDirective",
        "src": "492:65:84",
        "nodes": [],
        "absolutePath": "src/interfaces/INSDomainPrice.sol",
        "file": "./interfaces/INSDomainPrice.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 64630,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59623,
              "name": "INSDomainPrice",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64629,
              "src": "501:14:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59628,
        "nodeType": "ImportDirective",
        "src": "558:94:84",
        "nodes": [],
        "absolutePath": "src/libraries/math/PeriodScalingUtils.sol",
        "file": "./libraries/math/PeriodScalingUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 66716,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59625,
              "name": "PeriodScaler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66624,
              "src": "567:12:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59626,
              "name": "LibPeriodScaler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66715,
              "src": "581:15:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 59627,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53173,
              "src": "598:4:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59630,
        "nodeType": "ImportDirective",
        "src": "653:73:84",
        "nodes": [],
        "absolutePath": "src/libraries/TimestampWrapperUtils.sol",
        "file": "./libraries/TimestampWrapperUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 66548,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59629,
              "name": "TimestampWrapper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66547,
              "src": "662:16:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59632,
        "nodeType": "ImportDirective",
        "src": "727:65:84",
        "nodes": [],
        "absolutePath": "src/libraries/math/LibSafeRange.sol",
        "file": "./libraries/math/LibSafeRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 66614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59631,
              "name": "LibSafeRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66613,
              "src": "736:12:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59634,
        "nodeType": "ImportDirective",
        "src": "793:54:84",
        "nodes": [],
        "absolutePath": "src/libraries/LibString.sol",
        "file": "./libraries/LibString.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 66352,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59633,
              "name": "LibString",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66351,
              "src": "802:9:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59636,
        "nodeType": "ImportDirective",
        "src": "848:60:84",
        "nodes": [],
        "absolutePath": "src/libraries/LibRNSDomain.sol",
        "file": "./libraries/LibRNSDomain.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 66070,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59635,
              "name": "LibRNSDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66069,
              "src": "857:12:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59638,
        "nodeType": "ImportDirective",
        "src": "909:67:84",
        "nodes": [],
        "absolutePath": "src/libraries/pyth/PythConverter.sol",
        "file": "./libraries/pyth/PythConverter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60776,
        "sourceUnit": 67405,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59637,
              "name": "PythConverter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67404,
              "src": "918:13:84",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60775,
        "nodeType": "ContractDefinition",
        "src": "978:12099:84",
        "nodes": [
          {
            "id": 59646,
            "nodeType": "UsingForDirective",
            "src": "1064:22:84",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59645,
              "name": "LibString",
              "nameLocations": [
                "1070:9:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66351,
              "src": "1070:9:84"
            }
          },
          {
            "id": 59649,
            "nodeType": "UsingForDirective",
            "src": "1089:30:84",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59647,
              "name": "LibRNSDomain",
              "nameLocations": [
                "1095:12:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66069,
              "src": "1095:12:84"
            },
            "typeName": {
              "id": 59648,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1112:6:84",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 59653,
            "nodeType": "UsingForDirective",
            "src": "1122:39:84",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59650,
              "name": "LibPeriodScaler",
              "nameLocations": [
                "1128:15:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66715,
              "src": "1128:15:84"
            },
            "typeName": {
              "id": 59652,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59651,
                "name": "PeriodScaler",
                "nameLocations": [
                  "1148:12:84"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66624,
                "src": "1148:12:84"
              },
              "referencedDeclaration": 66624,
              "src": "1148:12:84",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage_ptr",
                "typeString": "struct PeriodScaler"
              }
            }
          },
          {
            "id": 59657,
            "nodeType": "UsingForDirective",
            "src": "1164:42:84",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59654,
              "name": "PythConverter",
              "nameLocations": [
                "1170:13:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67404,
              "src": "1170:13:84"
            },
            "typeName": {
              "id": 59656,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59655,
                "name": "PythStructs.Price",
                "nameLocations": [
                  "1188:11:84",
                  "1200:5:84"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54493,
                "src": "1188:17:84"
              },
              "referencedDeclaration": 54493,
              "src": "1188:17:84",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Price_$54493_storage_ptr",
                "typeString": "struct PythStructs.Price"
              }
            }
          },
          {
            "id": 59661,
            "nodeType": "VariableDeclaration",
            "src": "1243:39:84",
            "nodes": [],
            "baseFunctions": [
              64628
            ],
            "constant": true,
            "documentation": {
              "id": 59658,
              "nodeType": "StructuredDocumentation",
              "src": "1210:30:84",
              "text": "@inheritdoc INSDomainPrice"
            },
            "functionSelector": "2f6ee695",
            "mutability": "constant",
            "name": "USD_DECIMALS",
            "nameLocation": "1265:12:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 59659,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1243:5:84",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 59660,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1280:2:84",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "id": 59665,
            "nodeType": "VariableDeclaration",
            "src": "1319:46:84",
            "nodes": [],
            "baseFunctions": [
              64622
            ],
            "constant": true,
            "documentation": {
              "id": 59662,
              "nodeType": "StructuredDocumentation",
              "src": "1286:30:84",
              "text": "@inheritdoc INSDomainPrice"
            },
            "functionSelector": "4c255c97",
            "mutability": "constant",
            "name": "MAX_PERCENTAGE",
            "nameLocation": "1342:14:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 59663,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1319:6:84",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3130305f3030",
              "id": 59664,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1359:6:84",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "100_00"
            },
            "visibility": "public"
          },
          {
            "id": 59671,
            "nodeType": "VariableDeclaration",
            "src": "1402:66:84",
            "nodes": [],
            "baseFunctions": [
              64616
            ],
            "constant": true,
            "documentation": {
              "id": 59666,
              "nodeType": "StructuredDocumentation",
              "src": "1369:30:84",
              "text": "@inheritdoc INSDomainPrice"
            },
            "functionSelector": "f5b541a6",
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "1426:13:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 59667,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1402:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 59669,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1452:15:84",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 59668,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1442:9:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 59670,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1442:26:84",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59676,
            "nodeType": "VariableDeclaration",
            "src": "1508:27:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59672,
              "nodeType": "StructuredDocumentation",
              "src": "1473:32:84",
              "text": "@dev Gap for upgradeability."
            },
            "mutability": "mutable",
            "name": "____gap",
            "nameLocation": "1528:7:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 59673,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1508:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 59675,
              "length": {
                "hexValue": "3530",
                "id": 59674,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1516:2:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1508:11:84",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 59680,
            "nodeType": "VariableDeclaration",
            "src": "1572:20:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59677,
              "nodeType": "StructuredDocumentation",
              "src": "1540:29:84",
              "text": "@dev Pyth oracle contract"
            },
            "mutability": "mutable",
            "name": "_pyth",
            "nameLocation": "1587:5:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPyth_$54460",
              "typeString": "contract IPyth"
            },
            "typeName": {
              "id": 59679,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59678,
                "name": "IPyth",
                "nameLocations": [
                  "1572:5:84"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54460,
                "src": "1572:5:84"
              },
              "referencedDeclaration": 54460,
              "src": "1572:5:84",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPyth_$54460",
                "typeString": "contract IPyth"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59684,
            "nodeType": "VariableDeclaration",
            "src": "1627:28:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59681,
              "nodeType": "StructuredDocumentation",
              "src": "1596:28:84",
              "text": "@dev RNSAuction contract"
            },
            "mutability": "mutable",
            "name": "_auction",
            "nameLocation": "1647:8:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INSAuction_$64365",
              "typeString": "contract INSAuction"
            },
            "typeName": {
              "id": 59683,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59682,
                "name": "INSAuction",
                "nameLocations": [
                  "1627:10:84"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64365,
                "src": "1627:10:84"
              },
              "referencedDeclaration": 64365,
              "src": "1627:10:84",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INSAuction_$64365",
                "typeString": "contract INSAuction"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59687,
            "nodeType": "VariableDeclaration",
            "src": "1728:26:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59685,
              "nodeType": "StructuredDocumentation",
              "src": "1659:66:84",
              "text": "@dev Extra fee for renewals based on the current domain price."
            },
            "mutability": "mutable",
            "name": "_taxRatio",
            "nameLocation": "1745:9:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59686,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1728:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59690,
            "nodeType": "VariableDeclaration",
            "src": "1799:30:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59688,
              "nodeType": "StructuredDocumentation",
              "src": "1758:38:84",
              "text": "@dev Max length of the renewal fee"
            },
            "mutability": "mutable",
            "name": "_rnfMaxLength",
            "nameLocation": "1816:13:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59689,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1799:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59693,
            "nodeType": "VariableDeclaration",
            "src": "1891:34:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59691,
              "nodeType": "StructuredDocumentation",
              "src": "1833:55:84",
              "text": "@dev Max acceptable age of the price oracle request"
            },
            "mutability": "mutable",
            "name": "_maxAcceptableAge",
            "nameLocation": "1908:17:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59692,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1891:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59696,
            "nodeType": "VariableDeclaration",
            "src": "1974:33:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59694,
              "nodeType": "StructuredDocumentation",
              "src": "1929:42:84",
              "text": "@dev Price feed ID on Pyth for RON/USD"
            },
            "mutability": "mutable",
            "name": "_pythIdForRONUSD",
            "nameLocation": "1991:16:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 59695,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1974:7:84",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59700,
            "nodeType": "VariableDeclaration",
            "src": "2073:35:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59697,
              "nodeType": "StructuredDocumentation",
              "src": "2011:59:84",
              "text": "@dev The percentage scale from domain price each period"
            },
            "mutability": "mutable",
            "name": "_dpDownScaler",
            "nameLocation": "2095:13:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage",
              "typeString": "struct PeriodScaler"
            },
            "typeName": {
              "id": 59699,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59698,
                "name": "PeriodScaler",
                "nameLocations": [
                  "2073:12:84"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66624,
                "src": "2073:12:84"
              },
              "referencedDeclaration": 66624,
              "src": "2073:12:84",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage_ptr",
                "typeString": "struct PeriodScaler"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59705,
            "nodeType": "VariableDeclaration",
            "src": "2173:59:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59701,
              "nodeType": "StructuredDocumentation",
              "src": "2113:57:84",
              "text": "@dev Mapping from domain length => renewal fee in USD"
            },
            "mutability": "mutable",
            "name": "_rnFee",
            "nameLocation": "2226:6:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 59704,
              "keyName": "length",
              "keyNameLocation": "2189:6:84",
              "keyType": {
                "id": 59702,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2181:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2173:43:84",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "usdPrice",
              "valueNameLocation": "2207:8:84",
              "valueType": {
                "id": 59703,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2199:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59711,
            "nodeType": "VariableDeclaration",
            "src": "2288:65:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59706,
              "nodeType": "StructuredDocumentation",
              "src": "2236:49:84",
              "text": "@dev Mapping from name => domain price in USD"
            },
            "mutability": "mutable",
            "name": "_dp",
            "nameLocation": "2350:3:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TimestampWrapper_$66547_storage_$",
              "typeString": "mapping(bytes32 => struct TimestampWrapper)"
            },
            "typeName": {
              "id": 59710,
              "keyName": "lbHash",
              "keyNameLocation": "2304:6:84",
              "keyType": {
                "id": 59707,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2296:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2288:52:84",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TimestampWrapper_$66547_storage_$",
                "typeString": "mapping(bytes32 => struct TimestampWrapper)"
              },
              "valueName": "usdPrice",
              "valueNameLocation": "2331:8:84",
              "valueType": {
                "id": 59709,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 59708,
                  "name": "TimestampWrapper",
                  "nameLocations": [
                    "2314:16:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66547,
                  "src": "2314:16:84"
                },
                "referencedDeclaration": 66547,
                "src": "2314:16:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                  "typeString": "struct TimestampWrapper"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59716,
            "nodeType": "VariableDeclaration",
            "src": "2432:69:84",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59712,
              "nodeType": "StructuredDocumentation",
              "src": "2357:72:84",
              "text": "@dev Mapping from name => inverse bitwise of renewal fee overriding."
            },
            "mutability": "mutable",
            "name": "_rnFeeOverriding",
            "nameLocation": "2485:16:84",
            "scope": 60775,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 59715,
              "keyName": "lbHash",
              "keyNameLocation": "2448:6:84",
              "keyType": {
                "id": 59713,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2440:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2432:43:84",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "usdPrice",
              "valueNameLocation": "2466:8:84",
              "valueType": {
                "id": 59714,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2458:7:84",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 59723,
            "nodeType": "FunctionDefinition",
            "src": "2506:55:84",
            "nodes": [],
            "body": {
              "id": 59722,
              "nodeType": "Block",
              "src": "2528:33:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59719,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49845,
                      "src": "2534:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2534:22:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59721,
                  "nodeType": "ExpressionStatement",
                  "src": "2534:22:84"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:2:84"
            },
            "returnParameters": {
              "id": 59718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:0:84"
            },
            "scope": 60775,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59808,
            "nodeType": "FunctionDefinition",
            "src": "2565:776:84",
            "nodes": [],
            "body": {
              "id": 59807,
              "nodeType": "Block",
              "src": "2871:470:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59753
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59753,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2885:6:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 59807,
                      "src": "2877:14:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59752,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2877:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59756,
                  "initialValue": {
                    "expression": {
                      "id": 59754,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59728,
                      "src": "2894:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 59755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2904:6:84",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2894:16:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2877:33:84"
                },
                {
                  "assignments": [
                    59758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59758,
                      "mutability": "mutable",
                      "name": "operatorRole",
                      "nameLocation": "2924:12:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 59807,
                      "src": "2916:20:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 59757,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2916:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59760,
                  "initialValue": {
                    "id": 59759,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59671,
                    "src": "2939:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2916:36:84"
                },
                {
                  "body": {
                    "id": 59778,
                    "nodeType": "Block",
                    "src": "2988:93:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 59768,
                              "name": "operatorRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59758,
                              "src": "3007:12:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 59769,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59728,
                                "src": "3021:9:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 59771,
                              "indexExpression": {
                                "id": 59770,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59762,
                                "src": "3031:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3021:12:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 59767,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48374,
                            "src": "2996:10:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 59772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2996:38:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59773,
                        "nodeType": "ExpressionStatement",
                        "src": "2996:38:84"
                      },
                      {
                        "id": 59777,
                        "nodeType": "UncheckedBlock",
                        "src": "3043:32:84",
                        "statements": [
                          {
                            "expression": {
                              "id": 59775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "3063:3:84",
                              "subExpression": {
                                "id": 59774,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59762,
                                "src": "3065:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59776,
                            "nodeType": "ExpressionStatement",
                            "src": "3063:3:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59764,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59762,
                      "src": "2975:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 59765,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59753,
                      "src": "2979:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2975:10:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59779,
                  "initializationExpression": {
                    "assignments": [
                      59762
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59762,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2972:1:84",
                        "nodeType": "VariableDeclaration",
                        "scope": 59779,
                        "src": "2964:9:84",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 59761,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2964:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 59763,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2964:9:84"
                  },
                  "nodeType": "ForStatement",
                  "src": "2959:122:84"
                },
                {
                  "expression": {
                    "id": 59782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59780,
                      "name": "_auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59684,
                      "src": "3086:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSAuction_$64365",
                        "typeString": "contract INSAuction"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59781,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59743,
                      "src": "3097:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSAuction_$64365",
                        "typeString": "contract INSAuction"
                      }
                    },
                    "src": "3086:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSAuction_$64365",
                      "typeString": "contract INSAuction"
                    }
                  },
                  "id": 59783,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:18:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59785,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48178,
                        "src": "3121:18:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59786,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59725,
                        "src": "3141:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59784,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48374,
                      "src": "3110:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 59787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3110:37:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59788,
                  "nodeType": "ExpressionStatement",
                  "src": "3110:37:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59790,
                        "name": "renewalFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59732,
                        "src": "3177:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct INSDomainPrice.RenewalFee calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct INSDomainPrice.RenewalFee calldata[] calldata"
                        }
                      ],
                      "id": 59789,
                      "name": "_setRenewalFeeByLengths",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60700,
                      "src": "3153:23:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct INSDomainPrice.RenewalFee calldata[] calldata)"
                      }
                    },
                    "id": 59791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:36:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59792,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:36:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59794,
                        "name": "taxRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59734,
                        "src": "3208:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59793,
                      "name": "_setTaxRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60595,
                      "src": "3195:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 59795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3195:22:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59796,
                  "nodeType": "ExpressionStatement",
                  "src": "3195:22:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59798,
                        "name": "domainPriceScaleRule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59737,
                        "src": "3248:20:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                          "typeString": "struct PeriodScaler calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                          "typeString": "struct PeriodScaler calldata"
                        }
                      ],
                      "id": 59797,
                      "name": "_setDomainPriceScaleRule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60616,
                      "src": "3223:24:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PeriodScaler_$66624_calldata_ptr_$returns$__$",
                        "typeString": "function (struct PeriodScaler calldata)"
                      }
                    },
                    "id": 59799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:46:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59800,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:46:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59802,
                        "name": "pyth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59740,
                        "src": "3296:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        }
                      },
                      {
                        "id": 59803,
                        "name": "maxAcceptableAge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59745,
                        "src": "3302:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59804,
                        "name": "pythIdForRONUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59747,
                        "src": "3320:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 59801,
                      "name": "_setPythOracleConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60732,
                      "src": "3275:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPyth_$54460_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (contract IPyth,uint256,bytes32)"
                      }
                    },
                    "id": 59805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3275:61:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59806,
                  "nodeType": "ExpressionStatement",
                  "src": "3275:61:84"
                }
              ]
            },
            "functionSelector": "d40ed58c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59750,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59749,
                  "name": "initializer",
                  "nameLocations": [
                    "2859:11:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49766,
                  "src": "2859:11:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "2859:11:84"
              }
            ],
            "name": "initialize",
            "nameLocation": "2574:10:84",
            "parameters": {
              "id": 59748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59725,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "2598:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2590:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59728,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "2628:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2609:28:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59726,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2609:7:84",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 59727,
                    "nodeType": "ArrayTypeName",
                    "src": "2609:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59732,
                  "mutability": "mutable",
                  "name": "renewalFees",
                  "nameLocation": "2665:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2643:33:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct INSDomainPrice.RenewalFee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59730,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59729,
                        "name": "RenewalFee",
                        "nameLocations": [
                          "2643:10:84"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 64382,
                        "src": "2643:10:84"
                      },
                      "referencedDeclaration": 64382,
                      "src": "2643:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RenewalFee_$64382_storage_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee"
                      }
                    },
                    "id": 59731,
                    "nodeType": "ArrayTypeName",
                    "src": "2643:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_storage_$dyn_storage_ptr",
                      "typeString": "struct INSDomainPrice.RenewalFee[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59734,
                  "mutability": "mutable",
                  "name": "taxRatio",
                  "nameLocation": "2690:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2682:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59737,
                  "mutability": "mutable",
                  "name": "domainPriceScaleRule",
                  "nameLocation": "2726:20:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2704:42:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                    "typeString": "struct PeriodScaler"
                  },
                  "typeName": {
                    "id": 59736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59735,
                      "name": "PeriodScaler",
                      "nameLocations": [
                        "2704:12:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66624,
                      "src": "2704:12:84"
                    },
                    "referencedDeclaration": 66624,
                    "src": "2704:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage_ptr",
                      "typeString": "struct PeriodScaler"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59740,
                  "mutability": "mutable",
                  "name": "pyth",
                  "nameLocation": "2758:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2752:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPyth_$54460",
                    "typeString": "contract IPyth"
                  },
                  "typeName": {
                    "id": 59739,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59738,
                      "name": "IPyth",
                      "nameLocations": [
                        "2752:5:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54460,
                      "src": "2752:5:84"
                    },
                    "referencedDeclaration": 54460,
                    "src": "2752:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPyth_$54460",
                      "typeString": "contract IPyth"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59743,
                  "mutability": "mutable",
                  "name": "auction",
                  "nameLocation": "2779:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2768:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSAuction_$64365",
                    "typeString": "contract INSAuction"
                  },
                  "typeName": {
                    "id": 59742,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59741,
                      "name": "INSAuction",
                      "nameLocations": [
                        "2768:10:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64365,
                      "src": "2768:10:84"
                    },
                    "referencedDeclaration": 64365,
                    "src": "2768:10:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSAuction_$64365",
                      "typeString": "contract INSAuction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59745,
                  "mutability": "mutable",
                  "name": "maxAcceptableAge",
                  "nameLocation": "2800:16:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2792:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59747,
                  "mutability": "mutable",
                  "name": "pythIdForRONUSD",
                  "nameLocation": "2830:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59808,
                  "src": "2822:23:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59746,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2584:265:84"
            },
            "returnParameters": {
              "id": 59751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2871:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59825,
            "nodeType": "FunctionDefinition",
            "src": "3389:179:84",
            "nodes": [],
            "body": {
              "id": 59824,
              "nodeType": "Block",
              "src": "3506:62:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 59819,
                        "name": "_pyth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59680,
                        "src": "3520:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        }
                      },
                      {
                        "id": 59820,
                        "name": "_maxAcceptableAge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59693,
                        "src": "3527:17:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59821,
                        "name": "_pythIdForRONUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59696,
                        "src": "3546:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 59822,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3519:44:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IPyth_$54460_$_t_uint256_$_t_bytes32_$",
                      "typeString": "tuple(contract IPyth,uint256,bytes32)"
                    }
                  },
                  "functionReturnParameters": 59818,
                  "id": 59823,
                  "nodeType": "Return",
                  "src": "3512:51:84"
                }
              ]
            },
            "baseFunctions": [
              64464
            ],
            "documentation": {
              "id": 59809,
              "nodeType": "StructuredDocumentation",
              "src": "3345:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "2be09ecc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPythOracleConfig",
            "nameLocation": "3398:19:84",
            "parameters": {
              "id": 59810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3417:2:84"
            },
            "returnParameters": {
              "id": 59818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59813,
                  "mutability": "mutable",
                  "name": "pyth",
                  "nameLocation": "3449:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59825,
                  "src": "3443:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPyth_$54460",
                    "typeString": "contract IPyth"
                  },
                  "typeName": {
                    "id": 59812,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59811,
                      "name": "IPyth",
                      "nameLocations": [
                        "3443:5:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54460,
                      "src": "3443:5:84"
                    },
                    "referencedDeclaration": 54460,
                    "src": "3443:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPyth_$54460",
                      "typeString": "contract IPyth"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59815,
                  "mutability": "mutable",
                  "name": "maxAcceptableAge",
                  "nameLocation": "3463:16:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59825,
                  "src": "3455:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59817,
                  "mutability": "mutable",
                  "name": "pythIdForRONUSD",
                  "nameLocation": "3489:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59825,
                  "src": "3481:23:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59816,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3442:63:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59846,
            "nodeType": "FunctionDefinition",
            "src": "3616:212:84",
            "nodes": [],
            "body": {
              "id": 59845,
              "nodeType": "Block",
              "src": "3756:72:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59840,
                        "name": "pyth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59829,
                        "src": "3783:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        }
                      },
                      {
                        "id": 59841,
                        "name": "maxAcceptableAge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59831,
                        "src": "3789:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59842,
                        "name": "pythIdForRONUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59833,
                        "src": "3807:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 59839,
                      "name": "_setPythOracleConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60732,
                      "src": "3762:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPyth_$54460_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (contract IPyth,uint256,bytes32)"
                      }
                    },
                    "id": 59843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3762:61:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59844,
                  "nodeType": "ExpressionStatement",
                  "src": "3762:61:84"
                }
              ]
            },
            "baseFunctions": [
              64475
            ],
            "documentation": {
              "id": 59826,
              "nodeType": "StructuredDocumentation",
              "src": "3572:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "28dd3065",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59836,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "3734:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59837,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59835,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3725:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "3725:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "3725:28:84"
              }
            ],
            "name": "setPythOracleConfig",
            "nameLocation": "3625:19:84",
            "parameters": {
              "id": 59834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59829,
                  "mutability": "mutable",
                  "name": "pyth",
                  "nameLocation": "3651:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59846,
                  "src": "3645:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPyth_$54460",
                    "typeString": "contract IPyth"
                  },
                  "typeName": {
                    "id": 59828,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59827,
                      "name": "IPyth",
                      "nameLocations": [
                        "3645:5:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54460,
                      "src": "3645:5:84"
                    },
                    "referencedDeclaration": 54460,
                    "src": "3645:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPyth_$54460",
                      "typeString": "contract IPyth"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59831,
                  "mutability": "mutable",
                  "name": "maxAcceptableAge",
                  "nameLocation": "3665:16:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59846,
                  "src": "3657:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3657:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59833,
                  "mutability": "mutable",
                  "name": "pythIdForRONUSD",
                  "nameLocation": "3691:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59846,
                  "src": "3683:23:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59832,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3644:63:84"
            },
            "returnParameters": {
              "id": 59838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3756:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59905,
            "nodeType": "FunctionDefinition",
            "src": "3876:396:84",
            "nodes": [],
            "body": {
              "id": 59904,
              "nodeType": "Block",
              "src": "3966:306:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59855,
                      "mutability": "mutable",
                      "name": "rnfMaxLength",
                      "nameLocation": "3980:12:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 59904,
                      "src": "3972:20:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3972:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59857,
                  "initialValue": {
                    "id": 59856,
                    "name": "_rnfMaxLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59690,
                    "src": "3995:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3972:36:84"
                },
                {
                  "expression": {
                    "id": 59865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59858,
                      "name": "renewalFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59852,
                      "src": "4014:11:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59863,
                          "name": "rnfMaxLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59855,
                          "src": "4045:12:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 59862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4028:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct INSDomainPrice.RenewalFee memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 59860,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 59859,
                              "name": "RenewalFee",
                              "nameLocations": [
                                "4032:10:84"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 64382,
                              "src": "4032:10:84"
                            },
                            "referencedDeclaration": 64382,
                            "src": "4032:10:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RenewalFee_$64382_storage_ptr",
                              "typeString": "struct INSDomainPrice.RenewalFee"
                            }
                          },
                          "id": 59861,
                          "nodeType": "ArrayTypeName",
                          "src": "4032:12:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_storage_$dyn_storage_ptr",
                            "typeString": "struct INSDomainPrice.RenewalFee[]"
                          }
                        }
                      },
                      "id": 59864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4028:30:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee memory[] memory"
                      }
                    },
                    "src": "4014:44:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct INSDomainPrice.RenewalFee memory[] memory"
                    }
                  },
                  "id": 59866,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:44:84"
                },
                {
                  "assignments": [
                    59868
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59868,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "4072:3:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 59904,
                      "src": "4064:11:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59867,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4064:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59869,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4064:11:84"
                },
                {
                  "body": {
                    "id": 59902,
                    "nodeType": "Block",
                    "src": "4117:151:84",
                    "statements": [
                      {
                        "id": 59901,
                        "nodeType": "UncheckedBlock",
                        "src": "4125:137:84",
                        "statements": [
                          {
                            "expression": {
                              "id": 59880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 59876,
                                "name": "len",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59868,
                                "src": "4145:3:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 59879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 59877,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59871,
                                  "src": "4151:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 59878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4155:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4151:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4145:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59881,
                            "nodeType": "ExpressionStatement",
                            "src": "4145:11:84"
                          },
                          {
                            "expression": {
                              "id": 59887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 59882,
                                    "name": "renewalFees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59852,
                                    "src": "4166:11:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct INSDomainPrice.RenewalFee memory[] memory"
                                    }
                                  },
                                  "id": 59884,
                                  "indexExpression": {
                                    "id": 59883,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59871,
                                    "src": "4178:1:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4166:14:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                    "typeString": "struct INSDomainPrice.RenewalFee memory"
                                  }
                                },
                                "id": 59885,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "4181:11:84",
                                "memberName": "labelLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64379,
                                "src": "4166:26:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 59886,
                                "name": "len",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59868,
                                "src": "4195:3:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4166:32:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59888,
                            "nodeType": "ExpressionStatement",
                            "src": "4166:32:84"
                          },
                          {
                            "expression": {
                              "id": 59896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 59889,
                                    "name": "renewalFees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59852,
                                    "src": "4208:11:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct INSDomainPrice.RenewalFee memory[] memory"
                                    }
                                  },
                                  "id": 59891,
                                  "indexExpression": {
                                    "id": 59890,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59871,
                                    "src": "4220:1:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4208:14:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                    "typeString": "struct INSDomainPrice.RenewalFee memory"
                                  }
                                },
                                "id": 59892,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "4223:3:84",
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64381,
                                "src": "4208:18:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "baseExpression": {
                                  "id": 59893,
                                  "name": "_rnFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59705,
                                  "src": "4229:6:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 59895,
                                "indexExpression": {
                                  "id": 59894,
                                  "name": "len",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59868,
                                  "src": "4236:3:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4229:11:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4208:32:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59897,
                            "nodeType": "ExpressionStatement",
                            "src": "4208:32:84"
                          },
                          {
                            "expression": {
                              "id": 59899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "4250:3:84",
                              "subExpression": {
                                "id": 59898,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59871,
                                "src": "4252:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 59900,
                            "nodeType": "ExpressionStatement",
                            "src": "4250:3:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59873,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59871,
                      "src": "4098:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 59874,
                      "name": "rnfMaxLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59855,
                      "src": "4102:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4098:16:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59903,
                  "initializationExpression": {
                    "assignments": [
                      59871
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 59871,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4095:1:84",
                        "nodeType": "VariableDeclaration",
                        "scope": 59903,
                        "src": "4087:9:84",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 59870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4087:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 59872,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4087:9:84"
                  },
                  "nodeType": "ForStatement",
                  "src": "4082:186:84"
                }
              ]
            },
            "baseFunctions": [
              64497
            ],
            "documentation": {
              "id": 59847,
              "nodeType": "StructuredDocumentation",
              "src": "3832:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "0a44f51f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRenewalFeeByLengths",
            "nameLocation": "3885:22:84",
            "parameters": {
              "id": 59848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3907:2:84"
            },
            "returnParameters": {
              "id": 59853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59852,
                  "mutability": "mutable",
                  "name": "renewalFees",
                  "nameLocation": "3953:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59905,
                  "src": "3933:31:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INSDomainPrice.RenewalFee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59850,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59849,
                        "name": "RenewalFee",
                        "nameLocations": [
                          "3933:10:84"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 64382,
                        "src": "3933:10:84"
                      },
                      "referencedDeclaration": 64382,
                      "src": "3933:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RenewalFee_$64382_storage_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee"
                      }
                    },
                    "id": 59851,
                    "nodeType": "ArrayTypeName",
                    "src": "3933:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_storage_$dyn_storage_ptr",
                      "typeString": "struct INSDomainPrice.RenewalFee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3932:33:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59921,
            "nodeType": "FunctionDefinition",
            "src": "4320:152:84",
            "nodes": [],
            "body": {
              "id": 59920,
              "nodeType": "Block",
              "src": "4425:47:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59917,
                        "name": "renewalFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59910,
                        "src": "4455:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct INSDomainPrice.RenewalFee calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct INSDomainPrice.RenewalFee calldata[] calldata"
                        }
                      ],
                      "id": 59916,
                      "name": "_setRenewalFeeByLengths",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60700,
                      "src": "4431:23:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (struct INSDomainPrice.RenewalFee calldata[] calldata)"
                      }
                    },
                    "id": 59918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4431:36:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59919,
                  "nodeType": "ExpressionStatement",
                  "src": "4431:36:84"
                }
              ]
            },
            "baseFunctions": [
              64505
            ],
            "documentation": {
              "id": 59906,
              "nodeType": "StructuredDocumentation",
              "src": "4276:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "35feb741",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59913,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "4405:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59914,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59912,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4396:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "4396:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "4396:28:84"
              }
            ],
            "name": "setRenewalFeeByLengths",
            "nameLocation": "4329:22:84",
            "parameters": {
              "id": 59911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59910,
                  "mutability": "mutable",
                  "name": "renewalFees",
                  "nameLocation": "4374:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59921,
                  "src": "4352:33:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct INSDomainPrice.RenewalFee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59908,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59907,
                        "name": "RenewalFee",
                        "nameLocations": [
                          "4352:10:84"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 64382,
                        "src": "4352:10:84"
                      },
                      "referencedDeclaration": 64382,
                      "src": "4352:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RenewalFee_$64382_storage_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee"
                      }
                    },
                    "id": 59909,
                    "nodeType": "ArrayTypeName",
                    "src": "4352:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_storage_$dyn_storage_ptr",
                      "typeString": "struct INSDomainPrice.RenewalFee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4351:35:84"
            },
            "returnParameters": {
              "id": 59915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4425:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59930,
            "nodeType": "FunctionDefinition",
            "src": "4520:88:84",
            "nodes": [],
            "body": {
              "id": 59929,
              "nodeType": "Block",
              "src": "4581:27:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59927,
                    "name": "_taxRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59687,
                    "src": "4594:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59926,
                  "id": 59928,
                  "nodeType": "Return",
                  "src": "4587:16:84"
                }
              ]
            },
            "baseFunctions": [
              64511
            ],
            "documentation": {
              "id": 59922,
              "nodeType": "StructuredDocumentation",
              "src": "4476:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "5ef32e2c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaxRatio",
            "nameLocation": "4529:11:84",
            "parameters": {
              "id": 59923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4540:2:84"
            },
            "returnParameters": {
              "id": 59926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59925,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "4574:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59930,
                  "src": "4566:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4565:15:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59944,
            "nodeType": "FunctionDefinition",
            "src": "4656:104:84",
            "nodes": [],
            "body": {
              "id": 59943,
              "nodeType": "Block",
              "src": "4730:30:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59940,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59933,
                        "src": "4749:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59939,
                      "name": "_setTaxRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60595,
                      "src": "4736:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 59941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4736:19:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59942,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:19:84"
                }
              ]
            },
            "baseFunctions": [
              64517
            ],
            "documentation": {
              "id": 59931,
              "nodeType": "StructuredDocumentation",
              "src": "4612:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "fe303ebf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59936,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "4710:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59937,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59935,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4701:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "4701:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "4701:28:84"
              }
            ],
            "name": "setTaxRatio",
            "nameLocation": "4665:11:84",
            "parameters": {
              "id": 59934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59933,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "4685:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59944,
                  "src": "4677:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4677:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4676:15:84"
            },
            "returnParameters": {
              "id": 59938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4730:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59954,
            "nodeType": "FunctionDefinition",
            "src": "4808:127:84",
            "nodes": [],
            "body": {
              "id": 59953,
              "nodeType": "Block",
              "src": "4904:31:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59951,
                    "name": "_dpDownScaler",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59700,
                    "src": "4917:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage",
                      "typeString": "struct PeriodScaler storage ref"
                    }
                  },
                  "functionReturnParameters": 59950,
                  "id": 59952,
                  "nodeType": "Return",
                  "src": "4910:20:84"
                }
              ]
            },
            "baseFunctions": [
              64482
            ],
            "documentation": {
              "id": 59945,
              "nodeType": "StructuredDocumentation",
              "src": "4764:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "39e47da7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getScaleDownRuleForDomainPrice",
            "nameLocation": "4817:30:84",
            "parameters": {
              "id": 59946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4847:2:84"
            },
            "returnParameters": {
              "id": 59950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59949,
                  "mutability": "mutable",
                  "name": "scaleRule",
                  "nameLocation": "4893:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59954,
                  "src": "4873:29:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PeriodScaler_$66624_memory_ptr",
                    "typeString": "struct PeriodScaler"
                  },
                  "typeName": {
                    "id": 59948,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59947,
                      "name": "PeriodScaler",
                      "nameLocations": [
                        "4873:12:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66624,
                      "src": "4873:12:84"
                    },
                    "referencedDeclaration": 66624,
                    "src": "4873:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage_ptr",
                      "typeString": "struct PeriodScaler"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4872:31:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59969,
            "nodeType": "FunctionDefinition",
            "src": "4983:157:84",
            "nodes": [],
            "body": {
              "id": 59968,
              "nodeType": "Block",
              "src": "5094:46:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59965,
                        "name": "scaleRule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59958,
                        "src": "5125:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                          "typeString": "struct PeriodScaler calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                          "typeString": "struct PeriodScaler calldata"
                        }
                      ],
                      "id": 59964,
                      "name": "_setDomainPriceScaleRule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60616,
                      "src": "5100:24:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PeriodScaler_$66624_calldata_ptr_$returns$__$",
                        "typeString": "function (struct PeriodScaler calldata)"
                      }
                    },
                    "id": 59966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:35:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59967,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:35:84"
                }
              ]
            },
            "baseFunctions": [
              64489
            ],
            "documentation": {
              "id": 59955,
              "nodeType": "StructuredDocumentation",
              "src": "4939:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "e229a670",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59961,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48178,
                    "src": "5074:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 59962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59960,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5065:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "5065:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "5065:28:84"
              }
            ],
            "name": "setScaleDownRuleForDomainPrice",
            "nameLocation": "4992:30:84",
            "parameters": {
              "id": 59959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59958,
                  "mutability": "mutable",
                  "name": "scaleRule",
                  "nameLocation": "5045:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59969,
                  "src": "5023:31:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                    "typeString": "struct PeriodScaler"
                  },
                  "typeName": {
                    "id": 59957,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59956,
                      "name": "PeriodScaler",
                      "nameLocations": [
                        "5023:12:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66624,
                      "src": "5023:12:84"
                    },
                    "referencedDeclaration": 66624,
                    "src": "5023:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage_ptr",
                      "typeString": "struct PeriodScaler"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5022:33:84"
            },
            "returnParameters": {
              "id": 59963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5094:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59996,
            "nodeType": "FunctionDefinition",
            "src": "5188:226:84",
            "nodes": [],
            "body": {
              "id": 59995,
              "nodeType": "Block",
              "src": "5283:131:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59977,
                      "name": "usdFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59975,
                      "src": "5289:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 59978,
                        "name": "_rnFeeOverriding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59716,
                        "src": "5298:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 59982,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 59979,
                            "name": "label",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59972,
                            "src": "5315:5:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "id": 59980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5321:9:84",
                          "memberName": "hashLabel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66058,
                          "src": "5315:15:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes32)"
                          }
                        },
                        "id": 59981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5315:17:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5298:35:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5289:44:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59984,
                  "nodeType": "ExpressionStatement",
                  "src": "5289:44:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59985,
                      "name": "usdFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59975,
                      "src": "5343:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 59986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5353:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5343:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59991,
                  "nodeType": "IfStatement",
                  "src": "5339:50:84",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 59988,
                        "name": "RenewalFeeIsNotOverriden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64375,
                        "src": "5363:24:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 59989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5363:26:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 59990,
                    "nodeType": "RevertStatement",
                    "src": "5356:33:84"
                  }
                },
                {
                  "expression": {
                    "id": 59993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "~",
                    "prefix": true,
                    "src": "5402:7:84",
                    "subExpression": {
                      "id": 59992,
                      "name": "usdFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59975,
                      "src": "5403:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59976,
                  "id": 59994,
                  "nodeType": "Return",
                  "src": "5395:14:84"
                }
              ]
            },
            "baseFunctions": [
              64549
            ],
            "documentation": {
              "id": 59970,
              "nodeType": "StructuredDocumentation",
              "src": "5144:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "5c68c830",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOverriddenRenewalFee",
            "nameLocation": "5197:23:84",
            "parameters": {
              "id": 59973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59972,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "5237:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59996,
                  "src": "5221:21:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59971,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5220:23:84"
            },
            "returnParameters": {
              "id": 59976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59975,
                  "mutability": "mutable",
                  "name": "usdFee",
                  "nameLocation": "5275:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 59996,
                  "src": "5267:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5267:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5266:16:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60070,
            "nodeType": "FunctionDefinition",
            "src": "5462:576:84",
            "nodes": [],
            "body": {
              "id": 60069,
              "nodeType": "Block",
              "src": "5597:441:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60010,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "5611:6:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60069,
                      "src": "5603:14:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60009,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5603:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60013,
                  "initialValue": {
                    "expression": {
                      "id": 60011,
                      "name": "lbHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60000,
                      "src": "5620:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                        "typeString": "bytes32[] calldata"
                      }
                    },
                    "id": 60012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5629:6:84",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5620:15:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5603:32:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60014,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60010,
                        "src": "5645:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 60015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5655:1:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5645:11:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60017,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60010,
                        "src": "5660:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 60018,
                          "name": "usdPrices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60003,
                          "src": "5670:9:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 60019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5680:6:84",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5670:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5660:26:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5645:41:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60025,
                  "nodeType": "IfStatement",
                  "src": "5641:74:84",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 60022,
                        "name": "InvalidArrayLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64373,
                        "src": "5695:18:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 60023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5695:20:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 60024,
                    "nodeType": "RevertStatement",
                    "src": "5688:27:84"
                  }
                },
                {
                  "assignments": [
                    60027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60027,
                      "mutability": "mutable",
                      "name": "inverseBitwise",
                      "nameLocation": "5729:14:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60069,
                      "src": "5721:22:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5721:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60028,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5721:22:84"
                },
                {
                  "assignments": [
                    60030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60030,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5757:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60069,
                      "src": "5749:16:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 60029,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5749:7:84",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60033,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60031,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51922,
                      "src": "5768:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 60032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5768:12:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5749:31:84"
                },
                {
                  "body": {
                    "id": 60067,
                    "nodeType": "Block",
                    "src": "5816:218:84",
                    "statements": [
                      {
                        "expression": {
                          "id": 60045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60040,
                            "name": "inverseBitwise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60027,
                            "src": "5824:14:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "~",
                            "prefix": true,
                            "src": "5841:13:84",
                            "subExpression": {
                              "baseExpression": {
                                "id": 60041,
                                "name": "usdPrices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60003,
                                "src": "5842:9:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 60043,
                              "indexExpression": {
                                "id": 60042,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60035,
                                "src": "5852:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5842:12:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5824:30:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60046,
                        "nodeType": "ExpressionStatement",
                        "src": "5824:30:84"
                      },
                      {
                        "expression": {
                          "id": 60053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 60047,
                              "name": "_rnFeeOverriding",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59716,
                              "src": "5862:16:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 60051,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 60048,
                                "name": "lbHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60000,
                                "src": "5879:8:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 60050,
                              "indexExpression": {
                                "id": 60049,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60035,
                                "src": "5888:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5879:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5862:29:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60052,
                            "name": "inverseBitwise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60027,
                            "src": "5894:14:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5862:46:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60054,
                        "nodeType": "ExpressionStatement",
                        "src": "5862:46:84"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 60056,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60030,
                              "src": "5949:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 60057,
                                "name": "lbHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60000,
                                "src": "5959:8:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 60059,
                              "indexExpression": {
                                "id": 60058,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60035,
                                "src": "5968:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5959:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 60060,
                              "name": "inverseBitwise",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60027,
                              "src": "5972:14:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 60055,
                            "name": "RenewalFeeOverridingUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64419,
                            "src": "5921:27:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes32,uint256)"
                            }
                          },
                          "id": 60061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5921:66:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60062,
                        "nodeType": "EmitStatement",
                        "src": "5916:71:84"
                      },
                      {
                        "id": 60066,
                        "nodeType": "UncheckedBlock",
                        "src": "5996:32:84",
                        "statements": [
                          {
                            "expression": {
                              "id": 60064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6016:3:84",
                              "subExpression": {
                                "id": 60063,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60035,
                                "src": "6018:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60065,
                            "nodeType": "ExpressionStatement",
                            "src": "6016:3:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60037,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60035,
                      "src": "5803:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60038,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60010,
                      "src": "5807:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5803:10:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60068,
                  "initializationExpression": {
                    "assignments": [
                      60035
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60035,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5800:1:84",
                        "nodeType": "VariableDeclaration",
                        "scope": 60068,
                        "src": "5792:9:84",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5792:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60036,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5792:9:84"
                  },
                  "nodeType": "ForStatement",
                  "src": "5787:247:84"
                }
              ]
            },
            "baseFunctions": [
              64559
            ],
            "documentation": {
              "id": 59997,
              "nodeType": "StructuredDocumentation",
              "src": "5418:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "dd28776d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60006,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59671,
                    "src": "5580:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60005,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5571:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "5571:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "5571:23:84"
              }
            ],
            "name": "bulkOverrideRenewalFees",
            "nameLocation": "5471:23:84",
            "parameters": {
              "id": 60004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60000,
                  "mutability": "mutable",
                  "name": "lbHashes",
                  "nameLocation": "5514:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60070,
                  "src": "5495:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59998,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5495:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 59999,
                    "nodeType": "ArrayTypeName",
                    "src": "5495:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60003,
                  "mutability": "mutable",
                  "name": "usdPrices",
                  "nameLocation": "5543:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60070,
                  "src": "5524:28:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60001,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5524:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60002,
                    "nodeType": "ArrayTypeName",
                    "src": "5524:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5494:59:84"
            },
            "returnParameters": {
              "id": 60008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5597:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60148,
            "nodeType": "FunctionDefinition",
            "src": "6086:610:84",
            "nodes": [],
            "body": {
              "id": 60147,
              "nodeType": "Block",
              "src": "6322:374:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60093,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "6336:6:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60147,
                      "src": "6328:14:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6328:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60100,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60095,
                        "name": "lbHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60074,
                        "src": "6386:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 60096,
                        "name": "ronPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60077,
                        "src": "6396:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 60097,
                        "name": "proofHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60080,
                        "src": "6407:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 60098,
                        "name": "setTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60083,
                        "src": "6420:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 60094,
                      "name": "_requireBulkSetDomainPriceArgumentsValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60513,
                      "src": "6345:40:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32[] calldata,uint256[] calldata,bytes32[] calldata,uint256[] calldata) pure returns (uint256)"
                      }
                    },
                    "id": 60099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6345:84:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6328:101:84"
                },
                {
                  "assignments": [
                    60102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60102,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6443:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60147,
                      "src": "6435:16:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 60101,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6435:7:84",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60105,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60103,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51922,
                      "src": "6454:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 60104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6454:12:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6435:31:84"
                },
                {
                  "expression": {
                    "id": 60112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60106,
                      "name": "updated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60090,
                      "src": "6472:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60110,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60093,
                          "src": "6493:6:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6482:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bool[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 60107,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6486:4:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 60108,
                          "nodeType": "ArrayTypeName",
                          "src": "6486:6:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        }
                      },
                      "id": 60111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6482:18:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                        "typeString": "bool[] memory"
                      }
                    },
                    "src": "6472:28:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                      "typeString": "bool[] memory"
                    }
                  },
                  "id": 60113,
                  "nodeType": "ExpressionStatement",
                  "src": "6472:28:84"
                },
                {
                  "body": {
                    "id": 60145,
                    "nodeType": "Block",
                    "src": "6536:156:84",
                    "statements": [
                      {
                        "expression": {
                          "id": 60139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 60120,
                              "name": "updated",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60090,
                              "src": "6544:7:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 60122,
                            "indexExpression": {
                              "id": 60121,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60115,
                              "src": "6552:1:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6544:10:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 60124,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60102,
                                "src": "6573:8:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 60125,
                                  "name": "lbHashes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60074,
                                  "src": "6583:8:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                    "typeString": "bytes32[] calldata"
                                  }
                                },
                                "id": 60127,
                                "indexExpression": {
                                  "id": 60126,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60115,
                                  "src": "6592:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6583:11:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 60128,
                                  "name": "ronPrices",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60077,
                                  "src": "6596:9:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 60130,
                                "indexExpression": {
                                  "id": 60129,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60115,
                                  "src": "6606:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6596:12:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 60131,
                                  "name": "proofHashes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60080,
                                  "src": "6610:11:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                    "typeString": "bytes32[] calldata"
                                  }
                                },
                                "id": 60133,
                                "indexExpression": {
                                  "id": 60132,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60115,
                                  "src": "6622:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6610:14:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 60134,
                                  "name": "setTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60083,
                                  "src": "6626:8:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 60136,
                                "indexExpression": {
                                  "id": 60135,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60115,
                                  "src": "6635:1:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6626:11:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 60137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6639:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 60123,
                              "name": "_setDomainPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60578,
                              "src": "6557:15:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                                "typeString": "function (address,bytes32,uint256,bytes32,uint256,bool) returns (bool)"
                              }
                            },
                            "id": 60138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:88:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6544:101:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 60140,
                        "nodeType": "ExpressionStatement",
                        "src": "6544:101:84"
                      },
                      {
                        "id": 60144,
                        "nodeType": "UncheckedBlock",
                        "src": "6654:32:84",
                        "statements": [
                          {
                            "expression": {
                              "id": 60142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6674:3:84",
                              "subExpression": {
                                "id": 60141,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60115,
                                "src": "6676:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60143,
                            "nodeType": "ExpressionStatement",
                            "src": "6674:3:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60117,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60115,
                      "src": "6523:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60118,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60093,
                      "src": "6527:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6523:10:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60146,
                  "initializationExpression": {
                    "assignments": [
                      60115
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60115,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6520:1:84",
                        "nodeType": "VariableDeclaration",
                        "scope": 60146,
                        "src": "6512:9:84",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60114,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6512:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60116,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6512:9:84"
                  },
                  "nodeType": "ForStatement",
                  "src": "6507:185:84"
                }
              ]
            },
            "baseFunctions": [
              64578
            ],
            "documentation": {
              "id": 60071,
              "nodeType": "StructuredDocumentation",
              "src": "6042:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "53faf909",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60086,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59671,
                    "src": "6275:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60087,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60085,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6266:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "6266:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "6266:23:84"
              }
            ],
            "name": "bulkTrySetDomainPrice",
            "nameLocation": "6095:21:84",
            "parameters": {
              "id": 60084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60074,
                  "mutability": "mutable",
                  "name": "lbHashes",
                  "nameLocation": "6141:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60148,
                  "src": "6122:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60072,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6122:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60073,
                    "nodeType": "ArrayTypeName",
                    "src": "6122:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60077,
                  "mutability": "mutable",
                  "name": "ronPrices",
                  "nameLocation": "6174:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60148,
                  "src": "6155:28:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60075,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6155:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60076,
                    "nodeType": "ArrayTypeName",
                    "src": "6155:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60080,
                  "mutability": "mutable",
                  "name": "proofHashes",
                  "nameLocation": "6208:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60148,
                  "src": "6189:30:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60078,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6189:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60079,
                    "nodeType": "ArrayTypeName",
                    "src": "6189:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60083,
                  "mutability": "mutable",
                  "name": "setTypes",
                  "nameLocation": "6244:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60148,
                  "src": "6225:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60081,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6225:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60082,
                    "nodeType": "ArrayTypeName",
                    "src": "6225:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6116:140:84"
            },
            "returnParameters": {
              "id": 60091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60090,
                  "mutability": "mutable",
                  "name": "updated",
                  "nameLocation": "6313:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60148,
                  "src": "6299:21:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60088,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "6299:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 60089,
                    "nodeType": "ArrayTypeName",
                    "src": "6299:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6298:23:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60211,
            "nodeType": "FunctionDefinition",
            "src": "6744:526:84",
            "nodes": [],
            "body": {
              "id": 60210,
              "nodeType": "Block",
              "src": "6945:325:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60168,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "6959:6:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60210,
                      "src": "6951:14:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6951:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60175,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60170,
                        "name": "lbHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60152,
                        "src": "7009:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 60171,
                        "name": "ronPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60155,
                        "src": "7019:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 60172,
                        "name": "proofHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60158,
                        "src": "7030:11:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 60173,
                        "name": "setTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60161,
                        "src": "7043:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 60169,
                      "name": "_requireBulkSetDomainPriceArgumentsValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60513,
                      "src": "6968:40:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32[] calldata,uint256[] calldata,bytes32[] calldata,uint256[] calldata) pure returns (uint256)"
                      }
                    },
                    "id": 60174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6968:84:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6951:101:84"
                },
                {
                  "assignments": [
                    60177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60177,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "7066:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60210,
                      "src": "7058:16:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 60176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7058:7:84",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60180,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60178,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51922,
                      "src": "7077:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 60179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7077:12:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7058:31:84"
                },
                {
                  "body": {
                    "id": 60208,
                    "nodeType": "Block",
                    "src": "7125:141:84",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60188,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60177,
                              "src": "7149:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 60189,
                                "name": "lbHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60152,
                                "src": "7159:8:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 60191,
                              "indexExpression": {
                                "id": 60190,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60182,
                                "src": "7168:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7159:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 60192,
                                "name": "ronPrices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60155,
                                "src": "7172:9:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 60194,
                              "indexExpression": {
                                "id": 60193,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60182,
                                "src": "7182:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7172:12:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 60195,
                                "name": "proofHashes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60158,
                                "src": "7186:11:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 60197,
                              "indexExpression": {
                                "id": 60196,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60182,
                                "src": "7198:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7186:14:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 60198,
                                "name": "setTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60161,
                                "src": "7202:8:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 60200,
                              "indexExpression": {
                                "id": 60199,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60182,
                                "src": "7211:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7202:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 60201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7215:4:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 60187,
                            "name": "_setDomainPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60578,
                            "src": "7133:15:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (address,bytes32,uint256,bytes32,uint256,bool) returns (bool)"
                            }
                          },
                          "id": 60202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7133:87:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 60203,
                        "nodeType": "ExpressionStatement",
                        "src": "7133:87:84"
                      },
                      {
                        "id": 60207,
                        "nodeType": "UncheckedBlock",
                        "src": "7228:32:84",
                        "statements": [
                          {
                            "expression": {
                              "id": 60205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7248:3:84",
                              "subExpression": {
                                "id": 60204,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60182,
                                "src": "7250:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60206,
                            "nodeType": "ExpressionStatement",
                            "src": "7248:3:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60184,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60182,
                      "src": "7112:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60185,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60168,
                      "src": "7116:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7112:10:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60209,
                  "initializationExpression": {
                    "assignments": [
                      60182
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60182,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7109:1:84",
                        "nodeType": "VariableDeclaration",
                        "scope": 60209,
                        "src": "7101:9:84",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60181,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7101:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60183,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7101:9:84"
                  },
                  "nodeType": "ForStatement",
                  "src": "7096:170:84"
                }
              ]
            },
            "baseFunctions": [
              64594
            ],
            "documentation": {
              "id": 60149,
              "nodeType": "StructuredDocumentation",
              "src": "6700:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "599eaabf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60164,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59671,
                    "src": "6930:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60163,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6921:8:84"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48189,
                  "src": "6921:8:84"
                },
                "nodeType": "ModifierInvocation",
                "src": "6921:23:84"
              }
            ],
            "name": "bulkSetDomainPrice",
            "nameLocation": "6753:18:84",
            "parameters": {
              "id": 60162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60152,
                  "mutability": "mutable",
                  "name": "lbHashes",
                  "nameLocation": "6796:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60211,
                  "src": "6777:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60150,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6777:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60151,
                    "nodeType": "ArrayTypeName",
                    "src": "6777:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60155,
                  "mutability": "mutable",
                  "name": "ronPrices",
                  "nameLocation": "6829:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60211,
                  "src": "6810:28:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60153,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6810:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60154,
                    "nodeType": "ArrayTypeName",
                    "src": "6810:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60158,
                  "mutability": "mutable",
                  "name": "proofHashes",
                  "nameLocation": "6863:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60211,
                  "src": "6844:30:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60156,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6844:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60157,
                    "nodeType": "ArrayTypeName",
                    "src": "6844:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60161,
                  "mutability": "mutable",
                  "name": "setTypes",
                  "nameLocation": "6899:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60211,
                  "src": "6880:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60159,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6880:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60160,
                    "nodeType": "ArrayTypeName",
                    "src": "6880:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6771:140:84"
            },
            "returnParameters": {
              "id": 60166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6945:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60236,
            "nodeType": "FunctionDefinition",
            "src": "7318:200:84",
            "nodes": [],
            "body": {
              "id": 60235,
              "nodeType": "Block",
              "src": "7420:98:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60221,
                      "name": "usdPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60217,
                      "src": "7426:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 60223,
                              "name": "label",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60214,
                              "src": "7453:5:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "id": 60224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7459:9:84",
                            "memberName": "hashLabel",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66058,
                            "src": "7453:15:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 60225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7453:17:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 60222,
                        "name": "_getDomainPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60774,
                        "src": "7437:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (bytes32) view returns (uint256)"
                        }
                      },
                      "id": 60226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7437:34:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7426:45:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60228,
                  "nodeType": "ExpressionStatement",
                  "src": "7426:45:84"
                },
                {
                  "expression": {
                    "id": 60233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60229,
                      "name": "ronPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60219,
                      "src": "7477:8:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60231,
                          "name": "usdPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60217,
                          "src": "7504:8:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60230,
                        "name": "convertUSDToRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60440,
                        "src": "7488:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 60232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7488:25:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7477:36:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60234,
                  "nodeType": "ExpressionStatement",
                  "src": "7477:36:84"
                }
              ]
            },
            "baseFunctions": [
              64527
            ],
            "documentation": {
              "id": 60212,
              "nodeType": "StructuredDocumentation",
              "src": "7274:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "713a69a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDomainPrice",
            "nameLocation": "7327:14:84",
            "parameters": {
              "id": 60215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60214,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "7356:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60236,
                  "src": "7342:19:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60213,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7342:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7341:21:84"
            },
            "returnParameters": {
              "id": 60220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60217,
                  "mutability": "mutable",
                  "name": "usdPrice",
                  "nameLocation": "7392:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60236,
                  "src": "7384:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7384:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60219,
                  "mutability": "mutable",
                  "name": "ronPrice",
                  "nameLocation": "7410:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60236,
                  "src": "7402:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7402:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7383:36:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60410,
            "nodeType": "FunctionDefinition",
            "src": "7566:1367:84",
            "nodes": [],
            "body": {
              "id": 60409,
              "nodeType": "Block",
              "src": "7713:1220:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60251,
                      "mutability": "mutable",
                      "name": "nameLen",
                      "nameLocation": "7727:7:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60409,
                      "src": "7719:15:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60250,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7719:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60255,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 60252,
                        "name": "label",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60239,
                        "src": "7737:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 60253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7743:6:84",
                      "memberName": "strlen",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66176,
                      "src": "7737:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (uint256)"
                      }
                    },
                    "id": 60254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7737:14:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7719:32:84"
                },
                {
                  "assignments": [
                    60257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60257,
                      "mutability": "mutable",
                      "name": "lbHash",
                      "nameLocation": "7765:6:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60409,
                      "src": "7757:14:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60256,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7757:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60261,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 60258,
                        "name": "label",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60239,
                        "src": "7774:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 60259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7780:9:84",
                      "memberName": "hashLabel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66058,
                      "src": "7774:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes32)"
                      }
                    },
                    "id": 60260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7774:17:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7757:34:84"
                },
                {
                  "assignments": [
                    60263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60263,
                      "mutability": "mutable",
                      "name": "overriddenRenewalFee",
                      "nameLocation": "7805:20:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60409,
                      "src": "7797:28:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7797:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60267,
                  "initialValue": {
                    "baseExpression": {
                      "id": 60264,
                      "name": "_rnFeeOverriding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59716,
                      "src": "7828:16:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 60266,
                    "indexExpression": {
                      "id": 60265,
                      "name": "lbHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60257,
                      "src": "7845:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7828:24:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7797:55:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60268,
                      "name": "overriddenRenewalFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60263,
                      "src": "7863:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7887:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7863:25:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 60389,
                    "nodeType": "Block",
                    "src": "7959:877:84",
                    "statements": [
                      {
                        "assignments": [
                          60282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 60282,
                            "mutability": "mutable",
                            "name": "renewalFeeByLength",
                            "nameLocation": "7975:18:84",
                            "nodeType": "VariableDeclaration",
                            "scope": 60389,
                            "src": "7967:26:84",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 60281,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7967:7:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 60290,
                        "initialValue": {
                          "baseExpression": {
                            "id": 60283,
                            "name": "_rnFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59705,
                            "src": "7996:6:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 60289,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 60286,
                                "name": "nameLen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60251,
                                "src": "8012:7:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 60287,
                                "name": "_rnfMaxLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59690,
                                "src": "8021:13:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60284,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53173,
                                "src": "8003:4:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$53173_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 60285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8008:3:84",
                              "memberName": "min",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52350,
                              "src": "8003:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 60288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8003:32:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7996:40:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7967:69:84"
                      },
                      {
                        "expression": {
                          "id": 60297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 60291,
                              "name": "basePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60245,
                              "src": "8044:9:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                                "typeString": "struct INSDomainPrice.UnitPrice memory"
                              }
                            },
                            "id": 60293,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8054:3:84",
                            "memberName": "usd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64384,
                            "src": "8044:13:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 60296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 60294,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60241,
                              "src": "8060:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 60295,
                              "name": "renewalFeeByLength",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60282,
                              "src": "8071:18:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8060:29:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8044:45:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60298,
                        "nodeType": "ExpressionStatement",
                        "src": "8044:45:84"
                      },
                      {
                        "assignments": [
                          60300
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 60300,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8105:2:84",
                            "nodeType": "VariableDeclaration",
                            "scope": 60389,
                            "src": "8097:10:84",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 60299,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8097:7:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 60307,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 60303,
                                "name": "LibRNSDomain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66069,
                                "src": "8128:12:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$66069_$",
                                  "typeString": "type(library LibRNSDomain)"
                                }
                              },
                              "id": 60304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8141:6:84",
                              "memberName": "RON_ID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66032,
                              "src": "8128:19:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 60305,
                              "name": "label",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60239,
                              "src": "8149:5:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 60301,
                              "name": "LibRNSDomain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66069,
                              "src": "8110:12:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$66069_$",
                                "typeString": "type(library LibRNSDomain)"
                              }
                            },
                            "id": 60302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8123:4:84",
                            "memberName": "toId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66048,
                            "src": "8110:17:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 60306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8110:45:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8097:58:84"
                      },
                      {
                        "assignments": [
                          60310
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 60310,
                            "mutability": "mutable",
                            "name": "auction",
                            "nameLocation": "8174:7:84",
                            "nodeType": "VariableDeclaration",
                            "scope": 60389,
                            "src": "8163:18:84",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INSAuction_$64365",
                              "typeString": "contract INSAuction"
                            },
                            "typeName": {
                              "id": 60309,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 60308,
                                "name": "INSAuction",
                                "nameLocations": [
                                  "8163:10:84"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 64365,
                                "src": "8163:10:84"
                              },
                              "referencedDeclaration": 64365,
                              "src": "8163:10:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INSAuction_$64365",
                                "typeString": "contract INSAuction"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 60312,
                        "initialValue": {
                          "id": 60311,
                          "name": "_auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59684,
                          "src": "8184:8:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INSAuction_$64365",
                            "typeString": "contract INSAuction"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8163:29:84"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 60315,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60300,
                              "src": "8221:2:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 60313,
                              "name": "auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60310,
                              "src": "8204:7:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INSAuction_$64365",
                                "typeString": "contract INSAuction"
                              }
                            },
                            "id": 60314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8212:8:84",
                            "memberName": "reserved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64267,
                            "src": "8204:16:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view external returns (bool)"
                            }
                          },
                          "id": 60316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8204:20:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 60388,
                        "nodeType": "IfStatement",
                        "src": "8200:630:84",
                        "trueBody": {
                          "id": 60387,
                          "nodeType": "Block",
                          "src": "8226:604:84",
                          "statements": [
                            {
                              "assignments": [
                                60319
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 60319,
                                  "mutability": "mutable",
                                  "name": "rns",
                                  "nameLocation": "8247:3:84",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 60387,
                                  "src": "8236:14:84",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INSUnified_$65002",
                                    "typeString": "contract INSUnified"
                                  },
                                  "typeName": {
                                    "id": 60318,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 60317,
                                      "name": "INSUnified",
                                      "nameLocations": [
                                        "8236:10:84"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 65002,
                                      "src": "8236:10:84"
                                    },
                                    "referencedDeclaration": 65002,
                                    "src": "8236:10:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSUnified_$65002",
                                      "typeString": "contract INSUnified"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 60323,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 60320,
                                    "name": "auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60310,
                                    "src": "8253:7:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSAuction_$64365",
                                      "typeString": "contract INSAuction"
                                    }
                                  },
                                  "id": 60321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8261:13:84",
                                  "memberName": "getRNSUnified",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64364,
                                  "src": "8253:21:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_INSUnified_$65002_$",
                                    "typeString": "function () view external returns (contract INSUnified)"
                                  }
                                },
                                "id": 60322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8253:23:84",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_INSUnified_$65002",
                                  "typeString": "contract INSUnified"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8236:40:84"
                            },
                            {
                              "assignments": [
                                60325
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 60325,
                                  "mutability": "mutable",
                                  "name": "expiry",
                                  "nameLocation": "8294:6:84",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 60387,
                                  "src": "8286:14:84",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 60324,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8286:7:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 60341,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 60330,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60300,
                                            "src": "8348:2:84",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 60328,
                                            "name": "rns",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 60319,
                                            "src": "8334:3:84",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_INSUnified_$65002",
                                              "typeString": "contract INSUnified"
                                            }
                                          },
                                          "id": 60329,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8338:9:84",
                                          "memberName": "getRecord",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 64931,
                                          "src": "8334:13:84",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Record_$64815_memory_ptr_$",
                                            "typeString": "function (uint256) view external returns (struct INSUnified.Record memory)"
                                          }
                                        },
                                        "id": 60331,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8334:17:84",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Record_$64815_memory_ptr",
                                          "typeString": "struct INSUnified.Record memory"
                                        }
                                      },
                                      "id": 60332,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8352:3:84",
                                      "memberName": "mut",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 64814,
                                      "src": "8334:21:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_MutableRecord_$64808_memory_ptr",
                                        "typeString": "struct INSUnified.MutableRecord memory"
                                      }
                                    },
                                    "id": 60333,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8356:6:84",
                                    "memberName": "expiry",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64805,
                                    "src": "8334:28:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "id": 60334,
                                    "name": "duration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60241,
                                    "src": "8364:8:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 60337,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8379:6:84",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 60336,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8379:6:84",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 60335,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "8374:4:84",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 60338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8374:12:84",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 60339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8387:3:84",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8374:16:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "expression": {
                                    "id": 60326,
                                    "name": "LibSafeRange",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66613,
                                    "src": "8303:12:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_LibSafeRange_$66613_$",
                                      "typeString": "type(library LibSafeRange)"
                                    }
                                  },
                                  "id": 60327,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8316:17:84",
                                  "memberName": "addWithUpperbound",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66612,
                                  "src": "8303:30:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 60340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8303:88:84",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8286:105:84"
                            },
                            {
                              "assignments": [
                                60346,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 60346,
                                  "mutability": "mutable",
                                  "name": "domainAuction",
                                  "nameLocation": "8434:13:84",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 60387,
                                  "src": "8402:45:84",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DomainAuction_$64175_memory_ptr",
                                    "typeString": "struct INSAuction.DomainAuction"
                                  },
                                  "typeName": {
                                    "id": 60345,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 60344,
                                      "name": "INSAuction.DomainAuction",
                                      "nameLocations": [
                                        "8402:10:84",
                                        "8413:13:84"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 64175,
                                      "src": "8402:24:84"
                                    },
                                    "referencedDeclaration": 64175,
                                    "src": "8402:24:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DomainAuction_$64175_storage_ptr",
                                      "typeString": "struct INSAuction.DomainAuction"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 60351,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 60349,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60300,
                                    "src": "8471:2:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 60347,
                                    "name": "auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60310,
                                    "src": "8452:7:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSAuction_$64365",
                                      "typeString": "contract INSAuction"
                                    }
                                  },
                                  "id": 60348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8460:10:84",
                                  "memberName": "getAuction",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64323,
                                  "src": "8452:18:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_DomainAuction_$64175_memory_ptr_$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (struct INSAuction.DomainAuction memory,uint256)"
                                  }
                                },
                                "id": 60350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8452:22:84",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_struct$_DomainAuction_$64175_memory_ptr_$_t_uint256_$",
                                  "typeString": "tuple(struct INSAuction.DomainAuction memory,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8401:73:84"
                            },
                            {
                              "assignments": [
                                60353
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 60353,
                                  "mutability": "mutable",
                                  "name": "claimedAt",
                                  "nameLocation": "8492:9:84",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 60387,
                                  "src": "8484:17:84",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 60352,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8484:7:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 60357,
                              "initialValue": {
                                "expression": {
                                  "expression": {
                                    "id": 60354,
                                    "name": "domainAuction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60346,
                                    "src": "8504:13:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DomainAuction_$64175_memory_ptr",
                                      "typeString": "struct INSAuction.DomainAuction memory"
                                    }
                                  },
                                  "id": 60355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8518:3:84",
                                  "memberName": "bid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64174,
                                  "src": "8504:17:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bid_$64167_memory_ptr",
                                    "typeString": "struct INSAuction.Bid memory"
                                  }
                                },
                                "id": 60356,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8522:9:84",
                                "memberName": "claimedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64166,
                                "src": "8504:27:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8484:47:84"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 60368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 60360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 60358,
                                    "name": "claimedAt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60353,
                                    "src": "8545:9:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 60359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8558:1:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "8545:14:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 60367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 60363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 60361,
                                      "name": "expiry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60325,
                                      "src": "8563:6:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 60362,
                                      "name": "claimedAt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60353,
                                      "src": "8572:9:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8563:18:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 60364,
                                        "name": "auction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 60310,
                                        "src": "8584:7:84",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_INSAuction_$64365",
                                          "typeString": "contract INSAuction"
                                        }
                                      },
                                      "id": 60365,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8592:25:84",
                                      "memberName": "MAX_AUCTION_DOMAIN_EXPIRY",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 64231,
                                      "src": "8584:33:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_uint64_$",
                                        "typeString": "function () pure external returns (uint64)"
                                      }
                                    },
                                    "id": 60366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8584:35:84",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "8563:56:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8545:74:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 60373,
                              "nodeType": "IfStatement",
                              "src": "8541:137:84",
                              "trueBody": {
                                "id": 60372,
                                "nodeType": "Block",
                                "src": "8621:57:84",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 60369,
                                        "name": "ExceedAuctionDomainExpiry",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 64377,
                                        "src": "8640:25:84",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 60370,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8640:27:84",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 60371,
                                    "nodeType": "RevertStatement",
                                    "src": "8633:34:84"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 60385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 60374,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60248,
                                    "src": "8748:3:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                                      "typeString": "struct INSDomainPrice.UnitPrice memory"
                                    }
                                  },
                                  "id": 60376,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8752:3:84",
                                  "memberName": "usd",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64384,
                                  "src": "8748:7:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 60379,
                                      "name": "_taxRatio",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59687,
                                      "src": "8770:9:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 60381,
                                          "name": "lbHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 60257,
                                          "src": "8797:6:84",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 60380,
                                        "name": "_getDomainPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 60774,
                                        "src": "8781:15:84",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$",
                                          "typeString": "function (bytes32) view returns (uint256)"
                                        }
                                      },
                                      "id": 60382,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8781:23:84",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 60383,
                                      "name": "MAX_PERCENTAGE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59665,
                                      "src": "8806:14:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    ],
                                    "expression": {
                                      "id": 60377,
                                      "name": "Math",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53173,
                                      "src": "8758:4:84",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Math_$53173_$",
                                        "typeString": "type(library Math)"
                                      }
                                    },
                                    "id": 60378,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8763:6:84",
                                    "memberName": "mulDiv",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52521,
                                    "src": "8758:11:84",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 60384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8758:63:84",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8748:73:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 60386,
                              "nodeType": "ExpressionStatement",
                              "src": "8748:73:84"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 60390,
                  "nodeType": "IfStatement",
                  "src": "7859:977:84",
                  "trueBody": {
                    "id": 60280,
                    "nodeType": "Block",
                    "src": "7890:63:84",
                    "statements": [
                      {
                        "expression": {
                          "id": 60278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 60271,
                              "name": "basePrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60245,
                              "src": "7898:9:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                                "typeString": "struct INSDomainPrice.UnitPrice memory"
                              }
                            },
                            "id": 60273,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7908:3:84",
                            "memberName": "usd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64384,
                            "src": "7898:13:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 60277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 60274,
                              "name": "duration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60241,
                              "src": "7914:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 60276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "~",
                              "prefix": true,
                              "src": "7925:21:84",
                              "subExpression": {
                                "id": 60275,
                                "name": "overriddenRenewalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60263,
                                "src": "7926:20:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7914:32:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7898:48:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60279,
                        "nodeType": "ExpressionStatement",
                        "src": "7898:48:84"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 60398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60391,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60248,
                        "src": "8842:3:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                          "typeString": "struct INSDomainPrice.UnitPrice memory"
                        }
                      },
                      "id": 60393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8846:3:84",
                      "memberName": "ron",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64386,
                      "src": "8842:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 60395,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60248,
                            "src": "8868:3:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                              "typeString": "struct INSDomainPrice.UnitPrice memory"
                            }
                          },
                          "id": 60396,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8872:3:84",
                          "memberName": "usd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64384,
                          "src": "8868:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60394,
                        "name": "convertUSDToRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60440,
                        "src": "8852:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 60397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8852:24:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8842:34:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60399,
                  "nodeType": "ExpressionStatement",
                  "src": "8842:34:84"
                },
                {
                  "expression": {
                    "id": 60407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60400,
                        "name": "basePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60245,
                        "src": "8882:9:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                          "typeString": "struct INSDomainPrice.UnitPrice memory"
                        }
                      },
                      "id": 60402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8892:3:84",
                      "memberName": "ron",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64386,
                      "src": "8882:13:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 60404,
                            "name": "basePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60245,
                            "src": "8914:9:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                              "typeString": "struct INSDomainPrice.UnitPrice memory"
                            }
                          },
                          "id": 60405,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8924:3:84",
                          "memberName": "usd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64384,
                          "src": "8914:13:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60403,
                        "name": "convertUSDToRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60440,
                        "src": "8898:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 60406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8898:30:84",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8882:46:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60408,
                  "nodeType": "ExpressionStatement",
                  "src": "8882:46:84"
                }
              ]
            },
            "baseFunctions": [
              64541
            ],
            "documentation": {
              "id": 60237,
              "nodeType": "StructuredDocumentation",
              "src": "7522:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "f4651f49",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRenewalFee",
            "nameLocation": "7575:13:84",
            "parameters": {
              "id": 60242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60239,
                  "mutability": "mutable",
                  "name": "label",
                  "nameLocation": "7603:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60410,
                  "src": "7589:19:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60238,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7589:6:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60241,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "7618:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60410,
                  "src": "7610:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7610:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7588:39:84"
            },
            "returnParameters": {
              "id": 60249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60245,
                  "mutability": "mutable",
                  "name": "basePrice",
                  "nameLocation": "7678:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60410,
                  "src": "7661:26:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                    "typeString": "struct INSDomainPrice.UnitPrice"
                  },
                  "typeName": {
                    "id": 60244,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60243,
                      "name": "UnitPrice",
                      "nameLocations": [
                        "7661:9:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64387,
                      "src": "7661:9:84"
                    },
                    "referencedDeclaration": 64387,
                    "src": "7661:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UnitPrice_$64387_storage_ptr",
                      "typeString": "struct INSDomainPrice.UnitPrice"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60248,
                  "mutability": "mutable",
                  "name": "tax",
                  "nameLocation": "7706:3:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60410,
                  "src": "7689:20:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UnitPrice_$64387_memory_ptr",
                    "typeString": "struct INSDomainPrice.UnitPrice"
                  },
                  "typeName": {
                    "id": 60247,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60246,
                      "name": "UnitPrice",
                      "nameLocations": [
                        "7689:9:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64387,
                      "src": "7689:9:84"
                    },
                    "referencedDeclaration": 64387,
                    "src": "7689:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UnitPrice_$64387_storage_ptr",
                      "typeString": "struct INSDomainPrice.UnitPrice"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7660:50:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60440,
            "nodeType": "FunctionDefinition",
            "src": "8981:286:84",
            "nodes": [],
            "body": {
              "id": 60439,
              "nodeType": "Block",
              "src": "9059:208:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60428,
                        "name": "usdWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60413,
                        "src": "9178:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60433,
                                "name": "USD_DECIMALS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59661,
                                "src": "9218:12:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 60432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9211:6:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": {
                                "id": 60431,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "9211:6:84",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9211:20:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 60430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9205:5:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int32_$",
                            "typeString": "type(int32)"
                          },
                          "typeName": {
                            "id": 60429,
                            "name": "int32",
                            "nodeType": "ElementaryTypeName",
                            "src": "9205:5:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9205:27:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 60436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9253:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 60425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "9151:3:84",
                            "subExpression": {
                              "hexValue": "3138",
                              "id": 60424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9152:2:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_18_by_1",
                              "typeString": "int_const -18"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_18_by_1",
                              "typeString": "int_const -18"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 60420,
                                "name": "_pythIdForRONUSD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59696,
                                "src": "9098:16:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 60421,
                                "name": "_maxAcceptableAge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59693,
                                "src": "9116:17:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60418,
                                "name": "_pyth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59680,
                                "src": "9072:5:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPyth_$54460",
                                  "typeString": "contract IPyth"
                                }
                              },
                              "id": 60419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9078:19:84",
                              "memberName": "getPriceNoOlderThan",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54392,
                              "src": "9072:25:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$54493_memory_ptr_$",
                                "typeString": "function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"
                              }
                            },
                            "id": 60422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9072:62:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Price_$54493_memory_ptr",
                              "typeString": "struct PythStructs.Price memory"
                            }
                          },
                          "id": 60423,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9135:7:84",
                          "memberName": "inverse",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67403,
                          "src": "9072:70:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Price_$54493_memory_ptr_$_t_int32_$returns$_t_struct$_Price_$54493_memory_ptr_$attached_to$_t_struct$_Price_$54493_memory_ptr_$",
                            "typeString": "function (struct PythStructs.Price memory,int32) pure returns (struct PythStructs.Price memory)"
                          }
                        },
                        "id": 60426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "9145:4:84"
                        ],
                        "names": [
                          "expo"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9072:85:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$54493_memory_ptr",
                          "typeString": "struct PythStructs.Price memory"
                        }
                      },
                      "id": 60427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9158:3:84",
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67295,
                      "src": "9072:89:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Price_$54493_memory_ptr_$_t_uint256_$_t_int32_$_t_int32_$returns$_t_uint256_$attached_to$_t_struct$_Price_$54493_memory_ptr_$",
                        "typeString": "function (struct PythStructs.Price memory,uint256,int32,int32) pure returns (uint256)"
                      }
                    },
                    "id": 60437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "9170:6:84",
                      "9192:11:84",
                      "9240:11:84"
                    ],
                    "names": [
                      "inpWei",
                      "inpDecimals",
                      "outDecimals"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9072:190:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 60417,
                  "id": 60438,
                  "nodeType": "Return",
                  "src": "9065:197:84"
                }
              ]
            },
            "baseFunctions": [
              64602
            ],
            "documentation": {
              "id": 60411,
              "nodeType": "StructuredDocumentation",
              "src": "8937:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "7174026e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertUSDToRON",
            "nameLocation": "8990:15:84",
            "parameters": {
              "id": 60414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60413,
                  "mutability": "mutable",
                  "name": "usdWei",
                  "nameLocation": "9014:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60440,
                  "src": "9006:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9006:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9005:16:84"
            },
            "returnParameters": {
              "id": 60417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60416,
                  "mutability": "mutable",
                  "name": "ronWei",
                  "nameLocation": "9051:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60440,
                  "src": "9043:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9043:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9042:16:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60466,
            "nodeType": "FunctionDefinition",
            "src": "9315:263:84",
            "nodes": [],
            "body": {
              "id": 60465,
              "nodeType": "Block",
              "src": "9393:185:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60454,
                        "name": "ronWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60443,
                        "src": "9489:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3138",
                        "id": 60455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9516:2:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60460,
                                "name": "USD_DECIMALS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59661,
                                "src": "9552:12:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 60459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9545:6:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint32_$",
                                "typeString": "type(uint32)"
                              },
                              "typeName": {
                                "id": 60458,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "9545:6:84",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9545:20:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 60457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9539:5:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int32_$",
                            "typeString": "type(int32)"
                          },
                          "typeName": {
                            "id": 60456,
                            "name": "int32",
                            "nodeType": "ElementaryTypeName",
                            "src": "9539:5:84",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9539:27:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        {
                          "typeIdentifier": "t_int32",
                          "typeString": "int32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 60450,
                            "name": "_pythIdForRONUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59696,
                            "src": "9432:16:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 60451,
                            "name": "_maxAcceptableAge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59693,
                            "src": "9450:17:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 60448,
                            "name": "_pyth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59680,
                            "src": "9406:5:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPyth_$54460",
                              "typeString": "contract IPyth"
                            }
                          },
                          "id": 60449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9412:19:84",
                          "memberName": "getPriceNoOlderThan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54392,
                          "src": "9406:25:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$54493_memory_ptr_$",
                            "typeString": "function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"
                          }
                        },
                        "id": 60452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9406:62:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Price_$54493_memory_ptr",
                          "typeString": "struct PythStructs.Price memory"
                        }
                      },
                      "id": 60453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9469:3:84",
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67295,
                      "src": "9406:66:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Price_$54493_memory_ptr_$_t_uint256_$_t_int32_$_t_int32_$returns$_t_uint256_$attached_to$_t_struct$_Price_$54493_memory_ptr_$",
                        "typeString": "function (struct PythStructs.Price memory,uint256,int32,int32) pure returns (uint256)"
                      }
                    },
                    "id": 60463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "9481:6:84",
                      "9503:11:84",
                      "9526:11:84"
                    ],
                    "names": [
                      "inpWei",
                      "inpDecimals",
                      "outDecimals"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9406:167:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 60447,
                  "id": 60464,
                  "nodeType": "Return",
                  "src": "9399:174:84"
                }
              ]
            },
            "baseFunctions": [
              64610
            ],
            "documentation": {
              "id": 60441,
              "nodeType": "StructuredDocumentation",
              "src": "9271:41:84",
              "text": " @inheritdoc INSDomainPrice"
            },
            "functionSelector": "037f1769",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertRONToUSD",
            "nameLocation": "9324:15:84",
            "parameters": {
              "id": 60444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60443,
                  "mutability": "mutable",
                  "name": "ronWei",
                  "nameLocation": "9348:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60466,
                  "src": "9340:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9340:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9339:16:84"
            },
            "returnParameters": {
              "id": 60447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60446,
                  "mutability": "mutable",
                  "name": "usdWei",
                  "nameLocation": "9385:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60466,
                  "src": "9377:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9377:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9376:16:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60513,
            "nodeType": "FunctionDefinition",
            "src": "9676:419:84",
            "nodes": [],
            "body": {
              "id": 60512,
              "nodeType": "Block",
              "src": "9905:190:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60484,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60482,
                      "src": "9911:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 60485,
                        "name": "lbHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60470,
                        "src": "9920:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 60486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9929:6:84",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9920:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9911:24:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60488,
                  "nodeType": "ExpressionStatement",
                  "src": "9911:24:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 60501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 60496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60489,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60482,
                            "src": "9945:6:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 60490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9955:1:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9945:11:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 60492,
                              "name": "ronPrices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60473,
                              "src": "9960:9:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 60493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9970:6:84",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9960:16:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 60494,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60482,
                            "src": "9980:6:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9960:26:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9945:41:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60497,
                            "name": "proofHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60476,
                            "src": "9990:11:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 60498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10002:6:84",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9990:18:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 60499,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60482,
                          "src": "10012:6:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9990:28:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9945:73:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 60502,
                          "name": "setTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60479,
                          "src": "10022:8:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 60503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10031:6:84",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "10022:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 60504,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60482,
                        "src": "10041:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10022:25:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9945:102:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60511,
                  "nodeType": "IfStatement",
                  "src": "9941:150:84",
                  "trueBody": {
                    "id": 60510,
                    "nodeType": "Block",
                    "src": "10049:42:84",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 60507,
                            "name": "InvalidArrayLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64373,
                            "src": "10064:18:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 60508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10064:20:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60509,
                        "nodeType": "RevertStatement",
                        "src": "10057:27:84"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 60467,
              "nodeType": "StructuredDocumentation",
              "src": "9582:91:84",
              "text": " @dev Reverts if the arguments of the method {bulkSetDomainPrice} is invalid."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireBulkSetDomainPriceArgumentsValid",
            "nameLocation": "9685:40:84",
            "parameters": {
              "id": 60480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60470,
                  "mutability": "mutable",
                  "name": "lbHashes",
                  "nameLocation": "9750:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60513,
                  "src": "9731:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60468,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "9731:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60469,
                    "nodeType": "ArrayTypeName",
                    "src": "9731:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60473,
                  "mutability": "mutable",
                  "name": "ronPrices",
                  "nameLocation": "9783:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60513,
                  "src": "9764:28:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60471,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9764:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60472,
                    "nodeType": "ArrayTypeName",
                    "src": "9764:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60476,
                  "mutability": "mutable",
                  "name": "proofHashes",
                  "nameLocation": "9817:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60513,
                  "src": "9798:30:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60474,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "9798:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60475,
                    "nodeType": "ArrayTypeName",
                    "src": "9798:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60479,
                  "mutability": "mutable",
                  "name": "setTypes",
                  "nameLocation": "9853:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60513,
                  "src": "9834:27:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60477,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9834:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60478,
                    "nodeType": "ArrayTypeName",
                    "src": "9834:9:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9725:140:84"
            },
            "returnParameters": {
              "id": 60483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60482,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "9897:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60513,
                  "src": "9889:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9889:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9888:16:84"
            },
            "scope": 60775,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60578,
            "nodeType": "FunctionDefinition",
            "src": "10214:503:84",
            "nodes": [],
            "body": {
              "id": 60577,
              "nodeType": "Block",
              "src": "10400:317:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60532,
                      "mutability": "mutable",
                      "name": "usdPrice",
                      "nameLocation": "10414:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60577,
                      "src": "10406:16:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10406:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60536,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60534,
                        "name": "ronPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60520,
                        "src": "10441:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60533,
                      "name": "convertRONToUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60466,
                      "src": "10425:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 60535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10425:25:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10406:44:84"
                },
                {
                  "assignments": [
                    60539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60539,
                      "mutability": "mutable",
                      "name": "dp",
                      "nameLocation": "10481:2:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60577,
                      "src": "10456:27:84",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                        "typeString": "struct TimestampWrapper"
                      },
                      "typeName": {
                        "id": 60538,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60537,
                          "name": "TimestampWrapper",
                          "nameLocations": [
                            "10456:16:84"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66547,
                          "src": "10456:16:84"
                        },
                        "referencedDeclaration": 66547,
                        "src": "10456:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                          "typeString": "struct TimestampWrapper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60543,
                  "initialValue": {
                    "baseExpression": {
                      "id": 60540,
                      "name": "_dp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59711,
                      "src": "10486:3:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TimestampWrapper_$66547_storage_$",
                        "typeString": "mapping(bytes32 => struct TimestampWrapper storage ref)"
                      }
                    },
                    "id": 60542,
                    "indexExpression": {
                      "id": 60541,
                      "name": "lbHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60518,
                      "src": "10490:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10486:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage",
                      "typeString": "struct TimestampWrapper storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10456:41:84"
                },
                {
                  "expression": {
                    "id": 60551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60544,
                      "name": "updated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60529,
                      "src": "10503:7:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 60550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60545,
                        "name": "forced",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60526,
                        "src": "10513:6:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 60546,
                            "name": "dp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60539,
                            "src": "10523:2:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                              "typeString": "struct TimestampWrapper storage pointer"
                            }
                          },
                          "id": 60547,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10526:5:84",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66544,
                          "src": "10523:8:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 60548,
                          "name": "usdPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60532,
                          "src": "10534:8:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10523:19:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10513:29:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10503:39:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60552,
                  "nodeType": "ExpressionStatement",
                  "src": "10503:39:84"
                },
                {
                  "condition": {
                    "id": 60553,
                    "name": "updated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60529,
                    "src": "10553:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60576,
                  "nodeType": "IfStatement",
                  "src": "10549:164:84",
                  "trueBody": {
                    "id": 60575,
                    "nodeType": "Block",
                    "src": "10562:151:84",
                    "statements": [
                      {
                        "expression": {
                          "id": 60558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 60554,
                              "name": "dp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60539,
                              "src": "10570:2:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                                "typeString": "struct TimestampWrapper storage pointer"
                              }
                            },
                            "id": 60556,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10573:5:84",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66544,
                            "src": "10570:8:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60557,
                            "name": "usdPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60532,
                            "src": "10581:8:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10570:19:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60559,
                        "nodeType": "ExpressionStatement",
                        "src": "10570:19:84"
                      },
                      {
                        "expression": {
                          "id": 60565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 60560,
                              "name": "dp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60539,
                              "src": "10597:2:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                                "typeString": "struct TimestampWrapper storage pointer"
                              }
                            },
                            "id": 60562,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10600:9:84",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66546,
                            "src": "10597:12:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 60563,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10612:5:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 60564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10618:9:84",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10612:15:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10597:30:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60566,
                        "nodeType": "ExpressionStatement",
                        "src": "10597:30:84"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 60568,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60516,
                              "src": "10659:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60569,
                              "name": "lbHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60518,
                              "src": "10669:6:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 60570,
                              "name": "usdPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60532,
                              "src": "10677:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 60571,
                              "name": "proofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60522,
                              "src": "10687:9:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 60572,
                              "name": "setType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60524,
                              "src": "10698:7:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 60567,
                            "name": "DomainPriceUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64432,
                            "src": "10640:18:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (address,bytes32,uint256,bytes32,uint256)"
                            }
                          },
                          "id": 60573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10640:66:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60574,
                        "nodeType": "EmitStatement",
                        "src": "10635:71:84"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 60514,
              "nodeType": "StructuredDocumentation",
              "src": "10099:112:84",
              "text": " @dev Helper method to set domain price.\n Emits an event {DomainPriceUpdated} optionally."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setDomainPrice",
            "nameLocation": "10223:15:84",
            "parameters": {
              "id": 60527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60516,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10252:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10244:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10244:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60518,
                  "mutability": "mutable",
                  "name": "lbHash",
                  "nameLocation": "10274:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10266:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10266:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60520,
                  "mutability": "mutable",
                  "name": "ronPrice",
                  "nameLocation": "10294:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10286:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10286:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60522,
                  "mutability": "mutable",
                  "name": "proofHash",
                  "nameLocation": "10316:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10308:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60521,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10308:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60524,
                  "mutability": "mutable",
                  "name": "setType",
                  "nameLocation": "10339:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10331:15:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10331:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60526,
                  "mutability": "mutable",
                  "name": "forced",
                  "nameLocation": "10357:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10352:11:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60525,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10238:129:84"
            },
            "returnParameters": {
              "id": 60530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60529,
                  "mutability": "mutable",
                  "name": "updated",
                  "nameLocation": "10391:7:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60578,
                  "src": "10386:12:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60528,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10386:4:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10385:14:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60595,
            "nodeType": "FunctionDefinition",
            "src": "10819:121:84",
            "nodes": [],
            "body": {
              "id": 60594,
              "nodeType": "Block",
              "src": "10865:75:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60584,
                      "name": "_taxRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59687,
                      "src": "10871:9:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60585,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60581,
                      "src": "10883:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10871:17:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60587,
                  "nodeType": "ExpressionStatement",
                  "src": "10871:17:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60589,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51922,
                          "src": "10915:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10915:12:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60591,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60581,
                        "src": "10929:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60588,
                      "name": "TaxRatioUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64394,
                      "src": "10899:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 60592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10899:36:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60593,
                  "nodeType": "EmitStatement",
                  "src": "10894:41:84"
                }
              ]
            },
            "documentation": {
              "id": 60579,
              "nodeType": "StructuredDocumentation",
              "src": "10721:95:84",
              "text": " @dev Sets renewal reservation ratio.\n Emits an event {TaxRatioUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTaxRatio",
            "nameLocation": "10828:12:84",
            "parameters": {
              "id": 60582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60581,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "10849:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60595,
                  "src": "10841:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10841:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10840:15:84"
            },
            "returnParameters": {
              "id": 60583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10865:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60616,
            "nodeType": "FunctionDefinition",
            "src": "11050:243:84",
            "nodes": [],
            "body": {
              "id": 60615,
              "nodeType": "Block",
              "src": "11137:156:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60602,
                      "name": "_dpDownScaler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59700,
                      "src": "11143:13:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage",
                        "typeString": "struct PeriodScaler storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60603,
                      "name": "domainPriceScaleRule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60599,
                      "src": "11159:20:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                        "typeString": "struct PeriodScaler calldata"
                      }
                    },
                    "src": "11143:36:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage",
                      "typeString": "struct PeriodScaler storage ref"
                    }
                  },
                  "id": 60605,
                  "nodeType": "ExpressionStatement",
                  "src": "11143:36:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60607,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51922,
                          "src": "11218:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11218:12:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60609,
                          "name": "domainPriceScaleRule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60599,
                          "src": "11232:20:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                            "typeString": "struct PeriodScaler calldata"
                          }
                        },
                        "id": 60610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11253:5:84",
                        "memberName": "ratio",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66621,
                        "src": "11232:26:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      },
                      {
                        "expression": {
                          "id": 60611,
                          "name": "domainPriceScaleRule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60599,
                          "src": "11260:20:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                            "typeString": "struct PeriodScaler calldata"
                          }
                        },
                        "id": 60612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11281:6:84",
                        "memberName": "period",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66623,
                        "src": "11260:27:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 60606,
                      "name": "DomainPriceScaleRuleUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64441,
                      "src": "11190:27:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint192_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint192,uint64)"
                      }
                    },
                    "id": 60613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11190:98:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60614,
                  "nodeType": "EmitStatement",
                  "src": "11185:103:84"
                }
              ]
            },
            "documentation": {
              "id": 60596,
              "nodeType": "StructuredDocumentation",
              "src": "10944:103:84",
              "text": " @dev Sets domain price scale rule.\n Emits events {DomainPriceScaleRuleUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setDomainPriceScaleRule",
            "nameLocation": "11059:24:84",
            "parameters": {
              "id": 60600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60599,
                  "mutability": "mutable",
                  "name": "domainPriceScaleRule",
                  "nameLocation": "11106:20:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60616,
                  "src": "11084:42:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PeriodScaler_$66624_calldata_ptr",
                    "typeString": "struct PeriodScaler"
                  },
                  "typeName": {
                    "id": 60598,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60597,
                      "name": "PeriodScaler",
                      "nameLocations": [
                        "11084:12:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66624,
                      "src": "11084:12:84"
                    },
                    "referencedDeclaration": 66624,
                    "src": "11084:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage_ptr",
                      "typeString": "struct PeriodScaler"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11083:44:84"
            },
            "returnParameters": {
              "id": 60601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11137:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60700,
            "nodeType": "FunctionDefinition",
            "src": "11450:754:84",
            "nodes": [],
            "body": {
              "id": 60699,
              "nodeType": "Block",
              "src": "11527:677:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60625,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11541:8:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60699,
                      "src": "11533:16:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 60624,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11533:7:84",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60628,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60626,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51922,
                      "src": "11552:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 60627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11552:12:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11533:31:84"
                },
                {
                  "assignments": [
                    60631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60631,
                      "mutability": "mutable",
                      "name": "renewalFee",
                      "nameLocation": "11588:10:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60699,
                      "src": "11570:28:84",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee"
                      },
                      "typeName": {
                        "id": 60630,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60629,
                          "name": "RenewalFee",
                          "nameLocations": [
                            "11570:10:84"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64382,
                          "src": "11570:10:84"
                        },
                        "referencedDeclaration": 64382,
                        "src": "11570:10:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RenewalFee_$64382_storage_ptr",
                          "typeString": "struct INSDomainPrice.RenewalFee"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60632,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11570:28:84"
                },
                {
                  "assignments": [
                    60634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60634,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "11612:6:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60699,
                      "src": "11604:14:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11604:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60637,
                  "initialValue": {
                    "expression": {
                      "id": 60635,
                      "name": "renewalFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60621,
                      "src": "11621:11:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee calldata[] calldata"
                      }
                    },
                    "id": 60636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11633:6:84",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11621:18:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11604:35:84"
                },
                {
                  "assignments": [
                    60639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60639,
                      "mutability": "mutable",
                      "name": "maxRenewalFeeLength",
                      "nameLocation": "11653:19:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60699,
                      "src": "11645:27:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60638,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11645:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60641,
                  "initialValue": {
                    "id": 60640,
                    "name": "_rnfMaxLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59690,
                    "src": "11675:13:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11645:43:84"
                },
                {
                  "body": {
                    "id": 60683,
                    "nodeType": "Block",
                    "src": "11724:308:84",
                    "statements": [
                      {
                        "expression": {
                          "id": 60652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60648,
                            "name": "renewalFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60631,
                            "src": "11732:10:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                              "typeString": "struct INSDomainPrice.RenewalFee memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 60649,
                              "name": "renewalFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60621,
                              "src": "11745:11:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct INSDomainPrice.RenewalFee calldata[] calldata"
                              }
                            },
                            "id": 60651,
                            "indexExpression": {
                              "id": 60650,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60643,
                              "src": "11757:1:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11745:14:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RenewalFee_$64382_calldata_ptr",
                              "typeString": "struct INSDomainPrice.RenewalFee calldata"
                            }
                          },
                          "src": "11732:27:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                            "typeString": "struct INSDomainPrice.RenewalFee memory"
                          }
                        },
                        "id": 60653,
                        "nodeType": "ExpressionStatement",
                        "src": "11732:27:84"
                      },
                      {
                        "expression": {
                          "id": 60661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60654,
                            "name": "maxRenewalFeeLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60639,
                            "src": "11767:19:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 60657,
                                "name": "maxRenewalFeeLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60639,
                                "src": "11798:19:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 60658,
                                  "name": "renewalFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60631,
                                  "src": "11819:10:84",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                    "typeString": "struct INSDomainPrice.RenewalFee memory"
                                  }
                                },
                                "id": 60659,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11830:11:84",
                                "memberName": "labelLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64379,
                                "src": "11819:22:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 60655,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53173,
                                "src": "11789:4:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$53173_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 60656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11794:3:84",
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52332,
                              "src": "11789:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 60660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11789:53:84",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11767:75:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60662,
                        "nodeType": "ExpressionStatement",
                        "src": "11767:75:84"
                      },
                      {
                        "expression": {
                          "id": 60669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 60663,
                              "name": "_rnFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59705,
                              "src": "11850:6:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 60666,
                            "indexExpression": {
                              "expression": {
                                "id": 60664,
                                "name": "renewalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60631,
                                "src": "11857:10:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                  "typeString": "struct INSDomainPrice.RenewalFee memory"
                                }
                              },
                              "id": 60665,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11868:11:84",
                              "memberName": "labelLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64379,
                              "src": "11857:22:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11850:30:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 60667,
                              "name": "renewalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60631,
                              "src": "11883:10:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                "typeString": "struct INSDomainPrice.RenewalFee memory"
                              }
                            },
                            "id": 60668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11894:3:84",
                            "memberName": "fee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64381,
                            "src": "11883:14:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11850:47:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60670,
                        "nodeType": "ExpressionStatement",
                        "src": "11850:47:84"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 60672,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60625,
                              "src": "11936:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 60673,
                                "name": "renewalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60631,
                                "src": "11946:10:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                  "typeString": "struct INSDomainPrice.RenewalFee memory"
                                }
                              },
                              "id": 60674,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11957:11:84",
                              "memberName": "labelLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64379,
                              "src": "11946:22:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 60675,
                                "name": "renewalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60631,
                                "src": "11970:10:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RenewalFee_$64382_memory_ptr",
                                  "typeString": "struct INSDomainPrice.RenewalFee memory"
                                }
                              },
                              "id": 60676,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11981:3:84",
                              "memberName": "fee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64381,
                              "src": "11970:14:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 60671,
                            "name": "RenewalFeeByLengthUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64410,
                            "src": "11910:25:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 60677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11910:75:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60678,
                        "nodeType": "EmitStatement",
                        "src": "11905:80:84"
                      },
                      {
                        "id": 60682,
                        "nodeType": "UncheckedBlock",
                        "src": "11994:32:84",
                        "statements": [
                          {
                            "expression": {
                              "id": 60680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "12014:3:84",
                              "subExpression": {
                                "id": 60679,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60643,
                                "src": "12016:1:84",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60681,
                            "nodeType": "ExpressionStatement",
                            "src": "12014:3:84"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60645,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60643,
                      "src": "11711:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60646,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60634,
                      "src": "11715:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11711:10:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60684,
                  "initializationExpression": {
                    "assignments": [
                      60643
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60643,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11708:1:84",
                        "nodeType": "VariableDeclaration",
                        "scope": 60684,
                        "src": "11700:9:84",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11700:7:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60644,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11700:9:84"
                  },
                  "nodeType": "ForStatement",
                  "src": "11695:337:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60685,
                      "name": "maxRenewalFeeLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60639,
                      "src": "12042:19:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 60686,
                      "name": "_rnfMaxLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59690,
                      "src": "12065:13:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12042:36:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60698,
                  "nodeType": "IfStatement",
                  "src": "12038:162:84",
                  "trueBody": {
                    "id": 60697,
                    "nodeType": "Block",
                    "src": "12080:120:84",
                    "statements": [
                      {
                        "expression": {
                          "id": 60690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60688,
                            "name": "_rnfMaxLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59690,
                            "src": "12088:13:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 60689,
                            "name": "maxRenewalFeeLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60639,
                            "src": "12104:19:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12088:35:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60691,
                        "nodeType": "ExpressionStatement",
                        "src": "12088:35:84"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 60693,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60625,
                              "src": "12163:8:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60694,
                              "name": "maxRenewalFeeLength",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60639,
                              "src": "12173:19:84",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 60692,
                            "name": "MaxRenewalFeeLengthUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64401,
                            "src": "12136:26:84",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 60695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12136:57:84",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60696,
                        "nodeType": "EmitStatement",
                        "src": "12131:62:84"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 60617,
              "nodeType": "StructuredDocumentation",
              "src": "11297:150:84",
              "text": " @dev Sets renewal fee.\n Emits events {RenewalFeeByLengthUpdated}.\n Emits an event {MaxRenewalFeeLengthUpdated} optionally."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRenewalFeeByLengths",
            "nameLocation": "11459:23:84",
            "parameters": {
              "id": 60622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60621,
                  "mutability": "mutable",
                  "name": "renewalFees",
                  "nameLocation": "11505:11:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60700,
                  "src": "11483:33:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct INSDomainPrice.RenewalFee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60619,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 60618,
                        "name": "RenewalFee",
                        "nameLocations": [
                          "11483:10:84"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 64382,
                        "src": "11483:10:84"
                      },
                      "referencedDeclaration": 64382,
                      "src": "11483:10:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RenewalFee_$64382_storage_ptr",
                        "typeString": "struct INSDomainPrice.RenewalFee"
                      }
                    },
                    "id": 60620,
                    "nodeType": "ArrayTypeName",
                    "src": "11483:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RenewalFee_$64382_storage_$dyn_storage_ptr",
                      "typeString": "struct INSDomainPrice.RenewalFee[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11482:35:84"
            },
            "returnParameters": {
              "id": 60623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11527:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60732,
            "nodeType": "FunctionDefinition",
            "src": "12305:296:84",
            "nodes": [],
            "body": {
              "id": 60731,
              "nodeType": "Block",
              "src": "12407:194:84",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60711,
                      "name": "_pyth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59680,
                      "src": "12413:5:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPyth_$54460",
                        "typeString": "contract IPyth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60712,
                      "name": "pyth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60704,
                      "src": "12421:4:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPyth_$54460",
                        "typeString": "contract IPyth"
                      }
                    },
                    "src": "12413:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPyth_$54460",
                      "typeString": "contract IPyth"
                    }
                  },
                  "id": 60714,
                  "nodeType": "ExpressionStatement",
                  "src": "12413:12:84"
                },
                {
                  "expression": {
                    "id": 60717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60715,
                      "name": "_maxAcceptableAge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59693,
                      "src": "12431:17:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60716,
                      "name": "maxAcceptableAge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60706,
                      "src": "12451:16:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12431:36:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60718,
                  "nodeType": "ExpressionStatement",
                  "src": "12431:36:84"
                },
                {
                  "expression": {
                    "id": 60721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60719,
                      "name": "_pythIdForRONUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59696,
                      "src": "12473:16:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60720,
                      "name": "pythIdForRONUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60708,
                      "src": "12492:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12473:34:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 60722,
                  "nodeType": "ExpressionStatement",
                  "src": "12473:34:84"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 60724,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51922,
                          "src": "12542:10:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 60725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12542:12:84",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60726,
                        "name": "pyth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60704,
                        "src": "12556:4:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        }
                      },
                      {
                        "id": 60727,
                        "name": "maxAcceptableAge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60706,
                        "src": "12562:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60728,
                        "name": "pythIdForRONUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60708,
                        "src": "12580:15:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IPyth_$54460",
                          "typeString": "contract IPyth"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 60723,
                      "name": "PythOracleConfigUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64453,
                      "src": "12518:23:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IPyth_$54460_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,contract IPyth,uint256,bytes32)"
                      }
                    },
                    "id": 60729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12518:78:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60730,
                  "nodeType": "EmitStatement",
                  "src": "12513:83:84"
                }
              ]
            },
            "documentation": {
              "id": 60701,
              "nodeType": "StructuredDocumentation",
              "src": "12208:94:84",
              "text": " @dev Sets Pyth Oracle config.\n Emits events {PythOracleConfigUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setPythOracleConfig",
            "nameLocation": "12314:20:84",
            "parameters": {
              "id": 60709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60704,
                  "mutability": "mutable",
                  "name": "pyth",
                  "nameLocation": "12341:4:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60732,
                  "src": "12335:10:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPyth_$54460",
                    "typeString": "contract IPyth"
                  },
                  "typeName": {
                    "id": 60703,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60702,
                      "name": "IPyth",
                      "nameLocations": [
                        "12335:5:84"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54460,
                      "src": "12335:5:84"
                    },
                    "referencedDeclaration": 54460,
                    "src": "12335:5:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPyth_$54460",
                      "typeString": "contract IPyth"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60706,
                  "mutability": "mutable",
                  "name": "maxAcceptableAge",
                  "nameLocation": "12355:16:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60732,
                  "src": "12347:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12347:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60708,
                  "mutability": "mutable",
                  "name": "pythIdForRONUSD",
                  "nameLocation": "12381:15:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60732,
                  "src": "12373:23:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60707,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12373:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12334:63:84"
            },
            "returnParameters": {
              "id": 60710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12407:0:84"
            },
            "scope": 60775,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60774,
            "nodeType": "FunctionDefinition",
            "src": "12714:361:84",
            "nodes": [],
            "body": {
              "id": 60773,
              "nodeType": "Block",
              "src": "12787:288:84",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60742,
                      "mutability": "mutable",
                      "name": "dp",
                      "nameLocation": "12818:2:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60773,
                      "src": "12793:27:84",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                        "typeString": "struct TimestampWrapper"
                      },
                      "typeName": {
                        "id": 60741,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60740,
                          "name": "TimestampWrapper",
                          "nameLocations": [
                            "12793:16:84"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66547,
                          "src": "12793:16:84"
                        },
                        "referencedDeclaration": 66547,
                        "src": "12793:16:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                          "typeString": "struct TimestampWrapper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60746,
                  "initialValue": {
                    "baseExpression": {
                      "id": 60743,
                      "name": "_dp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59711,
                      "src": "12823:3:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TimestampWrapper_$66547_storage_$",
                        "typeString": "mapping(bytes32 => struct TimestampWrapper storage ref)"
                      }
                    },
                    "id": 60745,
                    "indexExpression": {
                      "id": 60744,
                      "name": "lbHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60735,
                      "src": "12827:6:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12823:11:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage",
                      "typeString": "struct TimestampWrapper storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12793:41:84"
                },
                {
                  "assignments": [
                    60748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60748,
                      "mutability": "mutable",
                      "name": "lastSyncedAt",
                      "nameLocation": "12848:12:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60773,
                      "src": "12840:20:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60747,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12840:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60751,
                  "initialValue": {
                    "expression": {
                      "id": 60749,
                      "name": "dp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60742,
                      "src": "12863:2:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                        "typeString": "struct TimestampWrapper storage pointer"
                      }
                    },
                    "id": 60750,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12866:9:84",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66546,
                    "src": "12863:12:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12840:35:84"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60752,
                      "name": "lastSyncedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60748,
                      "src": "12885:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12901:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12885:17:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60757,
                  "nodeType": "IfStatement",
                  "src": "12881:31:84",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 60755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12911:1:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 60739,
                    "id": 60756,
                    "nodeType": "Return",
                    "src": "12904:8:84"
                  }
                },
                {
                  "assignments": [
                    60759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60759,
                      "mutability": "mutable",
                      "name": "passedDuration",
                      "nameLocation": "12927:14:84",
                      "nodeType": "VariableDeclaration",
                      "scope": 60773,
                      "src": "12919:22:84",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60758,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12919:7:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60764,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 60760,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12944:5:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 60761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12950:9:84",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12944:15:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 60762,
                      "name": "lastSyncedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60748,
                      "src": "12962:12:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12944:30:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12919:55:84"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60767,
                          "name": "dp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60742,
                          "src": "13016:2:84",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TimestampWrapper_$66547_storage_ptr",
                            "typeString": "struct TimestampWrapper storage pointer"
                          }
                        },
                        "id": 60768,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13019:5:84",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66544,
                        "src": "13016:8:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60769,
                        "name": "MAX_PERCENTAGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59665,
                        "src": "13032:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 60770,
                        "name": "passedDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60759,
                        "src": "13053:14:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60765,
                        "name": "_dpDownScaler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59700,
                        "src": "12987:13:84",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PeriodScaler_$66624_storage",
                          "typeString": "struct PeriodScaler storage ref"
                        }
                      },
                      "id": 60766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13001:9:84",
                      "memberName": "scaleDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66714,
                      "src": "12987:23:84",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PeriodScaler_$66624_memory_ptr_$_t_uint256_$_t_uint64_$_t_uint256_$returns$_t_uint256_$attached_to$_t_struct$_PeriodScaler_$66624_memory_ptr_$",
                        "typeString": "function (struct PeriodScaler memory,uint256,uint64,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 60771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "13013:1:84",
                      "13026:4:84",
                      "13048:3:84"
                    ],
                    "names": [
                      "v",
                      "maxR",
                      "dur"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12987:83:84",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 60739,
                  "id": 60772,
                  "nodeType": "Return",
                  "src": "12980:90:84"
                }
              ]
            },
            "documentation": {
              "id": 60733,
              "nodeType": "StructuredDocumentation",
              "src": "12605:106:84",
              "text": " @dev Returns the current domain price applied the business rule: deduced x% each y seconds."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getDomainPrice",
            "nameLocation": "12723:15:84",
            "parameters": {
              "id": 60736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60735,
                  "mutability": "mutable",
                  "name": "lbHash",
                  "nameLocation": "12747:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 60774,
                  "src": "12739:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60734,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12739:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12738:16:84"
            },
            "returnParameters": {
              "id": 60739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60738,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60774,
                  "src": "12778:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12778:7:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12777:9:84"
            },
            "scope": 60775,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59639,
              "name": "Initializable",
              "nameLocations": [
                "1005:13:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49864,
              "src": "1005:13:84"
            },
            "id": 59640,
            "nodeType": "InheritanceSpecifier",
            "src": "1005:13:84"
          },
          {
            "baseName": {
              "id": 59641,
              "name": "AccessControlEnumerable",
              "nameLocations": [
                "1020:23:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48591,
              "src": "1020:23:84"
            },
            "id": 59642,
            "nodeType": "InheritanceSpecifier",
            "src": "1020:23:84"
          },
          {
            "baseName": {
              "id": 59643,
              "name": "INSDomainPrice",
              "nameLocations": [
                "1045:14:84"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64629,
              "src": "1045:14:84"
            },
            "id": 59644,
            "nodeType": "InheritanceSpecifier",
            "src": "1045:14:84"
          }
        ],
        "canonicalName": "RNSDomainPrice",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          60775,
          64629,
          48591,
          48466,
          52295,
          52307,
          48689,
          48664,
          51932,
          49864
        ],
        "name": "RNSDomainPrice",
        "nameLocation": "987:14:84",
        "scope": 60776,
        "usedErrors": [
          64373,
          64375,
          64377,
          66631,
          67246,
          67254
        ],
        "usedEvents": [
          48603,
          48612,
          48621,
          49710,
          64394,
          64401,
          64410,
          64419,
          64432,
          64441,
          64453
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 21444223,
  "bytecode": "0x60806040526200000e62000014565b620000d5565b600054610100900460ff1615620000815760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000d3576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6130fb80620000e56000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635c68c83011610104578063ca15c873116100a2578063e229a67011610071578063e229a67014610480578063f4651f4914610493578063f5b541a6146104b4578063fe303ebf146104c957600080fd5b8063ca15c87314610434578063d40ed58c14610447578063d547741f1461045a578063dd28776d1461046d57600080fd5b80637174026e116100de5780637174026e146103db5780639010d07c146103ee57806391d1485414610419578063a217fddf1461042c57600080fd5b80635c68c830146103985780635ef32e2c146103ab578063713a69a7146103b357600080fd5b80632f6ee6951161017157806339e47da71161014b57806339e47da7146102ec5780634c255c971461034457806353faf90914610365578063599eaabf1461038557600080fd5b80632f6ee695146102ac57806335feb741146102c657806336568abe146102d957600080fd5b8063248a9ca3116101ad578063248a9ca31461023257806328dd3065146102565780632be09ecc1461026b5780632f2ff15d1461029957600080fd5b806301ffc9a7146101d4578063037f1769146101fc5780630a44f51f1461021d575b600080fd5b6101e76101e23660046122e1565b6104dc565b60405190151581526020015b60405180910390f35b61020f61020a36600461230b565b610507565b6040519081526020016101f3565b610225610599565b6040516101f39190612324565b61020f61024036600461230b565b6000908152600160208190526040909120015490565b61026961026436600461239b565b610676565b005b603554603954603a54604080516001600160a01b0390941684526020840192909252908201526060016101f3565b6102696102a73660046123d0565b610692565b6102b4601281565b60405160ff90911681526020016101f3565b6102696102d4366004612444565b6106bd565b6102696102e73660046123d0565b6106d2565b604080518082018252600080825260209182015281518083018352603b546001600160c01b0381168083526001600160401b03600160c01b9092048216928401928352845190815291511691810191909152016101f3565b61034d61271081565b6040516001600160401b0390911681526020016101f3565b6103786103733660046124c9565b610755565b6040516101f3919061258c565b6102696103933660046124c9565b61087c565b61020f6103a63660046125d2565b61093a565b60375461020f565b6103c66103c1366004612772565b6109b8565b604080519283526020830191909152016101f3565b61020f6103e936600461230b565b6109e4565b6104016103fc3660046127a6565b610a77565b6040516001600160a01b0390911681526020016101f3565b6101e76104273660046123d0565b610a96565b61020f600081565b61020f61044236600461230b565b610ac1565b6102696104553660046127e0565b610ad8565b6102696104683660046123d0565b610c8e565b61026961047b3660046128b9565b610cb4565b61026961048e366004612924565b610dc0565b6104a66104a1366004612940565b610dd4565b6040516101f3929190612984565b61020f6000805160206130a683398151915281565b6102696104d736600461230b565b61118a565b60006001600160e01b03198216635a05180f60e01b148061050157506105018261119e565b92915050565b603554603a5460395460405163052571af60e51b815260009361050193869360129384936001600160a01b03169263a4ae35e09261055092600401918252602082015260400190565b608060405180830381865afa15801561056d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059191906129bf565b9291906111d3565b603854606090806001600160401b038111156105b7576105b7612643565b6040519080825280602002602001820160405280156105fc57816020015b60408051808201909152600080825260208201528152602001906001900390816105d55790505b5091506000805b82811015610670578060010191508184828151811061062457610624612a2c565b60200260200101516000018181525050603c60008381526020019081526020016000205484828151811061065a5761065a612a2c565b6020908102919091018101510152600101610603565b50505090565b600061068181611214565b61068c848484611221565b50505050565b600082815260016020819052604090912001546106ae81611214565b6106b88383611293565b505050565b60006106c881611214565b6106b883836112b5565b6001600160a01b03811633146107475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61075182826113ce565b5050565b60606000805160206130a683398151915261076f81611214565b60006107818b8b8b8b8b8b8b8b6113f0565b905033816001600160401b0381111561079c5761079c612643565b6040519080825280602002602001820160405280156107c5578160200160208202803683370190505b50935060005b8281101561086c57610842828e8e848181106107e9576107e9612a2c565b905060200201358d8d8581811061080257610802612a2c565b905060200201358c8c8681811061081b5761081b612a2c565b905060200201358b8b8781811061083457610834612a2c565b90506020020135600061143e565b85828151811061085457610854612a2c565b911515602092830291909101909101526001016107cb565b5050505098975050505050505050565b6000805160206130a683398151915261089481611214565b60006108a68a8a8a8a8a8a8a8a6113f0565b90503360005b8281101561092c57610923828d8d848181106108ca576108ca612a2c565b905060200201358c8c858181106108e3576108e3612a2c565b905060200201358b8b868181106108fc576108fc612a2c565b905060200201358a8a8781811061091557610915612a2c565b90506020020135600161143e565b506001016108ac565b505050505050505050505050565b6000603e600061097f85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506114cd92505050565b8152602001908152602001600020549050806000036109b157604051635421761560e11b815260040160405180910390fd5b1992915050565b6000806109d26109cd84805160209091012090565b6114d8565b91506109dd826109e4565b9050915091565b603554603a5460395460405163052571af60e51b815260048101929092526024820152600091610501918491601291829161059191601119916001600160a01b03169063a4ae35e090604401608060405180830381865afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7191906129bf565b90611552565b6000828152600260205260408120610a8f90836116ac565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000818152600260205260408120610501906116b8565b600054610100900460ff1615808015610af85750600054600160ff909116105b80610b125750303b158015610b12575060005460ff166001145b610b755760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161073e565b6000805460ff191660011790558015610b98576000805461ff0019166101001790555b896000805160206130a683398151915260005b82811015610beb57610be3828f8f84818110610bc957610bc9612a2c565b9050602002016020810190610bde9190612a42565b6116c2565b600101610bab565b50603680546001600160a01b0319166001600160a01b038816179055610c1260008f6116c2565b610c1c8b8b6112b5565b610c25896116cc565b610c2e88611701565b610c39878686611221565b5050801561092c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050505050505050565b60008281526001602081905260409091200154610caa81611214565b6106b883836113ce565b6000805160206130a6833981519152610ccc81611214565b83801580610cda5750808314155b15610cf857604051634ec4810560e11b815260040160405180910390fd5b600033815b83811015610db557868682818110610d1757610d17612a2c565b9050602002013519925082603e60008b8b85818110610d3857610d38612a2c565b90506020020135815260200190815260200160002081905550888882818110610d6357610d63612a2c565b90506020020135826001600160a01b03167fb52d278cb3ef3b003bdfb385ce2eb23a83eb6d713724abfba1acaa16ccf6621485604051610da591815260200190565b60405180910390a3600101610cfd565b505050505050505050565b6000610dcb81611214565b61075182611701565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000610e078561177d565b855160208701209091506000906000818152603e60205260409020549091508015610e3e57610e37811987612a75565b855261115d565b6000603c6000610e508660385461186b565b81526020019081526020016000205490508087610e6d9190612a75565b86526000610eac7fba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d6888a6000918252805160209182012090526040902090565b6036546040516329fc8caf60e11b8152600481018390529192506001600160a01b03169081906353f9195e90602401602060405180830381865afa158015610ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1c9190612a9c565b15611159576000816001600160a01b0316638c8433146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190612ab7565b90506000611020826001600160a01b03166303e9e609866040518263ffffffff1660e01b8152600401610fba91815260200190565b600060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fff9190810190612b5e565b60200151604001516001600160401b03168c6001600160401b038016611881565b6040516378bd793560e01b8152600481018690529091506000906001600160a01b038516906378bd79359060240160e060405180830381865afa15801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f9190612c65565b50604081015160600151909150801580159061111d5750846001600160a01b0316630afe1bb36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111089190612d02565b6001600160401b031661111b8285612d1f565b115b1561113b57604051631bb03f9d60e01b815260040160405180910390fd5b61115260375461114a8b6114d8565b6127106118b7565b8b52505050505b5050505b8351611168906109e4565b60208501528451611178906109e4565b60208601525092959194509092505050565b600061119581611214565b610751826116cc565b60006001600160e01b03198216637965db0b60e01b148061050157506301ffc9a760e01b6001600160e01b0319831614610501565b6000611209846111f9876000015160070b8860400151866111f49190612d32565b6119a1565b6112046001876119a1565b6118b7565b90505b949350505050565b61121e81336119fb565b50565b603580546001600160a01b0319166001600160a01b0385169081179091556039839055603a8290558190336001600160a01b03167f671083457675651266070f50f1438ef8190b7da64d38f16f5117246236b7dd5b8560405161128691815260200190565b60405180910390a4505050565b61129d8282611a54565b60008281526002602052604090206106b89082611abf565b60408051808201909152600080825260208201523390603854839060005b82811015611380578686828181106112ed576112ed612a2c565b9050604002018036038101906113039190612d59565b9350611313828560000151611ad4565b6020808601805187516000908152603c90935260409283902055865190519151929450916001600160a01b038816917f85211e946be6d537cd1b22a183d04151d4e5d0818e1ce75d2e5ebaecba0a5a779161137091815260200190565b60405180910390a36001016112d3565b5060385481146113c657603881905560405181906001600160a01b038616907f7e7c3a4273ac1af351af63a82e91a8335bcb389ba681375a32dbe4455d0d474b90600090a35b505050505050565b6113d88282611ae3565b60008281526002602052604090206106b89082611b4a565b868015806113fe5750858114155b806114095750838114155b806114145750818114155b1561143257604051634ec4810560e11b815260040160405180910390fd5b98975050505050505050565b60008061144a86610507565b6000888152603d6020526040902090915083806114675750805482115b925082156114c157818155426001820155604080518381526020810187905287918a916001600160a01b038d16917f60d5fd6d2284807447aae62f93c05517a647b8e8479c3af2c27ee1d1c85b540f910160405180910390a45b50509695505050505050565b805160209091012090565b6000818152603d6020526040812060018101548083036114fc575060009392505050565b60006115088242612d1f565b835460408051808201909152603b546001600160c01b0381168252600160c01b90046001600160401b03166020820152919250611549919061271084611b5f565b95945050505050565b604080516080810182526000808252602082018190529181018290526060810191909152600061158b600185604001516111f490612d8b565b90506001600160ff1b038111156115c1576040808501519051633e87ca5d60e11b815260039190910b600482015260240161073e565b60006115d160016111f486612d8b565b90506001600160ff1b0381111561160157604051633e87ca5d60e11b8152600385900b600482015260240161073e565b845160009060070b6116138385612dae565b61161d9190612df4565b9050677fffffffffffffff81131561166957604086810151875191516329b2fb5560e11b8152600391820b60048201529087900b602482015260079190910b604482015260640161073e565b60405180608001604052808260070b815260200187602001516001600160401b031681526020018660030b81526020018760600151815250935050505092915050565b6000610a8f8383611c35565b6000610501825490565b6107518282611293565b6037819055604051819033907f1e97e29c863545fad1ce79512b4deb3f0b7d30c3356bc7bbbd6588c9e68cf07390600090a350565b80603b61170e8282612e37565b503390507fa7f38b74141f9a2ac1b02640ded2b98431ef77f8cf2e3ade85c71d6c8420dc646117406020840184612e79565b6117506040850160208601612e96565b604080516001600160c01b0390931683526001600160401b0390911660208301520160405180910390a250565b600080600080845190505b808310156118635760008584815181106117a4576117a4612a2c565b01602001516001600160f81b0319169050600160ff1b8110156117cc57600184019350611857565b600760fd1b6001600160f81b0319821610156117ed57600284019350611857565b600f60fc1b6001600160f81b03198216101561180e57600384019350611857565b601f60fb1b6001600160f81b03198216101561182f57600484019350611857565b603f60fa1b6001600160f81b03198216101561185057600584019350611857565b6006840193505b50600190910190611788565b509392505050565b600081831061187a5781610a8f565b5090919050565b60008184118061189057508183115b1561189c575080610a8f565b6118a68484611c5f565b905081811115610a8f575092915050565b60008080600019858709858702925082811083820303915050806000036118f1578382816118e7576118e7612dde565b0492505050610a8f565b8084116119385760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b604482015260640161073e565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000808260030b12156119d3576119b782612d8b565b6119c290600a612f97565b6119cc9084612fa9565b9050610501565b60008260030b13156119f4576119ea82600a612f97565b6119cc9084612a75565b5081610501565b611a058282610a96565b61075157611a1281611c73565b611a1d836020611c85565b604051602001611a2e929190612fbd565b60408051601f198184030181529082905262461bcd60e51b825261073e91600401613032565b611a5e8282610a96565b6107515760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610a8f836001600160a01b038416611e20565b600081831161187a5781610a8f565b611aed8282610a96565b156107515760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a8f836001600160a01b038416611e6f565b60008085602001516001600160401b031683611b7b9190612fa9565b9050801580611b92575085516001600160c01b0316155b15611ba0578491505061120c565b85516001600160c01b03166001600160401b03851603611bc457600091505061120c565b61ffff811115611bea57604051637359f25f60e01b81526004810182905260240161073e565b6000611c1a8760000151866001600160401b0316036001600160c01b0316612710876001600160401b03166118b7565b9050611c2a868261271085611f62565b979650505050505050565b6000826000018281548110611c4c57611c4c612a2c565b9060005260206000200154905092915050565b818101828110156105015750600019610501565b60606105016001600160a01b03831660145b60606000611c94836002612a75565b611c9f906002613065565b6001600160401b03811115611cb657611cb6612643565b6040519080825280601f01601f191660200182016040528015611ce0576020820181803683370190505b509050600360fc1b81600081518110611cfb57611cfb612a2c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d2a57611d2a612a2c565b60200101906001600160f81b031916908160001a9053506000611d4e846002612a75565b611d59906001613065565b90505b6001811115611dd1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d8d57611d8d612a2c565b1a60f81b828281518110611da357611da3612a2c565b60200101906001600160f81b031916908160001a90535060049490941c93611dca81613078565b9050611d5c565b508315610a8f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161073e565b6000818152600183016020526040812054611e6757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610501565b506000610501565b60008181526001830160205260408120548015611f58576000611e93600183612d1f565b8554909150600090611ea790600190612d1f565b9050818114611f0c576000866000018281548110611ec757611ec7612a2c565b9060005260206000200154905080876000018481548110611eea57611eea612a2c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f1d57611f1d61308f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610501565b6000915050610501565b600082841480611f74575061ffff8216155b15611f8057508361120c565b50836000808080611fa161ffff8716611f988a6120c5565b61ffff1661186b565b90505b61ffff811615611ff757611fbe8561ffff83168a0a612296565b90945092508315611fd757829450808603955080820191505b611ff0600261ffff83160461ffff168761ffff1661186b565b9050611fa4565b505b61ffff85161561206a5761200d8488612296565b9093509150821561202c57600019909401939092508290600101611ff9565b61ffff8116156120515785848161204557612045612dde565b04935060001901611ff9565b61205c8488886118b7565b600019909501949350611ff9565b6000612075876120c5565b90505b61ffff8216156120b95760006120968261ffff168461ffff1661186b565b90508061ffff16880a86816120ad576120ad612dde565b04955090910390612078565b50505050949350505050565b600060038210156120d8575060ff919050565b60048210156120e957506080919050565b60108210156120fa57506040919050565b61010082101561210c57506020919050565b611bdc82101561211e57506014919050565b612c7082101561213057506013919050565b614aa982101561214257506012919050565b61855482101561215457506011919050565b6201000082101561216757506010919050565b6202183782101561217a5750600f919050565b6204e04682101561218d5750600e919050565b620ced4c8210156121a05750600d919050565b622851468210156121b35750600c919050565b629aa2ad8210156121c65750600b919050565b6303080c018210156121da5750600a919050565b6315c5cbbd8210156121ee57506009919050565b64010000000082101561220357506008919050565b6417c6a1f29f82101561221857506007919050565b6506597fa94f5c82101561222e57506006919050565b66093088c35d733b82101561224557506005919050565b6801000000000000000082101561225e57506004919050565b6a285145f31ae515c447bb5782101561227957506003919050565b600160801b82101561228d57506002919050565b5060015b919050565b600080836000036122ad57506001905060006122da565b838302838582816122c0576122c0612dde565b04146122d35760008092509250506122da565b6001925090505b9250929050565b6000602082840312156122f357600080fd5b81356001600160e01b031981168114610a8f57600080fd5b60006020828403121561231d57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561236e5761235e84835180518252602090810151910152565b9284019290850190600101612341565b5091979650505050505050565b6001600160a01b038116811461121e57600080fd5b80356122918161237b565b6000806000606084860312156123b057600080fd5b83356123bb8161237b565b95602085013595506040909401359392505050565b600080604083850312156123e357600080fd5b8235915060208301356123f58161237b565b809150509250929050565b60008083601f84011261241257600080fd5b5081356001600160401b0381111561242957600080fd5b6020830191508360208260061b85010111156122da57600080fd5b6000806020838503121561245757600080fd5b82356001600160401b0381111561246d57600080fd5b61247985828601612400565b90969095509350505050565b60008083601f84011261249757600080fd5b5081356001600160401b038111156124ae57600080fd5b6020830191508360208260051b85010111156122da57600080fd5b6000806000806000806000806080898b0312156124e557600080fd5b88356001600160401b03808211156124fc57600080fd5b6125088c838d01612485565b909a50985060208b013591508082111561252157600080fd5b61252d8c838d01612485565b909850965060408b013591508082111561254657600080fd5b6125528c838d01612485565b909650945060608b013591508082111561256b57600080fd5b506125788b828c01612485565b999c989b5096995094979396929594505050565b6020808252825182820181905260009190848201906040850190845b818110156125c65783511515835292840192918401916001016125a8565b50909695505050505050565b600080602083850312156125e557600080fd5b82356001600160401b03808211156125fc57600080fd5b818501915085601f83011261261057600080fd5b81358181111561261f57600080fd5b86602082850101111561263157600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561267b5761267b612643565b60405290565b604080519081016001600160401b038111828210171561267b5761267b612643565b604051606081016001600160401b038111828210171561267b5761267b612643565b604051601f8201601f191681016001600160401b03811182821017156126ed576126ed612643565b604052919050565b60006001600160401b0382111561270e5761270e612643565b50601f01601f191660200190565b600082601f83011261272d57600080fd5b813561274061273b826126f5565b6126c5565b81815284602083860101111561275557600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561278457600080fd5b81356001600160401b0381111561279a57600080fd5b61120c8482850161271c565b600080604083850312156127b957600080fd5b50508035926020909101359150565b6000604082840312156127da57600080fd5b50919050565b60008060008060008060008060008060006101408c8e03121561280257600080fd5b61280c8c3561237b565b8b359a506001600160401b038060208e0135111561282957600080fd5b6128398e60208f01358f01612485565b909b50995060408d013581101561284f57600080fd5b506128608d60408e01358e01612400565b909850965060608c013595506128798d60808e016127c8565b945060c08c01356128898161237b565b935061289760e08d01612390565b92506101008c013591506101208c013590509295989b509295989b9093969950565b600080600080604085870312156128cf57600080fd5b84356001600160401b03808211156128e657600080fd5b6128f288838901612485565b9096509450602087013591508082111561290b57600080fd5b5061291887828801612485565b95989497509550505050565b60006040828403121561293657600080fd5b610a8f83836127c8565b6000806040838503121561295357600080fd5b82356001600160401b0381111561296957600080fd5b6129758582860161271c565b95602094909401359450505050565b825181526020808401518183015282516040830152820151606082015260808101610a8f565b6001600160401b038116811461121e57600080fd5b6000608082840312156129d157600080fd5b6129d9612659565b82518060070b81146129ea57600080fd5b815260208301516129fa816129aa565b60208201526040830151600381900b8114612a1457600080fd5b60408201526060928301519281019290925250919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612a5457600080fd5b8135610a8f8161237b565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761050157610501612a5f565b8051801515811461229157600080fd5b600060208284031215612aae57600080fd5b610a8f82612a8c565b600060208284031215612ac957600080fd5b8151610a8f8161237b565b60005b83811015612aef578181015183820152602001612ad7565b50506000910152565b600060808284031215612b0a57600080fd5b612b12612659565b90508151612b1f8161237b565b81526020820151612b2f8161237b565b60208201526040820151612b42816129aa565b6040820152612b5360608301612a8c565b606082015292915050565b60006020808385031215612b7157600080fd5b82516001600160401b0380821115612b8857600080fd5b9084019060a08287031215612b9c57600080fd5b612ba4612681565b825182811115612bb357600080fd5b830160608189031215612bc557600080fd5b612bcd6126a3565b815160ff81168114612bde57600080fd5b81528186015186820152604082015184811115612bfa57600080fd5b82019350601f84018913612c0d57600080fd5b83519150612c1d61273b836126f5565b8281528987848701011115612c3157600080fd5b612c4083888301898801612ad4565b6040820152825250612c5487848601612af8565b848201528094505050505092915050565b60008082840360e0811215612c7957600080fd5b60c0811215612c8757600080fd5b612c8f6126a3565b84518152602085015160208201526080603f1983011215612caf57600080fd5b612cb7612659565b91506040850151612cc78161237b565b80835250606085015160208301526080850151604083015260a08501516060830152816040820152809350505060c083015190509250929050565b600060208284031215612d1457600080fd5b8151610a8f816129aa565b8181038181111561050157610501612a5f565b600381810b9083900b01637fffffff8113637fffffff198212171561050157610501612a5f565b600060408284031215612d6b57600080fd5b612d73612681565b82358152602083013560208201528091505092915050565b60008160030b637fffffff198103612da557612da5612a5f565b60000392915050565b80820260008212600160ff1b84141615612dca57612dca612a5f565b818105831482151761050157610501612a5f565b634e487b7160e01b600052601260045260246000fd5b600082612e0357612e03612dde565b600160ff1b821460001984141615612e1d57612e1d612a5f565b500590565b6001600160c01b038116811461121e57600080fd5b8135612e4281612e22565b81546001600160c01b03199081166001600160c01b039290921691821783556020840135612e6f816129aa565b60c01b1617905550565b600060208284031215612e8b57600080fd5b8135610a8f81612e22565b600060208284031215612ea857600080fd5b8135610a8f816129aa565b600181815b80851115612eee578160001904821115612ed457612ed4612a5f565b80851615612ee157918102915b93841c9390800290612eb8565b509250929050565b600082612f0557506001610501565b81612f1257506000610501565b8160018114612f285760028114612f3257612f4e565b6001915050610501565b60ff841115612f4357612f43612a5f565b50506001821b610501565b5060208310610133831016604e8410600b8410161715612f71575081810a610501565b612f7b8383612eb3565b8060001904821115612f8f57612f8f612a5f565b029392505050565b6000610a8f63ffffffff841683612ef6565b600082612fb857612fb8612dde565b500490565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612ff5816017850160208801612ad4565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613026816028840160208801612ad4565b01602801949350505050565b6020815260008251806020840152613051816040850160208701612ad4565b601f01601f19169190910160400192915050565b8082018082111561050157610501612a5f565b60008161308757613087612a5f565b506000190190565b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220ba899357ff149897aea9e63c3a06e271fed944932d819738c722c1c923e6a3d464736f6c63430008150033",
  "chainId": 2021,
  "contractName": "RNSDomainPrice",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80635c68c83011610104578063ca15c873116100a2578063e229a67011610071578063e229a67014610480578063f4651f4914610493578063f5b541a6146104b4578063fe303ebf146104c957600080fd5b8063ca15c87314610434578063d40ed58c14610447578063d547741f1461045a578063dd28776d1461046d57600080fd5b80637174026e116100de5780637174026e146103db5780639010d07c146103ee57806391d1485414610419578063a217fddf1461042c57600080fd5b80635c68c830146103985780635ef32e2c146103ab578063713a69a7146103b357600080fd5b80632f6ee6951161017157806339e47da71161014b57806339e47da7146102ec5780634c255c971461034457806353faf90914610365578063599eaabf1461038557600080fd5b80632f6ee695146102ac57806335feb741146102c657806336568abe146102d957600080fd5b8063248a9ca3116101ad578063248a9ca31461023257806328dd3065146102565780632be09ecc1461026b5780632f2ff15d1461029957600080fd5b806301ffc9a7146101d4578063037f1769146101fc5780630a44f51f1461021d575b600080fd5b6101e76101e23660046122e1565b6104dc565b60405190151581526020015b60405180910390f35b61020f61020a36600461230b565b610507565b6040519081526020016101f3565b610225610599565b6040516101f39190612324565b61020f61024036600461230b565b6000908152600160208190526040909120015490565b61026961026436600461239b565b610676565b005b603554603954603a54604080516001600160a01b0390941684526020840192909252908201526060016101f3565b6102696102a73660046123d0565b610692565b6102b4601281565b60405160ff90911681526020016101f3565b6102696102d4366004612444565b6106bd565b6102696102e73660046123d0565b6106d2565b604080518082018252600080825260209182015281518083018352603b546001600160c01b0381168083526001600160401b03600160c01b9092048216928401928352845190815291511691810191909152016101f3565b61034d61271081565b6040516001600160401b0390911681526020016101f3565b6103786103733660046124c9565b610755565b6040516101f3919061258c565b6102696103933660046124c9565b61087c565b61020f6103a63660046125d2565b61093a565b60375461020f565b6103c66103c1366004612772565b6109b8565b604080519283526020830191909152016101f3565b61020f6103e936600461230b565b6109e4565b6104016103fc3660046127a6565b610a77565b6040516001600160a01b0390911681526020016101f3565b6101e76104273660046123d0565b610a96565b61020f600081565b61020f61044236600461230b565b610ac1565b6102696104553660046127e0565b610ad8565b6102696104683660046123d0565b610c8e565b61026961047b3660046128b9565b610cb4565b61026961048e366004612924565b610dc0565b6104a66104a1366004612940565b610dd4565b6040516101f3929190612984565b61020f6000805160206130a683398151915281565b6102696104d736600461230b565b61118a565b60006001600160e01b03198216635a05180f60e01b148061050157506105018261119e565b92915050565b603554603a5460395460405163052571af60e51b815260009361050193869360129384936001600160a01b03169263a4ae35e09261055092600401918252602082015260400190565b608060405180830381865afa15801561056d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059191906129bf565b9291906111d3565b603854606090806001600160401b038111156105b7576105b7612643565b6040519080825280602002602001820160405280156105fc57816020015b60408051808201909152600080825260208201528152602001906001900390816105d55790505b5091506000805b82811015610670578060010191508184828151811061062457610624612a2c565b60200260200101516000018181525050603c60008381526020019081526020016000205484828151811061065a5761065a612a2c565b6020908102919091018101510152600101610603565b50505090565b600061068181611214565b61068c848484611221565b50505050565b600082815260016020819052604090912001546106ae81611214565b6106b88383611293565b505050565b60006106c881611214565b6106b883836112b5565b6001600160a01b03811633146107475760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61075182826113ce565b5050565b60606000805160206130a683398151915261076f81611214565b60006107818b8b8b8b8b8b8b8b6113f0565b905033816001600160401b0381111561079c5761079c612643565b6040519080825280602002602001820160405280156107c5578160200160208202803683370190505b50935060005b8281101561086c57610842828e8e848181106107e9576107e9612a2c565b905060200201358d8d8581811061080257610802612a2c565b905060200201358c8c8681811061081b5761081b612a2c565b905060200201358b8b8781811061083457610834612a2c565b90506020020135600061143e565b85828151811061085457610854612a2c565b911515602092830291909101909101526001016107cb565b5050505098975050505050505050565b6000805160206130a683398151915261089481611214565b60006108a68a8a8a8a8a8a8a8a6113f0565b90503360005b8281101561092c57610923828d8d848181106108ca576108ca612a2c565b905060200201358c8c858181106108e3576108e3612a2c565b905060200201358b8b868181106108fc576108fc612a2c565b905060200201358a8a8781811061091557610915612a2c565b90506020020135600161143e565b506001016108ac565b505050505050505050505050565b6000603e600061097f85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506114cd92505050565b8152602001908152602001600020549050806000036109b157604051635421761560e11b815260040160405180910390fd5b1992915050565b6000806109d26109cd84805160209091012090565b6114d8565b91506109dd826109e4565b9050915091565b603554603a5460395460405163052571af60e51b815260048101929092526024820152600091610501918491601291829161059191601119916001600160a01b03169063a4ae35e090604401608060405180830381865afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7191906129bf565b90611552565b6000828152600260205260408120610a8f90836116ac565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000818152600260205260408120610501906116b8565b600054610100900460ff1615808015610af85750600054600160ff909116105b80610b125750303b158015610b12575060005460ff166001145b610b755760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161073e565b6000805460ff191660011790558015610b98576000805461ff0019166101001790555b896000805160206130a683398151915260005b82811015610beb57610be3828f8f84818110610bc957610bc9612a2c565b9050602002016020810190610bde9190612a42565b6116c2565b600101610bab565b50603680546001600160a01b0319166001600160a01b038816179055610c1260008f6116c2565b610c1c8b8b6112b5565b610c25896116cc565b610c2e88611701565b610c39878686611221565b5050801561092c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050505050505050565b60008281526001602081905260409091200154610caa81611214565b6106b883836113ce565b6000805160206130a6833981519152610ccc81611214565b83801580610cda5750808314155b15610cf857604051634ec4810560e11b815260040160405180910390fd5b600033815b83811015610db557868682818110610d1757610d17612a2c565b9050602002013519925082603e60008b8b85818110610d3857610d38612a2c565b90506020020135815260200190815260200160002081905550888882818110610d6357610d63612a2c565b90506020020135826001600160a01b03167fb52d278cb3ef3b003bdfb385ce2eb23a83eb6d713724abfba1acaa16ccf6621485604051610da591815260200190565b60405180910390a3600101610cfd565b505050505050505050565b6000610dcb81611214565b61075182611701565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000610e078561177d565b855160208701209091506000906000818152603e60205260409020549091508015610e3e57610e37811987612a75565b855261115d565b6000603c6000610e508660385461186b565b81526020019081526020016000205490508087610e6d9190612a75565b86526000610eac7fba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d6888a6000918252805160209182012090526040902090565b6036546040516329fc8caf60e11b8152600481018390529192506001600160a01b03169081906353f9195e90602401602060405180830381865afa158015610ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1c9190612a9c565b15611159576000816001600160a01b0316638c8433146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190612ab7565b90506000611020826001600160a01b03166303e9e609866040518263ffffffff1660e01b8152600401610fba91815260200190565b600060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fff9190810190612b5e565b60200151604001516001600160401b03168c6001600160401b038016611881565b6040516378bd793560e01b8152600481018690529091506000906001600160a01b038516906378bd79359060240160e060405180830381865afa15801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f9190612c65565b50604081015160600151909150801580159061111d5750846001600160a01b0316630afe1bb36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111089190612d02565b6001600160401b031661111b8285612d1f565b115b1561113b57604051631bb03f9d60e01b815260040160405180910390fd5b61115260375461114a8b6114d8565b6127106118b7565b8b52505050505b5050505b8351611168906109e4565b60208501528451611178906109e4565b60208601525092959194509092505050565b600061119581611214565b610751826116cc565b60006001600160e01b03198216637965db0b60e01b148061050157506301ffc9a760e01b6001600160e01b0319831614610501565b6000611209846111f9876000015160070b8860400151866111f49190612d32565b6119a1565b6112046001876119a1565b6118b7565b90505b949350505050565b61121e81336119fb565b50565b603580546001600160a01b0319166001600160a01b0385169081179091556039839055603a8290558190336001600160a01b03167f671083457675651266070f50f1438ef8190b7da64d38f16f5117246236b7dd5b8560405161128691815260200190565b60405180910390a4505050565b61129d8282611a54565b60008281526002602052604090206106b89082611abf565b60408051808201909152600080825260208201523390603854839060005b82811015611380578686828181106112ed576112ed612a2c565b9050604002018036038101906113039190612d59565b9350611313828560000151611ad4565b6020808601805187516000908152603c90935260409283902055865190519151929450916001600160a01b038816917f85211e946be6d537cd1b22a183d04151d4e5d0818e1ce75d2e5ebaecba0a5a779161137091815260200190565b60405180910390a36001016112d3565b5060385481146113c657603881905560405181906001600160a01b038616907f7e7c3a4273ac1af351af63a82e91a8335bcb389ba681375a32dbe4455d0d474b90600090a35b505050505050565b6113d88282611ae3565b60008281526002602052604090206106b89082611b4a565b868015806113fe5750858114155b806114095750838114155b806114145750818114155b1561143257604051634ec4810560e11b815260040160405180910390fd5b98975050505050505050565b60008061144a86610507565b6000888152603d6020526040902090915083806114675750805482115b925082156114c157818155426001820155604080518381526020810187905287918a916001600160a01b038d16917f60d5fd6d2284807447aae62f93c05517a647b8e8479c3af2c27ee1d1c85b540f910160405180910390a45b50509695505050505050565b805160209091012090565b6000818152603d6020526040812060018101548083036114fc575060009392505050565b60006115088242612d1f565b835460408051808201909152603b546001600160c01b0381168252600160c01b90046001600160401b03166020820152919250611549919061271084611b5f565b95945050505050565b604080516080810182526000808252602082018190529181018290526060810191909152600061158b600185604001516111f490612d8b565b90506001600160ff1b038111156115c1576040808501519051633e87ca5d60e11b815260039190910b600482015260240161073e565b60006115d160016111f486612d8b565b90506001600160ff1b0381111561160157604051633e87ca5d60e11b8152600385900b600482015260240161073e565b845160009060070b6116138385612dae565b61161d9190612df4565b9050677fffffffffffffff81131561166957604086810151875191516329b2fb5560e11b8152600391820b60048201529087900b602482015260079190910b604482015260640161073e565b60405180608001604052808260070b815260200187602001516001600160401b031681526020018660030b81526020018760600151815250935050505092915050565b6000610a8f8383611c35565b6000610501825490565b6107518282611293565b6037819055604051819033907f1e97e29c863545fad1ce79512b4deb3f0b7d30c3356bc7bbbd6588c9e68cf07390600090a350565b80603b61170e8282612e37565b503390507fa7f38b74141f9a2ac1b02640ded2b98431ef77f8cf2e3ade85c71d6c8420dc646117406020840184612e79565b6117506040850160208601612e96565b604080516001600160c01b0390931683526001600160401b0390911660208301520160405180910390a250565b600080600080845190505b808310156118635760008584815181106117a4576117a4612a2c565b01602001516001600160f81b0319169050600160ff1b8110156117cc57600184019350611857565b600760fd1b6001600160f81b0319821610156117ed57600284019350611857565b600f60fc1b6001600160f81b03198216101561180e57600384019350611857565b601f60fb1b6001600160f81b03198216101561182f57600484019350611857565b603f60fa1b6001600160f81b03198216101561185057600584019350611857565b6006840193505b50600190910190611788565b509392505050565b600081831061187a5781610a8f565b5090919050565b60008184118061189057508183115b1561189c575080610a8f565b6118a68484611c5f565b905081811115610a8f575092915050565b60008080600019858709858702925082811083820303915050806000036118f1578382816118e7576118e7612dde565b0492505050610a8f565b8084116119385760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b604482015260640161073e565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000808260030b12156119d3576119b782612d8b565b6119c290600a612f97565b6119cc9084612fa9565b9050610501565b60008260030b13156119f4576119ea82600a612f97565b6119cc9084612a75565b5081610501565b611a058282610a96565b61075157611a1281611c73565b611a1d836020611c85565b604051602001611a2e929190612fbd565b60408051601f198184030181529082905262461bcd60e51b825261073e91600401613032565b611a5e8282610a96565b6107515760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610a8f836001600160a01b038416611e20565b600081831161187a5781610a8f565b611aed8282610a96565b156107515760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a8f836001600160a01b038416611e6f565b60008085602001516001600160401b031683611b7b9190612fa9565b9050801580611b92575085516001600160c01b0316155b15611ba0578491505061120c565b85516001600160c01b03166001600160401b03851603611bc457600091505061120c565b61ffff811115611bea57604051637359f25f60e01b81526004810182905260240161073e565b6000611c1a8760000151866001600160401b0316036001600160c01b0316612710876001600160401b03166118b7565b9050611c2a868261271085611f62565b979650505050505050565b6000826000018281548110611c4c57611c4c612a2c565b9060005260206000200154905092915050565b818101828110156105015750600019610501565b60606105016001600160a01b03831660145b60606000611c94836002612a75565b611c9f906002613065565b6001600160401b03811115611cb657611cb6612643565b6040519080825280601f01601f191660200182016040528015611ce0576020820181803683370190505b509050600360fc1b81600081518110611cfb57611cfb612a2c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d2a57611d2a612a2c565b60200101906001600160f81b031916908160001a9053506000611d4e846002612a75565b611d59906001613065565b90505b6001811115611dd1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d8d57611d8d612a2c565b1a60f81b828281518110611da357611da3612a2c565b60200101906001600160f81b031916908160001a90535060049490941c93611dca81613078565b9050611d5c565b508315610a8f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161073e565b6000818152600183016020526040812054611e6757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610501565b506000610501565b60008181526001830160205260408120548015611f58576000611e93600183612d1f565b8554909150600090611ea790600190612d1f565b9050818114611f0c576000866000018281548110611ec757611ec7612a2c565b9060005260206000200154905080876000018481548110611eea57611eea612a2c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f1d57611f1d61308f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610501565b6000915050610501565b600082841480611f74575061ffff8216155b15611f8057508361120c565b50836000808080611fa161ffff8716611f988a6120c5565b61ffff1661186b565b90505b61ffff811615611ff757611fbe8561ffff83168a0a612296565b90945092508315611fd757829450808603955080820191505b611ff0600261ffff83160461ffff168761ffff1661186b565b9050611fa4565b505b61ffff85161561206a5761200d8488612296565b9093509150821561202c57600019909401939092508290600101611ff9565b61ffff8116156120515785848161204557612045612dde565b04935060001901611ff9565b61205c8488886118b7565b600019909501949350611ff9565b6000612075876120c5565b90505b61ffff8216156120b95760006120968261ffff168461ffff1661186b565b90508061ffff16880a86816120ad576120ad612dde565b04955090910390612078565b50505050949350505050565b600060038210156120d8575060ff919050565b60048210156120e957506080919050565b60108210156120fa57506040919050565b61010082101561210c57506020919050565b611bdc82101561211e57506014919050565b612c7082101561213057506013919050565b614aa982101561214257506012919050565b61855482101561215457506011919050565b6201000082101561216757506010919050565b6202183782101561217a5750600f919050565b6204e04682101561218d5750600e919050565b620ced4c8210156121a05750600d919050565b622851468210156121b35750600c919050565b629aa2ad8210156121c65750600b919050565b6303080c018210156121da5750600a919050565b6315c5cbbd8210156121ee57506009919050565b64010000000082101561220357506008919050565b6417c6a1f29f82101561221857506007919050565b6506597fa94f5c82101561222e57506006919050565b66093088c35d733b82101561224557506005919050565b6801000000000000000082101561225e57506004919050565b6a285145f31ae515c447bb5782101561227957506003919050565b600160801b82101561228d57506002919050565b5060015b919050565b600080836000036122ad57506001905060006122da565b838302838582816122c0576122c0612dde565b04146122d35760008092509250506122da565b6001925090505b9250929050565b6000602082840312156122f357600080fd5b81356001600160e01b031981168114610a8f57600080fd5b60006020828403121561231d57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561236e5761235e84835180518252602090810151910152565b9284019290850190600101612341565b5091979650505050505050565b6001600160a01b038116811461121e57600080fd5b80356122918161237b565b6000806000606084860312156123b057600080fd5b83356123bb8161237b565b95602085013595506040909401359392505050565b600080604083850312156123e357600080fd5b8235915060208301356123f58161237b565b809150509250929050565b60008083601f84011261241257600080fd5b5081356001600160401b0381111561242957600080fd5b6020830191508360208260061b85010111156122da57600080fd5b6000806020838503121561245757600080fd5b82356001600160401b0381111561246d57600080fd5b61247985828601612400565b90969095509350505050565b60008083601f84011261249757600080fd5b5081356001600160401b038111156124ae57600080fd5b6020830191508360208260051b85010111156122da57600080fd5b6000806000806000806000806080898b0312156124e557600080fd5b88356001600160401b03808211156124fc57600080fd5b6125088c838d01612485565b909a50985060208b013591508082111561252157600080fd5b61252d8c838d01612485565b909850965060408b013591508082111561254657600080fd5b6125528c838d01612485565b909650945060608b013591508082111561256b57600080fd5b506125788b828c01612485565b999c989b5096995094979396929594505050565b6020808252825182820181905260009190848201906040850190845b818110156125c65783511515835292840192918401916001016125a8565b50909695505050505050565b600080602083850312156125e557600080fd5b82356001600160401b03808211156125fc57600080fd5b818501915085601f83011261261057600080fd5b81358181111561261f57600080fd5b86602082850101111561263157600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561267b5761267b612643565b60405290565b604080519081016001600160401b038111828210171561267b5761267b612643565b604051606081016001600160401b038111828210171561267b5761267b612643565b604051601f8201601f191681016001600160401b03811182821017156126ed576126ed612643565b604052919050565b60006001600160401b0382111561270e5761270e612643565b50601f01601f191660200190565b600082601f83011261272d57600080fd5b813561274061273b826126f5565b6126c5565b81815284602083860101111561275557600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561278457600080fd5b81356001600160401b0381111561279a57600080fd5b61120c8482850161271c565b600080604083850312156127b957600080fd5b50508035926020909101359150565b6000604082840312156127da57600080fd5b50919050565b60008060008060008060008060008060006101408c8e03121561280257600080fd5b61280c8c3561237b565b8b359a506001600160401b038060208e0135111561282957600080fd5b6128398e60208f01358f01612485565b909b50995060408d013581101561284f57600080fd5b506128608d60408e01358e01612400565b909850965060608c013595506128798d60808e016127c8565b945060c08c01356128898161237b565b935061289760e08d01612390565b92506101008c013591506101208c013590509295989b509295989b9093969950565b600080600080604085870312156128cf57600080fd5b84356001600160401b03808211156128e657600080fd5b6128f288838901612485565b9096509450602087013591508082111561290b57600080fd5b5061291887828801612485565b95989497509550505050565b60006040828403121561293657600080fd5b610a8f83836127c8565b6000806040838503121561295357600080fd5b82356001600160401b0381111561296957600080fd5b6129758582860161271c565b95602094909401359450505050565b825181526020808401518183015282516040830152820151606082015260808101610a8f565b6001600160401b038116811461121e57600080fd5b6000608082840312156129d157600080fd5b6129d9612659565b82518060070b81146129ea57600080fd5b815260208301516129fa816129aa565b60208201526040830151600381900b8114612a1457600080fd5b60408201526060928301519281019290925250919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612a5457600080fd5b8135610a8f8161237b565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761050157610501612a5f565b8051801515811461229157600080fd5b600060208284031215612aae57600080fd5b610a8f82612a8c565b600060208284031215612ac957600080fd5b8151610a8f8161237b565b60005b83811015612aef578181015183820152602001612ad7565b50506000910152565b600060808284031215612b0a57600080fd5b612b12612659565b90508151612b1f8161237b565b81526020820151612b2f8161237b565b60208201526040820151612b42816129aa565b6040820152612b5360608301612a8c565b606082015292915050565b60006020808385031215612b7157600080fd5b82516001600160401b0380821115612b8857600080fd5b9084019060a08287031215612b9c57600080fd5b612ba4612681565b825182811115612bb357600080fd5b830160608189031215612bc557600080fd5b612bcd6126a3565b815160ff81168114612bde57600080fd5b81528186015186820152604082015184811115612bfa57600080fd5b82019350601f84018913612c0d57600080fd5b83519150612c1d61273b836126f5565b8281528987848701011115612c3157600080fd5b612c4083888301898801612ad4565b6040820152825250612c5487848601612af8565b848201528094505050505092915050565b60008082840360e0811215612c7957600080fd5b60c0811215612c8757600080fd5b612c8f6126a3565b84518152602085015160208201526080603f1983011215612caf57600080fd5b612cb7612659565b91506040850151612cc78161237b565b80835250606085015160208301526080850151604083015260a08501516060830152816040820152809350505060c083015190509250929050565b600060208284031215612d1457600080fd5b8151610a8f816129aa565b8181038181111561050157610501612a5f565b600381810b9083900b01637fffffff8113637fffffff198212171561050157610501612a5f565b600060408284031215612d6b57600080fd5b612d73612681565b82358152602083013560208201528091505092915050565b60008160030b637fffffff198103612da557612da5612a5f565b60000392915050565b80820260008212600160ff1b84141615612dca57612dca612a5f565b818105831482151761050157610501612a5f565b634e487b7160e01b600052601260045260246000fd5b600082612e0357612e03612dde565b600160ff1b821460001984141615612e1d57612e1d612a5f565b500590565b6001600160c01b038116811461121e57600080fd5b8135612e4281612e22565b81546001600160c01b03199081166001600160c01b039290921691821783556020840135612e6f816129aa565b60c01b1617905550565b600060208284031215612e8b57600080fd5b8135610a8f81612e22565b600060208284031215612ea857600080fd5b8135610a8f816129aa565b600181815b80851115612eee578160001904821115612ed457612ed4612a5f565b80851615612ee157918102915b93841c9390800290612eb8565b509250929050565b600082612f0557506001610501565b81612f1257506000610501565b8160018114612f285760028114612f3257612f4e565b6001915050610501565b60ff841115612f4357612f43612a5f565b50506001821b610501565b5060208310610133831016604e8410600b8410161715612f71575081810a610501565b612f7b8383612eb3565b8060001904821115612f8f57612f8f612a5f565b029392505050565b6000610a8f63ffffffff841683612ef6565b600082612fb857612fb8612dde565b500490565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612ff5816017850160208801612ad4565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613026816028840160208801612ad4565b01602801949350505050565b6020815260008251806020840152613051816040850160208701612ad4565b601f01601f19169190910160400192915050565b8082018082111561050157610501612a5f565b60008161308757613087612a5f565b506000190190565b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220ba899357ff149897aea9e63c3a06e271fed944932d819738c722c1c923e6a3d464736f6c63430008150033",
  "deployer": "0x968D0Cd7343f711216817E617d3f92a23dC91c07",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "bulkOverrideRenewalFees(bytes32[],uint256[])": {
        "details": "Bulk override renewal fees. Requirements: - The method caller is operator. - The input array lengths must be larger than 0 and the same. Emits events {RenewalFeeOverridingUpdated}.",
        "params": {
          "lbHashes": "Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')",
          "usdPrices": "Array of prices in USD. Leave 2^256 - 1 to remove overriding."
        }
      },
      "bulkSetDomainPrice(bytes32[],uint256[],bytes32[],uint256[])": {
        "details": "Bulk override domain prices. Requirements: - The method caller is operator. - The input array lengths must be larger than 0 and the same. Emits events {DomainPriceUpdated}.",
        "params": {
          "lbHashes": "Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')",
          "proofHashes": "Array of proof hashes.",
          "ronPrices": "Array of prices in (W)RON token.",
          "setTypes": "Array of update types from the operator service."
        }
      },
      "bulkTrySetDomainPrice(bytes32[],uint256[],bytes32[],uint256[])": {
        "details": "Bulk try to set domain prices. Returns a boolean array indicating whether domain prices at the corresponding indexes if set or not. Requirements: - The method caller is operator. - The input array lengths must be larger than 0 and the same. - The price should be larger than current domain price or it will not be updated. Emits events {DomainPriceUpdated} optionally.",
        "params": {
          "lbHashes": "Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')",
          "proofHashes": "Array of proof hashes.",
          "ronPrices": "Array of prices in (W)RON token.",
          "setTypes": "Array of update types from the operator service."
        }
      },
      "convertRONToUSD(uint256)": {
        "details": "Returns the converted amount from RON to USD."
      },
      "convertUSDToRON(uint256)": {
        "details": "Returns the converted amount from USD to RON."
      },
      "getDomainPrice(string)": {
        "details": "Return the domain price.",
        "params": {
          "label": "The domain label to register (Eg, 'foo' for 'foo.ron')."
        }
      },
      "getOverriddenRenewalFee(string)": {
        "details": "Returns the renewal fee of a label. Reverts if not overridden."
      },
      "getPythOracleConfig()": {
        "details": "Returns the Pyth oracle config."
      },
      "getRenewalFee(string,uint256)": {
        "details": "Returns the renewal fee in USD and RON.",
        "params": {
          "duration": "Amount of second(s).",
          "label": "The domain label to register (Eg, 'foo' for 'foo.ron')."
        }
      },
      "getRenewalFeeByLengths()": {
        "details": "Returns the renewal fee by lengths."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getScaleDownRuleForDomainPrice()": {
        "details": "Returns the percentage to scale from domain price each period."
      },
      "getTaxRatio()": {
        "details": "Returns tax ratio."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setPythOracleConfig(address,uint256,bytes32)": {
        "details": "Sets the Pyth oracle config. Requirements: - The method caller is admin. Emits events {PythOracleConfigUpdated}."
      },
      "setRenewalFeeByLengths((uint256,uint256)[])": {
        "details": "Sets the renewal fee by lengths Requirements: - The method caller is admin. Emits events {RenewalFeeByLengthUpdated}. Emits an event {MaxRenewalFeeLengthUpdated} optionally."
      },
      "setScaleDownRuleForDomainPrice((uint192,uint64))": {
        "details": "Sets the percentage to scale from domain price each period. Requirements: - The method caller is admin. Emits events {DomainPriceScaleRuleUpdated}."
      },
      "setTaxRatio(uint256)": {
        "details": "Sets renewal reservation ratio. Requirements: - The method caller is admin. Emits an event {TaxRatioUpdated}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "events": {
      "DomainPriceScaleRuleUpdated(address,uint192,uint64)": {
        "details": "Emitted when the rule to rescale domain price is updated."
      },
      "DomainPriceUpdated(address,bytes32,uint256,bytes32,uint256)": {
        "details": "Emitted when the domain price is updated."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "MaxRenewalFeeLengthUpdated(address,uint256)": {
        "details": "Emitted when the maximum length of renewal fee is updated."
      },
      "PythOracleConfigUpdated(address,address,uint256,bytes32)": {
        "details": "Emitted when the Pyth Oracle config is updated."
      },
      "RenewalFeeByLengthUpdated(address,uint256,uint256)": {
        "details": "Emitted when the renew fee is updated."
      },
      "RenewalFeeOverridingUpdated(address,bytes32,uint256)": {
        "details": "Emitted when the renew fee of a domain is overridden. Value of `inverseRenewalFee` is 0 when not overridden."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "TaxRatioUpdated(address,uint256)": {
        "details": "Emitted when the renewal reservation ratio is updated."
      }
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"int32\",\"name\":\"expo1\",\"type\":\"int32\"},{\"internalType\":\"int32\",\"name\":\"expo2\",\"type\":\"int32\"},{\"internalType\":\"int64\",\"name\":\"price1\",\"type\":\"int64\"}],\"name\":\"ErrComputedPriceTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"}],\"name\":\"ErrExponentTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedAuctionDomainExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"PeriodNumOverflowedUint16\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenewalFeeIsNotOverriden\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint192\",\"name\":\"ratio\",\"type\":\"uint192\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"period\",\"type\":\"uint64\"}],\"name\":\"DomainPriceScaleRuleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"labelHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setType\",\"type\":\"uint256\"}],\"name\":\"DomainPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"maxLength\",\"type\":\"uint256\"}],\"name\":\"MaxRenewalFeeLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IPyth\",\"name\":\"pyth\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAcceptableAge\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pythIdForRONUSD\",\"type\":\"bytes32\"}],\"name\":\"PythOracleConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"labelLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"renewalFee\",\"type\":\"uint256\"}],\"name\":\"RenewalFeeByLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"labelHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"inverseRenewalFee\",\"type\":\"uint256\"}],\"name\":\"RenewalFeeOverridingUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"TaxRatioUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"lbHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"usdPrices\",\"type\":\"uint256[]\"}],\"name\":\"bulkOverrideRenewalFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"lbHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ronPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"setTypes\",\"type\":\"uint256[]\"}],\"name\":\"bulkSetDomainPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"lbHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ronPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"setTypes\",\"type\":\"uint256[]\"}],\"name\":\"bulkTrySetDomainPrice\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"updated\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ronWei\",\"type\":\"uint256\"}],\"name\":\"convertRONToUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdWei\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdWei\",\"type\":\"uint256\"}],\"name\":\"convertUSDToRON\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ronWei\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"getDomainPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ronPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"getOverriddenRenewalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPythOracleConfig\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"pyth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAcceptableAge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pythIdForRONUSD\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"getRenewalFee\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ron\",\"type\":\"uint256\"}],\"internalType\":\"struct INSDomainPrice.UnitPrice\",\"name\":\"basePrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ron\",\"type\":\"uint256\"}],\"internalType\":\"struct INSDomainPrice.UnitPrice\",\"name\":\"tax\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRenewalFeeByLengths\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"labelLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct INSDomainPrice.RenewalFee[]\",\"name\":\"renewalFees\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScaleDownRuleForDomainPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint192\",\"name\":\"ratio\",\"type\":\"uint192\"},{\"internalType\":\"uint64\",\"name\":\"period\",\"type\":\"uint64\"}],\"internalType\":\"struct PeriodScaler\",\"name\":\"scaleRule\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"labelLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct INSDomainPrice.RenewalFee[]\",\"name\":\"renewalFees\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"taxRatio\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint192\",\"name\":\"ratio\",\"type\":\"uint192\"},{\"internalType\":\"uint64\",\"name\":\"period\",\"type\":\"uint64\"}],\"internalType\":\"struct PeriodScaler\",\"name\":\"domainPriceScaleRule\",\"type\":\"tuple\"},{\"internalType\":\"contract IPyth\",\"name\":\"pyth\",\"type\":\"address\"},{\"internalType\":\"contract INSAuction\",\"name\":\"auction\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAcceptableAge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pythIdForRONUSD\",\"type\":\"bytes32\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"pyth\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAcceptableAge\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"pythIdForRONUSD\",\"type\":\"bytes32\"}],\"name\":\"setPythOracleConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"labelLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct INSDomainPrice.RenewalFee[]\",\"name\":\"renewalFees\",\"type\":\"tuple[]\"}],\"name\":\"setRenewalFeeByLengths\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint192\",\"name\":\"ratio\",\"type\":\"uint192\"},{\"internalType\":\"uint64\",\"name\":\"period\",\"type\":\"uint64\"}],\"internalType\":\"struct PeriodScaler\",\"name\":\"scaleRule\",\"type\":\"tuple\"}],\"name\":\"setScaleDownRuleForDomainPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"setTaxRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DomainPriceScaleRuleUpdated(address,uint192,uint64)\":{\"details\":\"Emitted when the rule to rescale domain price is updated.\"},\"DomainPriceUpdated(address,bytes32,uint256,bytes32,uint256)\":{\"details\":\"Emitted when the domain price is updated.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MaxRenewalFeeLengthUpdated(address,uint256)\":{\"details\":\"Emitted when the maximum length of renewal fee is updated.\"},\"PythOracleConfigUpdated(address,address,uint256,bytes32)\":{\"details\":\"Emitted when the Pyth Oracle config is updated.\"},\"RenewalFeeByLengthUpdated(address,uint256,uint256)\":{\"details\":\"Emitted when the renew fee is updated.\"},\"RenewalFeeOverridingUpdated(address,bytes32,uint256)\":{\"details\":\"Emitted when the renew fee of a domain is overridden. Value of `inverseRenewalFee` is 0 when not overridden.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TaxRatioUpdated(address,uint256)\":{\"details\":\"Emitted when the renewal reservation ratio is updated.\"}},\"kind\":\"dev\",\"methods\":{\"bulkOverrideRenewalFees(bytes32[],uint256[])\":{\"details\":\"Bulk override renewal fees. Requirements: - The method caller is operator. - The input array lengths must be larger than 0 and the same. Emits events {RenewalFeeOverridingUpdated}.\",\"params\":{\"lbHashes\":\"Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')\",\"usdPrices\":\"Array of prices in USD. Leave 2^256 - 1 to remove overriding.\"}},\"bulkSetDomainPrice(bytes32[],uint256[],bytes32[],uint256[])\":{\"details\":\"Bulk override domain prices. Requirements: - The method caller is operator. - The input array lengths must be larger than 0 and the same. Emits events {DomainPriceUpdated}.\",\"params\":{\"lbHashes\":\"Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')\",\"proofHashes\":\"Array of proof hashes.\",\"ronPrices\":\"Array of prices in (W)RON token.\",\"setTypes\":\"Array of update types from the operator service.\"}},\"bulkTrySetDomainPrice(bytes32[],uint256[],bytes32[],uint256[])\":{\"details\":\"Bulk try to set domain prices. Returns a boolean array indicating whether domain prices at the corresponding indexes if set or not. Requirements: - The method caller is operator. - The input array lengths must be larger than 0 and the same. - The price should be larger than current domain price or it will not be updated. Emits events {DomainPriceUpdated} optionally.\",\"params\":{\"lbHashes\":\"Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')\",\"proofHashes\":\"Array of proof hashes.\",\"ronPrices\":\"Array of prices in (W)RON token.\",\"setTypes\":\"Array of update types from the operator service.\"}},\"convertRONToUSD(uint256)\":{\"details\":\"Returns the converted amount from RON to USD.\"},\"convertUSDToRON(uint256)\":{\"details\":\"Returns the converted amount from USD to RON.\"},\"getDomainPrice(string)\":{\"details\":\"Return the domain price.\",\"params\":{\"label\":\"The domain label to register (Eg, 'foo' for 'foo.ron').\"}},\"getOverriddenRenewalFee(string)\":{\"details\":\"Returns the renewal fee of a label. Reverts if not overridden.\"},\"getPythOracleConfig()\":{\"details\":\"Returns the Pyth oracle config.\"},\"getRenewalFee(string,uint256)\":{\"details\":\"Returns the renewal fee in USD and RON.\",\"params\":{\"duration\":\"Amount of second(s).\",\"label\":\"The domain label to register (Eg, 'foo' for 'foo.ron').\"}},\"getRenewalFeeByLengths()\":{\"details\":\"Returns the renewal fee by lengths.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getScaleDownRuleForDomainPrice()\":{\"details\":\"Returns the percentage to scale from domain price each period.\"},\"getTaxRatio()\":{\"details\":\"Returns tax ratio.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPythOracleConfig(address,uint256,bytes32)\":{\"details\":\"Sets the Pyth oracle config. Requirements: - The method caller is admin. Emits events {PythOracleConfigUpdated}.\"},\"setRenewalFeeByLengths((uint256,uint256)[])\":{\"details\":\"Sets the renewal fee by lengths Requirements: - The method caller is admin. Emits events {RenewalFeeByLengthUpdated}. Emits an event {MaxRenewalFeeLengthUpdated} optionally.\"},\"setScaleDownRuleForDomainPrice((uint192,uint64))\":{\"details\":\"Sets the percentage to scale from domain price each period. Requirements: - The method caller is admin. Emits events {DomainPriceScaleRuleUpdated}.\"},\"setTaxRatio(uint256)\":{\"details\":\"Sets renewal reservation ratio. Requirements: - The method caller is admin. Emits an event {TaxRatioUpdated}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"MAX_PERCENTAGE\":{\"details\":\"Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\"},\"OPERATOR_ROLE\":{\"details\":\"Value equals to keccak256(\\\"OPERATOR_ROLE\\\").\"},\"USD_DECIMALS\":{\"details\":\"Decimal for USD.\"},\"____gap\":{\"details\":\"Gap for upgradeability.\"},\"_auction\":{\"details\":\"RNSAuction contract\"},\"_dp\":{\"details\":\"Mapping from name => domain price in USD\"},\"_dpDownScaler\":{\"details\":\"The percentage scale from domain price each period\"},\"_maxAcceptableAge\":{\"details\":\"Max acceptable age of the price oracle request\"},\"_pyth\":{\"details\":\"Pyth oracle contract\"},\"_pythIdForRONUSD\":{\"details\":\"Price feed ID on Pyth for RON/USD\"},\"_rnFee\":{\"details\":\"Mapping from domain length => renewal fee in USD\"},\"_rnFeeOverriding\":{\"details\":\"Mapping from name => inverse bitwise of renewal fee overriding.\"},\"_rnfMaxLength\":{\"details\":\"Max length of the renewal fee\"},\"_taxRatio\":{\"details\":\"Extra fee for renewals based on the current domain price.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getOverriddenRenewalFee(string)\":{\"notice\":\"This method is to help developers check the domain renewal fee overriding. Consider using method {getRenewalFee} instead for full handling of renewal fees.\"},\"setScaleDownRuleForDomainPrice((uint192,uint64))\":{\"notice\":\"Applies for the business rule: -x% each y seconds.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RNSDomainPrice.sol\":\"RNSDomainPrice\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/=lib/pyth-sdk-solidity/\",\":@rns-contracts/=src/\",\":buffer/=lib/buffer/contracts/\",\":contract-template/=lib/contract-template/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlEnumerable.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\nimport \\\"../utils/structs/EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\\n */\\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\\n        return _roleMembers[role].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\\n        return _roleMembers[role].length();\\n    }\\n\\n    /**\\n     * @dev Overload {_grantRole} to track enumerable memberships\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual override {\\n        super._grantRole(role, account);\\n        _roleMembers[role].add(account);\\n    }\\n\\n    /**\\n     * @dev Overload {_revokeRole} to track enumerable memberships\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual override {\\n        super._revokeRole(role, account);\\n        _roleMembers[role].remove(account);\\n    }\\n}\\n\",\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerable is IAccessControl {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"lib/pyth-sdk-solidity/IPyth.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PythStructs.sol\\\";\\nimport \\\"./IPythEvents.sol\\\";\\n\\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\\n/// @dev Please refer to the guidance at https://docs.pyth.network/consumers/best-practices for how to consume prices safely.\\n/// @author Pyth Data Association\\ninterface IPyth is IPythEvents {\\n    /// @notice Returns the period (in seconds) that a price feed is considered valid since its publish time\\n    function getValidTimePeriod() external view returns (uint validTimePeriod);\\n\\n    /// @notice Returns the price and confidence interval.\\n    /// @dev Reverts if the price has not been updated within the last `getValidTimePeriod()` seconds.\\n    /// @param id The Pyth Price Feed ID of which to fetch the price and confidence interval.\\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\\n    function getPrice(\\n        bytes32 id\\n    ) external view returns (PythStructs.Price memory price);\\n\\n    /// @notice Returns the exponentially-weighted moving average price and confidence interval.\\n    /// @dev Reverts if the EMA price is not available.\\n    /// @param id The Pyth Price Feed ID of which to fetch the EMA price and confidence interval.\\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\\n    function getEmaPrice(\\n        bytes32 id\\n    ) external view returns (PythStructs.Price memory price);\\n\\n    /// @notice Returns the price of a price feed without any sanity checks.\\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\\n    ///\\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\\n    /// sufficiently recent for their application. If you are considering using this function, it may be\\n    /// safer / easier to use either `getPrice` or `getPriceNoOlderThan`.\\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\\n    function getPriceUnsafe(\\n        bytes32 id\\n    ) external view returns (PythStructs.Price memory price);\\n\\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\\n    /// recently.\\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\\n    function getPriceNoOlderThan(\\n        bytes32 id,\\n        uint age\\n    ) external view returns (PythStructs.Price memory price);\\n\\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\\n    /// However, if the price is not recent this function returns the latest available price.\\n    ///\\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\\n    /// the returned price is recent or useful for any particular application.\\n    ///\\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\\n    /// sufficiently recent for their application. If you are considering using this function, it may be\\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\\n    function getEmaPriceUnsafe(\\n        bytes32 id\\n    ) external view returns (PythStructs.Price memory price);\\n\\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\\n    /// of the current time.\\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\\n    /// recently.\\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\\n    function getEmaPriceNoOlderThan(\\n        bytes32 id,\\n        uint age\\n    ) external view returns (PythStructs.Price memory price);\\n\\n    /// @notice Update price feeds with given update messages.\\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\\n    /// `getUpdateFee` with the length of the `updateData` array.\\n    /// Prices will be updated if they are more recent than the current stored prices.\\n    /// The call will succeed even if the update is not the most recent.\\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\\n    /// @param updateData Array of price update data.\\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\\n\\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\\n    ///\\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\\n    /// `getUpdateFee` with the length of the `updateData` array.\\n    ///\\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\\n    ///\\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\\n    /// @param updateData Array of price update data.\\n    /// @param priceIds Array of price ids.\\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\\n    function updatePriceFeedsIfNecessary(\\n        bytes[] calldata updateData,\\n        bytes32[] calldata priceIds,\\n        uint64[] calldata publishTimes\\n    ) external payable;\\n\\n    /// @notice Returns the required fee to update an array of price updates.\\n    /// @param updateData Array of price update data.\\n    /// @return feeAmount The required fee in Wei.\\n    function getUpdateFee(\\n        bytes[] calldata updateData\\n    ) external view returns (uint feeAmount);\\n\\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\\n    /// within `minPublishTime` and `maxPublishTime`.\\n    ///\\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\\n    /// otherwise, please consider using `updatePriceFeeds`. This method does not store the price updates on-chain.\\n    ///\\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\\n    /// `getUpdateFee` with the length of the `updateData` array.\\n    ///\\n    ///\\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\\n    /// no update for any of the given `priceIds` within the given time range.\\n    /// @param updateData Array of price update data.\\n    /// @param priceIds Array of price ids.\\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\\n    function parsePriceFeedUpdates(\\n        bytes[] calldata updateData,\\n        bytes32[] calldata priceIds,\\n        uint64 minPublishTime,\\n        uint64 maxPublishTime\\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\\n}\\n\",\"keccak256\":\"0x949c65c65fea0578c09a6fc068e09ed1165adede2c835984cefcb25d76de1de2\",\"license\":\"Apache-2.0\"},\"lib/pyth-sdk-solidity/IPythEvents.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\n/// @title IPythEvents contains the events that Pyth contract emits.\\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\\ninterface IPythEvents {\\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\\n    /// @param id The Pyth Price Feed ID.\\n    /// @param publishTime Publish time of the given price update.\\n    /// @param price Price of the given price update.\\n    /// @param conf Confidence interval of the given price update.\\n    event PriceFeedUpdate(\\n        bytes32 indexed id,\\n        uint64 publishTime,\\n        int64 price,\\n        uint64 conf\\n    );\\n\\n    /// @dev Emitted when a batch price update is processed successfully.\\n    /// @param chainId ID of the source chain that the batch price update comes from.\\n    /// @param sequenceNumber Sequence number of the batch price update.\\n    event BatchPriceFeedUpdate(uint16 chainId, uint64 sequenceNumber);\\n}\\n\",\"keccak256\":\"0x048a35526c2e77d107d43ba336f1dcf31f64cef25ba429ae1f7a0fbc11c23320\",\"license\":\"Apache-2.0\"},\"lib/pyth-sdk-solidity/PythStructs.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\ncontract PythStructs {\\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\\n    //\\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\\n    // Both the price and confidence are stored in a fixed-point numeric representation,\\n    // `x * (10^expo)`, where `expo` is the exponent.\\n    //\\n    // Please refer to the documentation at https://docs.pyth.network/consumers/best-practices for how\\n    // to how this price safely.\\n    struct Price {\\n        // Price\\n        int64 price;\\n        // Confidence interval around the price\\n        uint64 conf;\\n        // Price exponent\\n        int32 expo;\\n        // Unix timestamp describing when the price was published\\n        uint publishTime;\\n    }\\n\\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\\n    struct PriceFeed {\\n        // The price ID.\\n        bytes32 id;\\n        // Latest available price\\n        Price price;\\n        // Latest available exponentially-weighted moving average price\\n        Price emaPrice;\\n    }\\n}\\n\",\"keccak256\":\"0x95ff0a6d64517348ef604b8bcf246b561a9445d7e607b8f48491c617cfda9b65\",\"license\":\"Apache-2.0\"},\"src/RNSDomainPrice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { AccessControlEnumerable } from \\\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\\\";\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport { IPyth, PythStructs } from \\\"@pythnetwork/IPyth.sol\\\";\\nimport { INSUnified } from \\\"./interfaces/INSUnified.sol\\\";\\nimport { INSAuction } from \\\"./interfaces/INSAuction.sol\\\";\\nimport { INSDomainPrice } from \\\"./interfaces/INSDomainPrice.sol\\\";\\nimport { PeriodScaler, LibPeriodScaler, Math } from \\\"./libraries/math/PeriodScalingUtils.sol\\\";\\nimport { TimestampWrapper } from \\\"./libraries/TimestampWrapperUtils.sol\\\";\\nimport { LibSafeRange } from \\\"./libraries/math/LibSafeRange.sol\\\";\\nimport { LibString } from \\\"./libraries/LibString.sol\\\";\\nimport { LibRNSDomain } from \\\"./libraries/LibRNSDomain.sol\\\";\\nimport { PythConverter } from \\\"./libraries/pyth/PythConverter.sol\\\";\\n\\ncontract RNSDomainPrice is Initializable, AccessControlEnumerable, INSDomainPrice {\\n  using LibString for *;\\n  using LibRNSDomain for string;\\n  using LibPeriodScaler for PeriodScaler;\\n  using PythConverter for PythStructs.Price;\\n\\n  /// @inheritdoc INSDomainPrice\\n  uint8 public constant USD_DECIMALS = 18;\\n  /// @inheritdoc INSDomainPrice\\n  uint64 public constant MAX_PERCENTAGE = 100_00;\\n  /// @inheritdoc INSDomainPrice\\n  bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n  /// @dev Gap for upgradeability.\\n  uint256[50] private ____gap;\\n\\n  /// @dev Pyth oracle contract\\n  IPyth internal _pyth;\\n  /// @dev RNSAuction contract\\n  INSAuction internal _auction;\\n  /// @dev Extra fee for renewals based on the current domain price.\\n  uint256 internal _taxRatio;\\n  /// @dev Max length of the renewal fee\\n  uint256 internal _rnfMaxLength;\\n  /// @dev Max acceptable age of the price oracle request\\n  uint256 internal _maxAcceptableAge;\\n  /// @dev Price feed ID on Pyth for RON/USD\\n  bytes32 internal _pythIdForRONUSD;\\n  /// @dev The percentage scale from domain price each period\\n  PeriodScaler internal _dpDownScaler;\\n\\n  /// @dev Mapping from domain length => renewal fee in USD\\n  mapping(uint256 length => uint256 usdPrice) internal _rnFee;\\n  /// @dev Mapping from name => domain price in USD\\n  mapping(bytes32 lbHash => TimestampWrapper usdPrice) internal _dp;\\n  /// @dev Mapping from name => inverse bitwise of renewal fee overriding.\\n  mapping(bytes32 lbHash => uint256 usdPrice) internal _rnFeeOverriding;\\n\\n  constructor() payable {\\n    _disableInitializers();\\n  }\\n\\n  function initialize(\\n    address admin,\\n    address[] calldata operators,\\n    RenewalFee[] calldata renewalFees,\\n    uint256 taxRatio,\\n    PeriodScaler calldata domainPriceScaleRule,\\n    IPyth pyth,\\n    INSAuction auction,\\n    uint256 maxAcceptableAge,\\n    bytes32 pythIdForRONUSD\\n  ) external initializer {\\n    uint256 length = operators.length;\\n    bytes32 operatorRole = OPERATOR_ROLE;\\n\\n    for (uint256 i; i < length;) {\\n      _setupRole(operatorRole, operators[i]);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n    _auction = auction;\\n    _setupRole(DEFAULT_ADMIN_ROLE, admin);\\n    _setRenewalFeeByLengths(renewalFees);\\n    _setTaxRatio(taxRatio);\\n    _setDomainPriceScaleRule(domainPriceScaleRule);\\n    _setPythOracleConfig(pyth, maxAcceptableAge, pythIdForRONUSD);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getPythOracleConfig() external view returns (IPyth pyth, uint256 maxAcceptableAge, bytes32 pythIdForRONUSD) {\\n    return (_pyth, _maxAcceptableAge, _pythIdForRONUSD);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function setPythOracleConfig(IPyth pyth, uint256 maxAcceptableAge, bytes32 pythIdForRONUSD)\\n    external\\n    onlyRole(DEFAULT_ADMIN_ROLE)\\n  {\\n    _setPythOracleConfig(pyth, maxAcceptableAge, pythIdForRONUSD);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getRenewalFeeByLengths() external view returns (RenewalFee[] memory renewalFees) {\\n    uint256 rnfMaxLength = _rnfMaxLength;\\n    renewalFees = new RenewalFee[](rnfMaxLength);\\n    uint256 len;\\n\\n    for (uint256 i; i < rnfMaxLength;) {\\n      unchecked {\\n        len = i + 1;\\n        renewalFees[i].labelLength = len;\\n        renewalFees[i].fee = _rnFee[len];\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function setRenewalFeeByLengths(RenewalFee[] calldata renewalFees) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setRenewalFeeByLengths(renewalFees);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getTaxRatio() external view returns (uint256 ratio) {\\n    return _taxRatio;\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function setTaxRatio(uint256 ratio) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setTaxRatio(ratio);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getScaleDownRuleForDomainPrice() external view returns (PeriodScaler memory scaleRule) {\\n    return _dpDownScaler;\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function setScaleDownRuleForDomainPrice(PeriodScaler calldata scaleRule) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setDomainPriceScaleRule(scaleRule);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getOverriddenRenewalFee(string calldata label) external view returns (uint256 usdFee) {\\n    usdFee = _rnFeeOverriding[label.hashLabel()];\\n    if (usdFee == 0) revert RenewalFeeIsNotOverriden();\\n    return ~usdFee;\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function bulkOverrideRenewalFees(bytes32[] calldata lbHashes, uint256[] calldata usdPrices)\\n    external\\n    onlyRole(OPERATOR_ROLE)\\n  {\\n    uint256 length = lbHashes.length;\\n    if (length == 0 || length != usdPrices.length) revert InvalidArrayLength();\\n    uint256 inverseBitwise;\\n    address operator = _msgSender();\\n\\n    for (uint256 i; i < length;) {\\n      inverseBitwise = ~usdPrices[i];\\n      _rnFeeOverriding[lbHashes[i]] = inverseBitwise;\\n      emit RenewalFeeOverridingUpdated(operator, lbHashes[i], inverseBitwise);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function bulkTrySetDomainPrice(\\n    bytes32[] calldata lbHashes,\\n    uint256[] calldata ronPrices,\\n    bytes32[] calldata proofHashes,\\n    uint256[] calldata setTypes\\n  ) external onlyRole(OPERATOR_ROLE) returns (bool[] memory updated) {\\n    uint256 length = _requireBulkSetDomainPriceArgumentsValid(lbHashes, ronPrices, proofHashes, setTypes);\\n    address operator = _msgSender();\\n    updated = new bool[](length);\\n\\n    for (uint256 i; i < length;) {\\n      updated[i] = _setDomainPrice(operator, lbHashes[i], ronPrices[i], proofHashes[i], setTypes[i], false);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function bulkSetDomainPrice(\\n    bytes32[] calldata lbHashes,\\n    uint256[] calldata ronPrices,\\n    bytes32[] calldata proofHashes,\\n    uint256[] calldata setTypes\\n  ) external onlyRole(OPERATOR_ROLE) {\\n    uint256 length = _requireBulkSetDomainPriceArgumentsValid(lbHashes, ronPrices, proofHashes, setTypes);\\n    address operator = _msgSender();\\n\\n    for (uint256 i; i < length;) {\\n      _setDomainPrice(operator, lbHashes[i], ronPrices[i], proofHashes[i], setTypes[i], true);\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getDomainPrice(string memory label) public view returns (uint256 usdPrice, uint256 ronPrice) {\\n    usdPrice = _getDomainPrice(label.hashLabel());\\n    ronPrice = convertUSDToRON(usdPrice);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function getRenewalFee(string memory label, uint256 duration)\\n    public\\n    view\\n    returns (UnitPrice memory basePrice, UnitPrice memory tax)\\n  {\\n    uint256 nameLen = label.strlen();\\n    bytes32 lbHash = label.hashLabel();\\n    uint256 overriddenRenewalFee = _rnFeeOverriding[lbHash];\\n\\n    if (overriddenRenewalFee != 0) {\\n      basePrice.usd = duration * ~overriddenRenewalFee;\\n    } else {\\n      uint256 renewalFeeByLength = _rnFee[Math.min(nameLen, _rnfMaxLength)];\\n      basePrice.usd = duration * renewalFeeByLength;\\n      uint256 id = LibRNSDomain.toId(LibRNSDomain.RON_ID, label);\\n      INSAuction auction = _auction;\\n      if (auction.reserved(id)) {\\n        INSUnified rns = auction.getRNSUnified();\\n        uint256 expiry = LibSafeRange.addWithUpperbound(rns.getRecord(id).mut.expiry, duration, type(uint64).max);\\n        (INSAuction.DomainAuction memory domainAuction,) = auction.getAuction(id);\\n        uint256 claimedAt = domainAuction.bid.claimedAt;\\n        if (claimedAt != 0 && expiry - claimedAt > auction.MAX_AUCTION_DOMAIN_EXPIRY()) {\\n          revert ExceedAuctionDomainExpiry();\\n        }\\n        // Tax is added to the name reserved for the auction\\n        tax.usd = Math.mulDiv(_taxRatio, _getDomainPrice(lbHash), MAX_PERCENTAGE);\\n      }\\n    }\\n\\n    tax.ron = convertUSDToRON(tax.usd);\\n    basePrice.ron = convertUSDToRON(basePrice.usd);\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function convertUSDToRON(uint256 usdWei) public view returns (uint256 ronWei) {\\n    return _pyth.getPriceNoOlderThan(_pythIdForRONUSD, _maxAcceptableAge).inverse({ expo: -18 }).mul({\\n      inpWei: usdWei,\\n      inpDecimals: int32(uint32(USD_DECIMALS)),\\n      outDecimals: 18\\n    });\\n  }\\n\\n  /**\\n   * @inheritdoc INSDomainPrice\\n   */\\n  function convertRONToUSD(uint256 ronWei) public view returns (uint256 usdWei) {\\n    return _pyth.getPriceNoOlderThan(_pythIdForRONUSD, _maxAcceptableAge).mul({\\n      inpWei: ronWei,\\n      inpDecimals: 18,\\n      outDecimals: int32(uint32(USD_DECIMALS))\\n    });\\n  }\\n\\n  /**\\n   * @dev Reverts if the arguments of the method {bulkSetDomainPrice} is invalid.\\n   */\\n  function _requireBulkSetDomainPriceArgumentsValid(\\n    bytes32[] calldata lbHashes,\\n    uint256[] calldata ronPrices,\\n    bytes32[] calldata proofHashes,\\n    uint256[] calldata setTypes\\n  ) internal pure returns (uint256 length) {\\n    length = lbHashes.length;\\n    if (length == 0 || ronPrices.length != length || proofHashes.length != length || setTypes.length != length) {\\n      revert InvalidArrayLength();\\n    }\\n  }\\n\\n  /**\\n   * @dev Helper method to set domain price.\\n   *\\n   * Emits an event {DomainPriceUpdated} optionally.\\n   */\\n  function _setDomainPrice(\\n    address operator,\\n    bytes32 lbHash,\\n    uint256 ronPrice,\\n    bytes32 proofHash,\\n    uint256 setType,\\n    bool forced\\n  ) internal returns (bool updated) {\\n    uint256 usdPrice = convertRONToUSD(ronPrice);\\n    TimestampWrapper storage dp = _dp[lbHash];\\n    updated = forced || dp.value < usdPrice;\\n\\n    if (updated) {\\n      dp.value = usdPrice;\\n      dp.timestamp = block.timestamp;\\n      emit DomainPriceUpdated(operator, lbHash, usdPrice, proofHash, setType);\\n    }\\n  }\\n\\n  /**\\n   * @dev Sets renewal reservation ratio.\\n   *\\n   * Emits an event {TaxRatioUpdated}.\\n   */\\n  function _setTaxRatio(uint256 ratio) internal {\\n    _taxRatio = ratio;\\n    emit TaxRatioUpdated(_msgSender(), ratio);\\n  }\\n\\n  /**\\n   * @dev Sets domain price scale rule.\\n   *\\n   * Emits events {DomainPriceScaleRuleUpdated}.\\n   */\\n  function _setDomainPriceScaleRule(PeriodScaler calldata domainPriceScaleRule) internal {\\n    _dpDownScaler = domainPriceScaleRule;\\n    emit DomainPriceScaleRuleUpdated(_msgSender(), domainPriceScaleRule.ratio, domainPriceScaleRule.period);\\n  }\\n\\n  /**\\n   * @dev Sets renewal fee.\\n   *\\n   * Emits events {RenewalFeeByLengthUpdated}.\\n   * Emits an event {MaxRenewalFeeLengthUpdated} optionally.\\n   */\\n  function _setRenewalFeeByLengths(RenewalFee[] calldata renewalFees) internal {\\n    address operator = _msgSender();\\n    RenewalFee memory renewalFee;\\n    uint256 length = renewalFees.length;\\n    uint256 maxRenewalFeeLength = _rnfMaxLength;\\n\\n    for (uint256 i; i < length;) {\\n      renewalFee = renewalFees[i];\\n      maxRenewalFeeLength = Math.max(maxRenewalFeeLength, renewalFee.labelLength);\\n      _rnFee[renewalFee.labelLength] = renewalFee.fee;\\n      emit RenewalFeeByLengthUpdated(operator, renewalFee.labelLength, renewalFee.fee);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    if (maxRenewalFeeLength != _rnfMaxLength) {\\n      _rnfMaxLength = maxRenewalFeeLength;\\n      emit MaxRenewalFeeLengthUpdated(operator, maxRenewalFeeLength);\\n    }\\n  }\\n\\n  /**\\n   * @dev Sets Pyth Oracle config.\\n   *\\n   * Emits events {PythOracleConfigUpdated}.\\n   */\\n  function _setPythOracleConfig(IPyth pyth, uint256 maxAcceptableAge, bytes32 pythIdForRONUSD) internal {\\n    _pyth = pyth;\\n    _maxAcceptableAge = maxAcceptableAge;\\n    _pythIdForRONUSD = pythIdForRONUSD;\\n    emit PythOracleConfigUpdated(_msgSender(), pyth, maxAcceptableAge, pythIdForRONUSD);\\n  }\\n\\n  /**\\n   * @dev Returns the current domain price applied the business rule: deduced x% each y seconds.\\n   */\\n  function _getDomainPrice(bytes32 lbHash) internal view returns (uint256) {\\n    TimestampWrapper storage dp = _dp[lbHash];\\n    uint256 lastSyncedAt = dp.timestamp;\\n    if (lastSyncedAt == 0) return 0;\\n\\n    uint256 passedDuration = block.timestamp - lastSyncedAt;\\n    return _dpDownScaler.scaleDown({ v: dp.value, maxR: MAX_PERCENTAGE, dur: passedDuration });\\n  }\\n}\\n\",\"keccak256\":\"0x6a4ec25833bff6a8e330f5e423af96f01f3bc32050c451ea42e75d007493cf1c\",\"license\":\"MIT\"},\"src/interfaces/INSAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { INSUnified } from \\\"./INSUnified.sol\\\";\\nimport { EventRange } from \\\"../libraries/LibEventRange.sol\\\";\\n\\ninterface INSAuction {\\n  error NotYetEnded();\\n  error NoOneBidded();\\n  error NullAssignment();\\n  error AlreadyBidding();\\n  error RatioIsTooLarge();\\n  error NameNotReserved();\\n  error InvalidEventRange();\\n  error QueryIsNotInPeriod();\\n  error InsufficientAmount();\\n  error InvalidArrayLength();\\n  error BidderCannotReceiveRON();\\n  error EventIsNotCreatedOrAlreadyStarted();\\n\\n  struct Bid {\\n    address payable bidder;\\n    uint256 price;\\n    uint256 timestamp;\\n    uint256 claimedAt;\\n  }\\n\\n  struct DomainAuction {\\n    bytes32 auctionId;\\n    uint256 startingPrice;\\n    Bid bid;\\n  }\\n\\n  /// @dev Emitted when an auction is set.\\n  event AuctionEventSet(bytes32 indexed auctionId, EventRange range);\\n  /// @dev Emitted when the labels are listed for auction.\\n  event LabelsListed(bytes32 indexed auctionId, uint256[] ids, uint256[] startingPrices);\\n  /// @dev Emitted when a bid is placed for a name.\\n  event BidPlaced(\\n    bytes32 indexed auctionId,\\n    uint256 indexed id,\\n    uint256 price,\\n    address payable bidder,\\n    uint256 previousPrice,\\n    address previousBidder\\n  );\\n  /// @dev Emitted when the treasury is updated.\\n  event TreasuryUpdated(address indexed addr);\\n  /// @dev Emitted when bid gap ratio is updated.\\n  event BidGapRatioUpdated(uint256 ratio);\\n\\n  /**\\n   * @dev The maximum expiry duration\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev The maximum expiry duration of a domain after transferring to bidder.\\n   */\\n  function MAX_AUCTION_DOMAIN_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the operator role.\\n   */\\n  function OPERATOR_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\\n   */\\n  function MAX_PERCENTAGE() external pure returns (uint256);\\n\\n  /**\\n   * @dev The expiry duration of a domain after transferring to bidder.\\n   */\\n  function DOMAIN_EXPIRY_DURATION() external pure returns (uint64);\\n\\n  /**\\n   * @dev Claims domain names for auction.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract operator.\\n   *\\n   * @param labels The domain names. Eg, ['foo'] for 'foo.ron'\\n   * @return ids The id corresponding for namehash of domain names.\\n   */\\n  function bulkRegister(string[] calldata labels) external returns (uint256[] memory ids);\\n\\n  /**\\n   * @dev Checks whether a domain name is currently reserved for auction or not.\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function reserved(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Creates a new auction to sale with a specific time period.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin.\\n   *\\n   * Emits an event {AuctionEventSet}.\\n   *\\n   * @return auctionId The auction id\\n   * @notice Please use the method `setAuctionNames` to list all the reserved names.\\n   */\\n  function createAuctionEvent(EventRange calldata range) external returns (bytes32 auctionId);\\n\\n  /**\\n   * @dev Updates the auction details.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin.\\n   *\\n   * Emits an event {AuctionEventSet}.\\n   */\\n  function setAuctionEvent(bytes32 auctionId, EventRange calldata range) external;\\n\\n  /**\\n   * @dev Returns the event range of an auction.\\n   */\\n  function getAuctionEvent(bytes32 auctionId) external view returns (EventRange memory);\\n\\n  /**\\n   * @dev Lists reserved names to sale in a specified auction.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract operator.\\n   * - Array length are matched and larger than 0.\\n   * - Only allow to set when the domain is:\\n   *   + Not in any auction.\\n   *   + Or, in the current auction.\\n   *   + Or, this name is not bided.\\n   *\\n   * Emits an event {LabelsListed}.\\n   *\\n   * Note: If the name is already listed, this method replaces with a new input value.\\n   *\\n   * @param ids The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function listNamesForAuction(bytes32 auctionId, uint256[] calldata ids, uint256[] calldata startingPrices) external;\\n\\n  /**\\n   * @dev Places a bid for a domain name.\\n   *\\n   * Requirements:\\n   * - The name is listed, or the auction is happening.\\n   * - The msg.value is larger than the current bid price or the auction starting price.\\n   *\\n   * Emits an event {BidPlaced}.\\n   *\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function placeBid(uint256 id) external payable;\\n\\n  /**\\n   * @dev Returns the highest bid and address of the bidder.\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function getAuction(uint256 id) external view returns (DomainAuction memory, uint256 beatPrice);\\n\\n  /**\\n   * @dev Bulk claims the bid name.\\n   *\\n   * Requirements:\\n   * - Must be called after ended time.\\n   * - The method caller can be anyone.\\n   *\\n   * @param ids The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function bulkClaimBidNames(uint256[] calldata ids) external returns (uint256[] memory claimedAts);\\n\\n  /**\\n   * @dev Returns the treasury.\\n   */\\n  function getTreasury() external view returns (address);\\n\\n  /**\\n   * @dev Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%.\\n   */\\n  function getBidGapRatio() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the treasury.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin\\n   *\\n   * Emits an event {TreasuryUpdated}.\\n   */\\n  function setTreasury(address payable) external;\\n\\n  /**\\n   * @dev Sets commission ratio. Value in range [0;100_00] is 0%-100%.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin\\n   *\\n   * Emits an event {BidGapRatioUpdated}.\\n   */\\n  function setBidGapRatio(uint256) external;\\n\\n  /**\\n   * @dev Returns RNSUnified contract.\\n   */\\n  function getRNSUnified() external view returns (INSUnified);\\n}\\n\",\"keccak256\":\"0x135ec8837e89471cc437e90897896264b2bb4ba36ff332f7d30485c397888e03\",\"license\":\"MIT\"},\"src/interfaces/INSDomainPrice.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { PeriodScaler } from \\\"../libraries/math/PeriodScalingUtils.sol\\\";\\nimport { IPyth } from \\\"@pythnetwork/IPyth.sol\\\";\\n\\ninterface INSDomainPrice {\\n  error InvalidArrayLength();\\n  error RenewalFeeIsNotOverriden();\\n  error ExceedAuctionDomainExpiry();\\n\\n  struct RenewalFee {\\n    uint256 labelLength;\\n    uint256 fee;\\n  }\\n\\n  struct UnitPrice {\\n    uint256 usd;\\n    uint256 ron;\\n  }\\n\\n  /// @dev Emitted when the renewal reservation ratio is updated.\\n  event TaxRatioUpdated(address indexed operator, uint256 indexed ratio);\\n  /// @dev Emitted when the maximum length of renewal fee is updated.\\n  event MaxRenewalFeeLengthUpdated(address indexed operator, uint256 indexed maxLength);\\n  /// @dev Emitted when the renew fee is updated.\\n  event RenewalFeeByLengthUpdated(address indexed operator, uint256 indexed labelLength, uint256 renewalFee);\\n  /// @dev Emitted when the renew fee of a domain is overridden. Value of `inverseRenewalFee` is 0 when not overridden.\\n  event RenewalFeeOverridingUpdated(address indexed operator, bytes32 indexed labelHash, uint256 inverseRenewalFee);\\n\\n  /// @dev Emitted when the domain price is updated.\\n  event DomainPriceUpdated(\\n    address indexed operator, bytes32 indexed labelHash, uint256 price, bytes32 indexed proofHash, uint256 setType\\n  );\\n  /// @dev Emitted when the rule to rescale domain price is updated.\\n  event DomainPriceScaleRuleUpdated(address indexed operator, uint192 ratio, uint64 period);\\n\\n  /// @dev Emitted when the Pyth Oracle config is updated.\\n  event PythOracleConfigUpdated(\\n    address indexed operator, IPyth indexed pyth, uint256 maxAcceptableAge, bytes32 indexed pythIdForRONUSD\\n  );\\n\\n  /**\\n   * @dev Returns the Pyth oracle config.\\n   */\\n  function getPythOracleConfig() external view returns (IPyth pyth, uint256 maxAcceptableAge, bytes32 pythIdForRONUSD);\\n\\n  /**\\n   * @dev Sets the Pyth oracle config.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits events {PythOracleConfigUpdated}.\\n   */\\n  function setPythOracleConfig(IPyth pyth, uint256 maxAcceptableAge, bytes32 pythIdForRONUSD) external;\\n\\n  /**\\n   * @dev Returns the percentage to scale from domain price each period.\\n   */\\n  function getScaleDownRuleForDomainPrice() external view returns (PeriodScaler memory dpScaleRule);\\n\\n  /**\\n   * @dev Sets the percentage to scale from domain price each period.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits events {DomainPriceScaleRuleUpdated}.\\n   *\\n   * @notice Applies for the business rule: -x% each y seconds.\\n   */\\n  function setScaleDownRuleForDomainPrice(PeriodScaler calldata scaleRule) external;\\n\\n  /**\\n   * @dev Returns the renewal fee by lengths.\\n   */\\n  function getRenewalFeeByLengths() external view returns (RenewalFee[] memory renewalFees);\\n\\n  /**\\n   * @dev Sets the renewal fee by lengths\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits events {RenewalFeeByLengthUpdated}.\\n   * Emits an event {MaxRenewalFeeLengthUpdated} optionally.\\n   */\\n  function setRenewalFeeByLengths(RenewalFee[] calldata renewalFees) external;\\n\\n  /**\\n   * @dev Returns tax ratio.\\n   */\\n  function getTaxRatio() external view returns (uint256 taxRatio);\\n\\n  /**\\n   * @dev Sets renewal reservation ratio.\\n   *\\n   * Requirements:\\n   * - The method caller is admin.\\n   *\\n   * Emits an event {TaxRatioUpdated}.\\n   */\\n  function setTaxRatio(uint256 ratio) external;\\n\\n  /**\\n   * @dev Return the domain price.\\n   * @param label The domain label to register (Eg, 'foo' for 'foo.ron').\\n   */\\n  function getDomainPrice(string memory label) external view returns (uint256 usdPrice, uint256 ronPrice);\\n\\n  /**\\n   * @dev Returns the renewal fee in USD and RON.\\n   * @param label The domain label to register (Eg, 'foo' for 'foo.ron').\\n   * @param duration Amount of second(s).\\n   */\\n  function getRenewalFee(string calldata label, uint256 duration)\\n    external\\n    view\\n    returns (UnitPrice memory basePrice, UnitPrice memory tax);\\n\\n  /**\\n   * @dev Returns the renewal fee of a label. Reverts if not overridden.\\n   * @notice This method is to help developers check the domain renewal fee overriding. Consider using method\\n   * {getRenewalFee} instead for full handling of renewal fees.\\n   */\\n  function getOverriddenRenewalFee(string memory label) external view returns (uint256 usdFee);\\n\\n  /**\\n   * @dev Bulk override renewal fees.\\n   *\\n   * Requirements:\\n   * - The method caller is operator.\\n   * - The input array lengths must be larger than 0 and the same.\\n   *\\n   * Emits events {RenewalFeeOverridingUpdated}.\\n   *\\n   * @param lbHashes Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')\\n   * @param usdPrices Array of prices in USD. Leave 2^256 - 1 to remove overriding.\\n   */\\n  function bulkOverrideRenewalFees(bytes32[] calldata lbHashes, uint256[] calldata usdPrices) external;\\n\\n  /**\\n   * @dev Bulk try to set domain prices. Returns a boolean array indicating whether domain prices at the corresponding\\n   * indexes if set or not.\\n   *\\n   * Requirements:\\n   * - The method caller is operator.\\n   * - The input array lengths must be larger than 0 and the same.\\n   * - The price should be larger than current domain price or it will not be updated.\\n   *\\n   * Emits events {DomainPriceUpdated} optionally.\\n   *\\n   * @param lbHashes Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')\\n   * @param ronPrices Array of prices in (W)RON token.\\n   * @param proofHashes Array of proof hashes.\\n   * @param setTypes Array of update types from the operator service.\\n   */\\n  function bulkTrySetDomainPrice(\\n    bytes32[] calldata lbHashes,\\n    uint256[] calldata ronPrices,\\n    bytes32[] calldata proofHashes,\\n    uint256[] calldata setTypes\\n  ) external returns (bool[] memory updated);\\n\\n  /**\\n   * @dev Bulk override domain prices.\\n   *\\n   * Requirements:\\n   * - The method caller is operator.\\n   * - The input array lengths must be larger than 0 and the same.\\n   *\\n   * Emits events {DomainPriceUpdated}.\\n   *\\n   * @param lbHashes Array of label hashes. (Eg, ['foo'].map(keccak256) for 'foo.ron')\\n   * @param ronPrices Array of prices in (W)RON token.\\n   * @param proofHashes Array of proof hashes.\\n   * @param setTypes Array of update types from the operator service.\\n   */\\n  function bulkSetDomainPrice(\\n    bytes32[] calldata lbHashes,\\n    uint256[] calldata ronPrices,\\n    bytes32[] calldata proofHashes,\\n    uint256[] calldata setTypes\\n  ) external;\\n\\n  /**\\n   * @dev Returns the converted amount from USD to RON.\\n   */\\n  function convertUSDToRON(uint256 usdAmount) external view returns (uint256 ronAmount);\\n\\n  /**\\n   * @dev Returns the converted amount from RON to USD.\\n   */\\n  function convertRONToUSD(uint256 ronAmount) external view returns (uint256 usdAmount);\\n\\n  /**\\n   * @dev Value equals to keccak256(\\\"OPERATOR_ROLE\\\").\\n   */\\n  function OPERATOR_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\\n   */\\n  function MAX_PERCENTAGE() external pure returns (uint64);\\n\\n  /**\\n   * @dev Decimal for USD.\\n   */\\n  function USD_DECIMALS() external pure returns (uint8);\\n}\\n\",\"keccak256\":\"0x90ce5213ccec7b4226e31f7f5093e09c7cbc8a4d2cd389928d5822e8796de6a7\",\"license\":\"MIT\"},\"src/interfaces/INSUnified.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC721Metadata } from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport { IAccessControlEnumerable } from \\\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\\\";\\nimport { ModifyingIndicator } from \\\"../types/ModifyingIndicator.sol\\\";\\n\\ninterface INSUnified is IAccessControlEnumerable, IERC721Metadata {\\n  /// @dev Error: The provided token id is expired.\\n  error Expired();\\n  /// @dev Error: The provided token id is unexists.\\n  error Unexists();\\n  /// @dev Error: The provided id expiry is greater than parent id expiry.\\n  error ExceedParentExpiry();\\n  /// @dev Error: The provided name is unavailable for registration.\\n  error Unavailable();\\n  /// @dev Error: The sender lacks the necessary permissions.\\n  error Unauthorized();\\n  /// @dev Error: Missing controller role required for modification.\\n  error MissingControllerRole();\\n  /// @dev Error: Attempting to set an immutable field, which cannot be modified.\\n  error CannotSetImmutableField();\\n  /// @dev Error: Missing protected settler role required for modification.\\n  error MissingProtectedSettlerRole();\\n  /// @dev Error: Attempting to set an expiry time that is not larger than the previous one.\\n  error ExpiryTimeMustBeLargerThanTheOldOne();\\n  /// @dev Error: The provided name must be registered or is in a grace period.\\n  error NameMustBeRegisteredOrInGracePeriod();\\n\\n  /**\\n   * | Fields\\\\Idc | Modifying Indicator |\\n   * | ---------- | ------------------- |\\n   * | depth      | 0b00000001          |\\n   * | parentId   | 0b00000010          |\\n   * | label      | 0b00000100          |\\n   */\\n  struct ImmutableRecord {\\n    // The level-th of a domain.\\n    uint8 depth;\\n    // The node of parent token. Eg, parent node of vip.duke.ron equals to namehash('duke.ron')\\n    uint256 parentId;\\n    // The label of a domain. Eg, label is vip for domain vip.duke.ron\\n    string label;\\n  }\\n\\n  /**\\n   * | Fields\\\\Idc,Roles | Modifying Indicator | Controller | Protected setter | (Parent) Owner/Spender |\\n   * | ---------------- | ------------------- | ---------- | ---------------- | ---------------------- |\\n   * | resolver         | 0b00001000          | x          |                  | x                      |\\n   * | owner            | 0b00010000          | x          |                  | x                      |\\n   * | expiry           | 0b00100000          | x          |                  |                        |\\n   * | protected        | 0b01000000          |            | x                |                        |\\n   * Note: (Parent) Owner/Spender means parent owner or current owner or current token spender.\\n   */\\n  struct MutableRecord {\\n    // The resolver address.\\n    address resolver;\\n    // The record owner. This field must equal to the owner of token.\\n    address owner;\\n    // Expiry timestamp.\\n    uint64 expiry;\\n    // Flag indicating whether the token is protected or not.\\n    bool protected;\\n  }\\n\\n  struct Record {\\n    ImmutableRecord immut;\\n    MutableRecord mut;\\n  }\\n\\n  /// @dev Emitted when a base URI is updated.\\n  event BaseURIUpdated(address indexed operator, string newURI);\\n  /// @dev Emitted when the grace period for all domain is updated.\\n  event GracePeriodUpdated(address indexed operator, uint64 newGracePeriod);\\n\\n  /**\\n   * @dev Emitted when the record of node is updated.\\n   * @param indicator The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right\\n   * to left) needs to be updated.\\n   * @param record The updated fields.\\n   */\\n  event RecordUpdated(uint256 indexed node, ModifyingIndicator indicator, Record record);\\n\\n  /**\\n   * @dev Returns the controller role.\\n   * @notice Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}.\\n   */\\n  function CONTROLLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the protected setter role.\\n   * @notice Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`.\\n   */\\n  function PROTECTED_SETTLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the reservation role.\\n   * @notice Never expire for token owner has this role.\\n   */\\n  function RESERVATION_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the max expiry value.\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the name hash output of a domain.\\n   */\\n  function namehash(string memory domain) external pure returns (bytes32 node);\\n\\n  /**\\n   * @dev Returns true if the specified name is available for registration.\\n   * Note: Only available after passing the grace period.\\n   */\\n  function available(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the grace period in second(s).\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function getGracePeriod() external view returns (uint64);\\n\\n  /**\\n   * @dev Returns the total minted ids.\\n   * Note: Burning id will not affect `totalMinted`.\\n   */\\n  function totalMinted() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the grace period in second(s).\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function setGracePeriod(uint64) external;\\n\\n  /**\\n   * @dev Sets the base uri.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract owner.\\n   *\\n   */\\n  function setBaseURI(string calldata baseTokenURI) external;\\n\\n  /**\\n   * @dev Mints token for subnode.\\n   *\\n   * Requirements:\\n   * - The token must be available.\\n   * - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   *\\n   * @param parentId The parent node to mint or create subnode.\\n   * @param label The domain label. Eg, label is duke for domain duke.ron.\\n   * @param resolver The resolver address.\\n   * @param owner The token owner.\\n   * @param duration Duration in second(s) to expire. Leave 0 to set as parent.\\n   */\\n  function mint(uint256 parentId, string calldata label, address resolver, address owner, uint64 duration)\\n    external\\n    returns (uint64 expiryTime, uint256 id);\\n\\n  /**\\n   * @dev Returns all record of a domain.\\n   * Reverts if the token is non existent.\\n   */\\n  function getRecord(uint256 id) external view returns (Record memory record);\\n\\n  /**\\n   * @dev Returns the domain name of id.\\n   */\\n  function getDomain(uint256 id) external view returns (string memory domain);\\n\\n  /**\\n   * @dev Returns whether the requester is able to modify the record based on the updated index.\\n   * Note: This method strictly follows the permission of struct {MutableRecord}.\\n   */\\n  function canSetRecord(address requester, uint256 id, ModifyingIndicator indicator)\\n    external\\n    view\\n    returns (bool, bytes4 error);\\n\\n  /**\\n   * @dev Sets record of existing token. Update operation for {Record.mut}.\\n   *\\n   * Requirements:\\n   * - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setRecord(uint256 id, ModifyingIndicator indicator, MutableRecord calldata record) external;\\n\\n  /**\\n   * @dev Reclaims ownership. Update operation for {Record.mut.owner}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   * - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function reclaim(uint256 id, address owner) external;\\n\\n  /**\\n   * @dev Renews token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function renew(uint256 id, uint64 duration) external returns (uint64 expiry);\\n\\n  /**\\n   * @dev Sets expiry time for a token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setExpiry(uint256 id, uint64 expiry) external;\\n\\n  /**\\n   * @dev Sets the protected status of a list of ids. Update operation for {Record.mut.protected}.\\n   *\\n   * Requirements:\\n   * - The method caller must have protected setter role.\\n   *\\n   * Emits events {RecordUpdated}.\\n   */\\n  function bulkSetProtected(uint256[] calldata ids, bool protected) external;\\n}\\n\",\"keccak256\":\"0xaef1c58bb7c8688d6677a1c2739c0dc9e645ca5c64dd875be2f2b7a318a11406\",\"license\":\"MIT\"},\"src/libraries/LibEventRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nstruct EventRange {\\n  uint256 startedAt;\\n  uint256 endedAt;\\n}\\n\\nlibrary LibEventRange {\\n  /**\\n   * @dev Checks whether the event range is valid.\\n   */\\n  function valid(EventRange calldata range) internal pure returns (bool) {\\n    return range.startedAt <= range.endedAt;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current range is not yet started.\\n   */\\n  function isNotYetStarted(EventRange memory range) internal view returns (bool) {\\n    return block.timestamp < range.startedAt;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current range is ended or not.\\n   */\\n  function isEnded(EventRange memory range) internal view returns (bool) {\\n    return range.endedAt <= block.timestamp;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current block is in period.\\n   */\\n  function isInPeriod(EventRange memory range) internal view returns (bool) {\\n    return range.startedAt <= block.timestamp && block.timestamp < range.endedAt;\\n  }\\n}\\n\",\"keccak256\":\"0x95bf015c4245919cbcbcd810dd597fdb23eb4e58b62df8ef74b1c8c60a969bea\",\"license\":\"MIT\"},\"src/libraries/LibRNSDomain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nlibrary LibRNSDomain {\\n  /// @dev Value equals to namehash('ron')\\n  uint256 internal constant RON_ID = 0xba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d688;\\n  /// @dev Value equals to namehash('addr.reverse')\\n  uint256 internal constant ADDR_REVERSE_ID = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n  /**\\n   * @dev Calculate the corresponding id given parentId and label.\\n   */\\n  function toId(uint256 parentId, string memory label) internal pure returns (uint256 id) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(0x0, parentId)\\n      mstore(0x20, keccak256(add(label, 32), mload(label)))\\n      id := keccak256(0x0, 64)\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates the hash of the label.\\n   */\\n  function hashLabel(string memory label) internal pure returns (bytes32 hashed) {\\n    assembly (\\\"memory-safe\\\") {\\n      hashed := keccak256(add(label, 32), mload(label))\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculate the RNS namehash of a str.\\n   */\\n  function namehash(string memory str) internal pure returns (bytes32 hashed) {\\n    // notice: this method is case-sensitive, ensure the string is lowercased before calling this method\\n    assembly (\\\"memory-safe\\\") {\\n      // load str length\\n      let len := mload(str)\\n      // returns bytes32(0x0) if length is zero\\n      if iszero(iszero(len)) {\\n        let hashedLen\\n        // compute pointer to str[0]\\n        let head := add(str, 32)\\n        // compute pointer to str[length - 1]\\n        let tail := add(head, sub(len, 1))\\n        // cleanup dirty bytes if contains any\\n        mstore(0x0, 0)\\n        // loop backwards from `tail` to `head`\\n        for { let i := tail } iszero(lt(i, head)) { i := sub(i, 1) } {\\n          // check if `i` is `head`\\n          let isHead := eq(i, head)\\n          // check if `str[i-1]` is \\\".\\\"\\n          // `0x2e` == bytes1(\\\".\\\")\\n          let isDotNext := eq(shr(248, mload(sub(i, 1))), 0x2e)\\n          if or(isHead, isDotNext) {\\n            // size = distance(length, i) - hashedLength + 1\\n            let size := add(sub(sub(tail, i), hashedLen), 1)\\n            mstore(0x20, keccak256(i, size))\\n            mstore(0x0, keccak256(0x0, 64))\\n            // skip \\\".\\\" thereby + 1\\n            hashedLen := add(hashedLen, add(size, 1))\\n          }\\n        }\\n      }\\n      hashed := mload(0x0)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x715029b2b420c6ec00bc1f939b837acf45d247fde8426089575b0e7b5e84518b\",\"license\":\"MIT\"},\"src/libraries/LibString.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary LibString {\\n  error InvalidStringLength();\\n  error InvalidCharacter(bytes1 char);\\n\\n  /// @dev Lookup constant for method. See more detail at https://eips.ethereum.org/EIPS/eip-181\\n  bytes32 private constant LOOKUP = 0x3031323334353637383961626364656600000000000000000000000000000000;\\n\\n  /**\\n   * @dev Returns the length of a given string\\n   *\\n   * @param s The string to measure the length of\\n   * @return The length of the input string\\n   */\\n  function strlen(string memory s) internal pure returns (uint256) {\\n    unchecked {\\n      uint256 i;\\n      uint256 len;\\n      uint256 bytelength = bytes(s).length;\\n      for (len; i < bytelength; len++) {\\n        bytes1 b = bytes(s)[i];\\n        if (b < 0x80) {\\n          i += 1;\\n        } else if (b < 0xE0) {\\n          i += 2;\\n        } else if (b < 0xF0) {\\n          i += 3;\\n        } else if (b < 0xF8) {\\n          i += 4;\\n        } else if (b < 0xFC) {\\n          i += 5;\\n        } else {\\n          i += 6;\\n        }\\n      }\\n      return len;\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts an address to string.\\n   */\\n  function toString(address addr) internal pure returns (string memory stringifiedAddr) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(stringifiedAddr, 40)\\n      let ptr := add(stringifiedAddr, 0x20)\\n      for { let i := 40 } gt(i, 0) { } {\\n        i := sub(i, 1)\\n        mstore8(add(i, ptr), byte(and(addr, 0xf), LOOKUP))\\n        addr := div(addr, 0x10)\\n\\n        i := sub(i, 1)\\n        mstore8(add(i, ptr), byte(and(addr, 0xf), LOOKUP))\\n        addr := div(addr, 0x10)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts string to address.\\n   * Reverts if the string length is not equal to 40.\\n   */\\n  function parseAddr(string memory stringifiedAddr) internal pure returns (address) {\\n    unchecked {\\n      if (bytes(stringifiedAddr).length != 40) revert InvalidStringLength();\\n      uint160 addr;\\n      for (uint256 i = 0; i < 40; i += 2) {\\n        addr *= 0x100;\\n        addr += uint160(hexCharToDec(bytes(stringifiedAddr)[i])) * 0x10;\\n        addr += hexCharToDec(bytes(stringifiedAddr)[i + 1]);\\n      }\\n      return address(addr);\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts a hex char (0-9, a-f, A-F) to decimal number.\\n   * Reverts if the char is invalid.\\n   */\\n  function hexCharToDec(bytes1 c) private pure returns (uint8 r) {\\n    unchecked {\\n      if ((bytes1(\\\"a\\\") <= c) && (c <= bytes1(\\\"f\\\"))) r = uint8(c) - 87;\\n      else if ((bytes1(\\\"A\\\") <= c) && (c <= bytes1(\\\"F\\\"))) r = uint8(c) - 55;\\n      else if ((bytes1(\\\"0\\\") <= c) && (c <= bytes1(\\\"9\\\"))) r = uint8(c) - 48;\\n      else revert InvalidCharacter(c);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x9d456b294f0e44ccaabded43a3d96db6270761a167535155a762fe41e968b905\",\"license\":\"MIT\"},\"src/libraries/TimestampWrapperUtils.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nstruct TimestampWrapper {\\n  uint256 value;\\n  uint256 timestamp;\\n}\\n\",\"keccak256\":\"0x18488d153ebc8579907a85cb7e0be828d0de7c571c9f3368a6d200574b012018\",\"license\":\"MIT\"},\"src/libraries/math/LibSafeRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary LibSafeRange {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    unchecked {\\n      c = a + b;\\n      if (c < a) return type(uint256).max;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns value of a + b; in case result is larger than upperbound, upperbound is returned.\\n   */\\n  function addWithUpperbound(uint256 a, uint256 b, uint256 ceil) internal pure returns (uint256 c) {\\n    if (a > ceil || b > ceil) return ceil;\\n    c = add(a, b);\\n    if (c > ceil) return ceil;\\n  }\\n}\\n\",\"keccak256\":\"0x12cf5f592a2d80b9c1b0ea11b8fe2b3ed42fc6d62303ba667edc56464baa8810\",\"license\":\"MIT\"},\"src/libraries/math/PeriodScalingUtils.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport { PowMath } from \\\"./PowMath.sol\\\";\\n\\nstruct PeriodScaler {\\n  uint192 ratio;\\n  uint64 period;\\n}\\n\\nlibrary LibPeriodScaler {\\n  using PowMath for uint256;\\n\\n  error PeriodNumOverflowedUint16(uint256 n);\\n\\n  /// @dev The precision number of calculation is 2\\n  uint256 public constant MAX_PERCENTAGE = 100_00;\\n\\n  /**\\n   * @dev Scales down the input value `v` for a percentage of `self.ratio` each period `self.period`.\\n   * Reverts if the passed period is larger than 2^16 - 1.\\n   *\\n   * @param self The period scaler with specific period and ratio\\n   * @param v The original value to scale based on the rule `self`\\n   * @param maxR The maximum value of 100%. Eg, if the `self.ratio` in range of [0;100_00] reflexes 0-100%, this param\\n   * must be 100_00\\n   * @param dur The passed duration in the same uint with `self.period`\\n   */\\n  function scaleDown(PeriodScaler memory self, uint256 v, uint64 maxR, uint256 dur) internal pure returns (uint256 rs) {\\n    uint256 n = dur / uint256(self.period);\\n    if (n == 0 || self.ratio == 0) return v;\\n    if (maxR == self.ratio) return 0;\\n    if (n > type(uint16).max) revert PeriodNumOverflowedUint16(n);\\n\\n    unchecked {\\n      // Normalizes the input ratios to be in range of [0;MAX_PERCENTAGE]\\n      uint256 p = Math.mulDiv(maxR - self.ratio, MAX_PERCENTAGE, maxR);\\n      return v.mulDiv({ y: p, d: MAX_PERCENTAGE, n: uint16(n) });\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x502d004fbd130a99f3f1e6685aebff9f47300565fbc5a65b4912824ea5eb5b78\",\"license\":\"MIT\"},\"src/libraries/math/PowMath.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { SafeMath } from \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\n\\nlibrary PowMath {\\n  using Math for uint256;\\n  using SafeMath for uint256;\\n\\n  /**\\n   * @dev Negative exponent n for x*10^n.\\n   */\\n  function exp10(uint256 x, int32 n) internal pure returns (uint256) {\\n    if (n < 0) {\\n      return x / 10 ** uint32(-n);\\n    } else if (n > 0) {\\n      return x * 10 ** uint32(n);\\n    } else {\\n      return x;\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates floor(x * (y / d)**n) with full precision.\\n   */\\n  function mulDiv(uint256 x, uint256 y, uint256 d, uint16 n) internal pure returns (uint256 r) {\\n    unchecked {\\n      if (y == d || n == 0) return x;\\n      r = x;\\n\\n      bool ok;\\n      uint256 r_;\\n      uint16 nd_;\\n\\n      {\\n        uint16 ye = uint16(Math.min(n, findMaxExponent(y)));\\n        while (ye > 0) {\\n          (ok, r_) = r.tryMul(y ** ye);\\n          if (ok) {\\n            r = r_;\\n            n -= ye;\\n            nd_ += ye;\\n          }\\n          ye = uint16(Math.min(ye / 2, n));\\n        }\\n      }\\n\\n      while (n > 0) {\\n        (ok, r_) = r.tryMul(y);\\n        if (ok) {\\n          r = r_;\\n          n--;\\n          nd_++;\\n        } else if (nd_ > 0) {\\n          r /= d;\\n          nd_--;\\n        } else {\\n          r = r.mulDiv(y, d);\\n          n--;\\n        }\\n      }\\n\\n      uint16 de = findMaxExponent(d);\\n      while (nd_ > 0) {\\n        uint16 e = uint16(Math.min(de, nd_));\\n        r /= d ** e;\\n        nd_ -= e;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates floor(x * (y / d)**n) with low precision.\\n   */\\n  function mulDivLowPrecision(uint256 x, uint256 y, uint256 d, uint16 n) internal pure returns (uint256) {\\n    return uncheckedMulDiv(x, y, d, n, findMaxExponent(Math.max(y, d)));\\n  }\\n\\n  /**\\n   * @dev Aggregated calculate multiplications.\\n   * ```\\n   * r = x*(y/d)^k\\n   *   = \\\\prod(x*(y/d)^{k_i}) \\\\ where \\\\ sum(k_i) = k\\n   * ```\\n   */\\n  function uncheckedMulDiv(uint256 x, uint256 y, uint256 d, uint16 n, uint16 maxE) internal pure returns (uint256 r) {\\n    unchecked {\\n      r = x;\\n      uint16 e;\\n      while (n > 0) {\\n        e = uint16(Math.min(n, maxE));\\n        r = r.mulDiv(y ** e, d ** e);\\n        n -= e;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns the largest exponent `k` where, x^k <= 2^256-1\\n   * Note: n = Surd[2^256-1,k]\\n   *         = 10^( log2(2^256-1) / k * log10(2) )\\n   */\\n  function findMaxExponent(uint256 x) internal pure returns (uint16 k) {\\n    if (x < 3) k = 255;\\n    else if (x < 4) k = 128;\\n    else if (x < 16) k = 64;\\n    else if (x < 256) k = 32;\\n    else if (x < 7132) k = 20;\\n    else if (x < 11376) k = 19;\\n    else if (x < 19113) k = 18;\\n    else if (x < 34132) k = 17;\\n    else if (x < 65536) k = 16;\\n    else if (x < 137271) k = 15;\\n    else if (x < 319558) k = 14;\\n    else if (x < 847180) k = 13;\\n    else if (x < 2642246) k = 12;\\n    else if (x < 10134189) k = 11;\\n    else if (x < 50859009) k = 10;\\n    else if (x < 365284285) k = 9;\\n    else if (x < 4294967296) k = 8;\\n    else if (x < 102116749983) k = 7;\\n    else if (x < 6981463658332) k = 6;\\n    else if (x < 2586638741762875) k = 5;\\n    else if (x < 18446744073709551616) k = 4;\\n    else if (x < 48740834812604276470692695) k = 3;\\n    else if (x < 340282366920938463463374607431768211456) k = 2;\\n    else k = 1;\\n  }\\n}\\n\",\"keccak256\":\"0x29f943cf7c61149bc9a624244901720fc3a349adb418555db1db2a045fcdfb70\",\"license\":\"MIT\"},\"src/libraries/pyth/PythConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport { PythStructs } from \\\"@pythnetwork/PythStructs.sol\\\";\\nimport { PowMath } from \\\"../math/PowMath.sol\\\";\\n\\nlibrary PythConverter {\\n  error ErrExponentTooLarge(int32 expo);\\n  error ErrComputedPriceTooLarge(int32 expo1, int32 expo2, int64 price1);\\n\\n  /**\\n   * @dev Multiples and converts the price into token wei with decimals `outDecimals`.\\n   */\\n  function mul(PythStructs.Price memory self, uint256 inpWei, int32 inpDecimals, int32 outDecimals)\\n    internal\\n    pure\\n    returns (uint256 outWei)\\n  {\\n    return Math.mulDiv(\\n      inpWei, PowMath.exp10(uint256(int256(self.price)), outDecimals + self.expo), PowMath.exp10(1, inpDecimals)\\n    );\\n  }\\n\\n  /**\\n   * @dev Inverses token price of tokenA/tokenB to tokenB/tokenA.\\n   */\\n  function inverse(PythStructs.Price memory self, int32 expo) internal pure returns (PythStructs.Price memory outPrice) {\\n    uint256 exp10p1 = PowMath.exp10(1, -self.expo);\\n    if (exp10p1 > uint256(type(int256).max)) revert ErrExponentTooLarge(self.expo);\\n    uint256 exp10p2 = PowMath.exp10(1, -expo);\\n    if (exp10p2 > uint256(type(int256).max)) revert ErrExponentTooLarge(expo);\\n    int256 price = (int256(exp10p1) * int256(exp10p2)) / self.price;\\n    if (price > type(int64).max) revert ErrComputedPriceTooLarge(self.expo, expo, self.price);\\n\\n    return PythStructs.Price({ price: int64(price), conf: self.conf, expo: expo, publishTime: self.publishTime });\\n  }\\n}\\n\",\"keccak256\":\"0x87ade16f6e931f6a3ead7706b0e550ee2c2cdee0be2f218488df93588e787f06\",\"license\":\"MIT\"},\"src/types/ModifyingIndicator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ntype ModifyingIndicator is uint256;\\n\\nusing { hasAny } for ModifyingIndicator global;\\nusing { or as | } for ModifyingIndicator global;\\nusing { and as & } for ModifyingIndicator global;\\nusing { eq as == } for ModifyingIndicator global;\\nusing { not as ~ } for ModifyingIndicator global;\\nusing { neq as != } for ModifyingIndicator global;\\n\\n/// @dev Indicator for modifying immutable fields: Depth, ParentId, Label. See struct {INSUnified.ImmutableRecord}.\\nModifyingIndicator constant IMMUTABLE_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x7);\\n\\n/// @dev Indicator for modifying user fields: Resolver, Owner. See struct {INSUnified.MutableRecord}.\\nModifyingIndicator constant USER_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x18);\\n\\n/// @dev Indicator when modifying all of the fields in {ModifyingField}.\\nModifyingIndicator constant ALL_FIELDS_INDICATOR = ModifyingIndicator.wrap(type(uint256).max);\\n\\nfunction eq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return ModifyingIndicator.unwrap(self) == ModifyingIndicator.unwrap(other);\\n}\\n\\nfunction neq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return !eq(self, other);\\n}\\n\\nfunction not(ModifyingIndicator self) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(~ModifyingIndicator.unwrap(self));\\n}\\n\\nfunction or(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) | ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction and(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) & ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction hasAny(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return self & other != ModifyingIndicator.wrap(0);\\n}\\n\",\"keccak256\":\"0xe364b4d2e480a7f3e392a40f792303c0febf79c1a623eb4c2278f652210e2e6c\",\"license\":\"MIT\"}},\"version\":1}",
  "nonce": 182568,
  "numDeployments": 2,
  "storageLayout": {
    "storage": [
      {
        "astId": 49702,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 49705,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 48175,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)48170_storage)"
      },
      {
        "astId": 48485,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_roleMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(AddressSet)54054_storage)"
      },
      {
        "astId": 59676,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "____gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 59680,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_pyth",
        "offset": 0,
        "slot": "53",
        "type": "t_contract(IPyth)54460"
      },
      {
        "astId": 59684,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_auction",
        "offset": 0,
        "slot": "54",
        "type": "t_contract(INSAuction)64365"
      },
      {
        "astId": 59687,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_taxRatio",
        "offset": 0,
        "slot": "55",
        "type": "t_uint256"
      },
      {
        "astId": 59690,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_rnfMaxLength",
        "offset": 0,
        "slot": "56",
        "type": "t_uint256"
      },
      {
        "astId": 59693,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_maxAcceptableAge",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 59696,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_pythIdForRONUSD",
        "offset": 0,
        "slot": "58",
        "type": "t_bytes32"
      },
      {
        "astId": 59700,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_dpDownScaler",
        "offset": 0,
        "slot": "59",
        "type": "t_struct(PeriodScaler)66624_storage"
      },
      {
        "astId": 59705,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_rnFee",
        "offset": 0,
        "slot": "60",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 59711,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_dp",
        "offset": 0,
        "slot": "61",
        "type": "t_mapping(t_bytes32,t_struct(TimestampWrapper)66547_storage)"
      },
      {
        "astId": 59716,
        "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
        "label": "_rnFeeOverriding",
        "offset": 0,
        "slot": "62",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(INSAuction)64365": {
        "encoding": "inplace",
        "label": "contract INSAuction",
        "numberOfBytes": "20"
      },
      "t_contract(IPyth)54460": {
        "encoding": "inplace",
        "label": "contract IPyth",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(AddressSet)54054_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)54054_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)48170_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)48170_storage"
      },
      "t_mapping(t_bytes32,t_struct(TimestampWrapper)66547_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct TimestampWrapper)",
        "numberOfBytes": "32",
        "value": "t_struct(TimestampWrapper)66547_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)54054_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 54053,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)53739_storage"
          }
        ]
      },
      "t_struct(PeriodScaler)66624_storage": {
        "encoding": "inplace",
        "label": "struct PeriodScaler",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 66621,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "ratio",
            "offset": 0,
            "slot": "0",
            "type": "t_uint192"
          },
          {
            "astId": 66623,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "period",
            "offset": 24,
            "slot": "0",
            "type": "t_uint64"
          }
        ]
      },
      "t_struct(RoleData)48170_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 48167,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 48169,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_struct(Set)53739_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 53734,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 53738,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ]
      },
      "t_struct(TimestampWrapper)66547_storage": {
        "encoding": "inplace",
        "label": "struct TimestampWrapper",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 66544,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 66546,
            "contract": "src/RNSDomainPrice.sol:RNSDomainPrice",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint192": {
        "encoding": "inplace",
        "label": "uint192",
        "numberOfBytes": "24"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1698032742,
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "getOverriddenRenewalFee(string)": {
        "notice": "This method is to help developers check the domain renewal fee overriding. Consider using method {getRenewalFee} instead for full handling of renewal fees."
      },
      "setScaleDownRuleForDomainPrice((uint192,uint64))": {
        "notice": "Applies for the business rule: -x% each y seconds."
      }
    }
  }
}