{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes1",
          "name": "char",
          "type": "bytes1"
        }
      ],
      "name": "InvalidCharacter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidConfig",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidStringLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAssignment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract INameResolver",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "DefaultResolverChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ReverseClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONTROLLER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "claimWithResolver",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "computeId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultResolver",
      "outputs": [
        {
          "internalType": "contract INameResolver",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRNSUnified",
      "outputs": [
        {
          "internalType": "contract INSUnified",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "contract INSUnified",
          "name": "rnsUnified",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INameResolver",
          "name": "resolver",
          "type": "address"
        }
      ],
      "name": "setDefaultResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setNameForAddr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "address": "0x2DcFb418410Bc9c58Ee58029fA3C69833A8F3231",
  "args": "0x",
  "ast": {
    "absolutePath": "src/RNSReverseRegistrar.sol",
    "id": 63250,
    "exportedSymbols": {
      "IERC165": [
        52691
      ],
      "IERC181": [
        66706
      ],
      "INSReverseRegistrar": [
        66789
      ],
      "INSUnified": [
        67046
      ],
      "INameResolver": [
        67747
      ],
      "Initializable": [
        50248
      ],
      "LibRNSDomain": [
        68113
      ],
      "LibString": [
        68395
      ],
      "Ownable": [
        49186
      ],
      "RNSReverseRegistrar": [
        63249
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5698:96",
    "nodes": [
      {
        "id": 62753,
        "nodeType": "PragmaDirective",
        "src": "32:24:96",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 62755,
        "nodeType": "ImportDirective",
        "src": "58:86:96",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 50249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62754,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50248,
              "src": "67:13:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62757,
        "nodeType": "ImportDirective",
        "src": "145:69:96",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 49187,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62756,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49186,
              "src": "154:7:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62759,
        "nodeType": "ImportDirective",
        "src": "215:73:96",
        "nodes": [],
        "absolutePath": "src/interfaces/resolvers/INameResolver.sol",
        "file": "./interfaces/resolvers/INameResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 67748,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62758,
              "name": "INameResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67747,
              "src": "224:13:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62763,
        "nodeType": "ImportDirective",
        "src": "289:93:96",
        "nodes": [],
        "absolutePath": "src/interfaces/INSReverseRegistrar.sol",
        "file": "./interfaces/INSReverseRegistrar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 66790,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62760,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52691,
              "src": "298:7:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62761,
              "name": "IERC181",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66706,
              "src": "307:7:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 62762,
              "name": "INSReverseRegistrar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66789,
              "src": "316:19:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62765,
        "nodeType": "ImportDirective",
        "src": "383:57:96",
        "nodes": [],
        "absolutePath": "src/interfaces/INSUnified.sol",
        "file": "./interfaces/INSUnified.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 67047,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62764,
              "name": "INSUnified",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67046,
              "src": "392:10:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62767,
        "nodeType": "ImportDirective",
        "src": "441:54:96",
        "nodes": [],
        "absolutePath": "src/libraries/LibString.sol",
        "file": "./libraries/LibString.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 68396,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62766,
              "name": "LibString",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68395,
              "src": "450:9:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 62769,
        "nodeType": "ImportDirective",
        "src": "496:60:96",
        "nodes": [],
        "absolutePath": "src/libraries/LibRNSDomain.sol",
        "file": "./libraries/LibRNSDomain.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63250,
        "sourceUnit": 68114,
        "symbolAliases": [
          {
            "foreign": {
              "id": 62768,
              "name": "LibRNSDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68113,
              "src": "505:12:96",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63249,
        "nodeType": "ContractDefinition",
        "src": "1065:4664:96",
        "nodes": [
          {
            "id": 62778,
            "nodeType": "UsingForDirective",
            "src": "1145:22:96",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 62777,
              "name": "LibString",
              "nameLocations": [
                "1151:9:96"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68395,
              "src": "1151:9:96"
            }
          },
          {
            "id": 62784,
            "nodeType": "VariableDeclaration",
            "src": "1250:70:96",
            "nodes": [],
            "baseFunctions": [
              66741
            ],
            "constant": true,
            "documentation": {
              "id": 62779,
              "nodeType": "StructuredDocumentation",
              "src": "1171:76:96",
              "text": "@dev This controller must equal to INSReverseRegistrar.CONTROLLER_ROLE()"
            },
            "functionSelector": "092c5b3b",
            "mutability": "constant",
            "name": "CONTROLLER_ROLE",
            "nameLocation": "1274:15:96",
            "scope": 63249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 62780,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1250:7:96",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4e54524f4c4c45525f524f4c45",
                  "id": 62782,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1302:17:96",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
                    "typeString": "literal_string \"CONTROLLER_ROLE\""
                  },
                  "value": "CONTROLLER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
                    "typeString": "literal_string \"CONTROLLER_ROLE\""
                  }
                ],
                "id": 62781,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1292:9:96",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 62783,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1292:28:96",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62789,
            "nodeType": "VariableDeclaration",
            "src": "1360:27:96",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62785,
              "nodeType": "StructuredDocumentation",
              "src": "1325:32:96",
              "text": "@dev Gap for upgradeability."
            },
            "mutability": "mutable",
            "name": "____gap",
            "nameLocation": "1380:7:96",
            "scope": 63249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 62786,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1360:7:96",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 62788,
              "length": {
                "hexValue": "3530",
                "id": 62787,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1368:2:96",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1360:11:96",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 62793,
            "nodeType": "VariableDeclaration",
            "src": "1428:31:96",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62790,
              "nodeType": "StructuredDocumentation",
              "src": "1391:34:96",
              "text": "@dev The rns unified contract."
            },
            "mutability": "mutable",
            "name": "_rnsUnified",
            "nameLocation": "1448:11:96",
            "scope": 63249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INSUnified_$67046",
              "typeString": "contract INSUnified"
            },
            "typeName": {
              "id": 62792,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62791,
                "name": "INSUnified",
                "nameLocations": [
                  "1428:10:96"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67046,
                "src": "1428:10:96"
              },
              "referencedDeclaration": 67046,
              "src": "1428:10:96",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INSUnified_$67046",
                "typeString": "contract INSUnified"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62797,
            "nodeType": "VariableDeclaration",
            "src": "1496:39:96",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 62794,
              "nodeType": "StructuredDocumentation",
              "src": "1463:30:96",
              "text": "@dev The default resolver."
            },
            "mutability": "mutable",
            "name": "_defaultResolver",
            "nameLocation": "1519:16:96",
            "scope": 63249,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INameResolver_$67747",
              "typeString": "contract INameResolver"
            },
            "typeName": {
              "id": 62796,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62795,
                "name": "INameResolver",
                "nameLocations": [
                  "1496:13:96"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67747,
                "src": "1496:13:96"
              },
              "referencedDeclaration": 67747,
              "src": "1496:13:96",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INameResolver_$67747",
                "typeString": "contract INameResolver"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 62804,
            "nodeType": "ModifierDefinition",
            "src": "1540:48:96",
            "nodes": [],
            "body": {
              "id": 62803,
              "nodeType": "Block",
              "src": "1556:32:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62799,
                      "name": "_requireLive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63209,
                      "src": "1562:12:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 62800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:14:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62801,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:14:96"
                },
                {
                  "id": 62802,
                  "nodeType": "PlaceholderStatement",
                  "src": "1582:1:96"
                }
              ]
            },
            "name": "live",
            "nameLocation": "1549:4:96",
            "parameters": {
              "id": 62798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1553:2:96"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62814,
            "nodeType": "ModifierDefinition",
            "src": "1592:80:96",
            "nodes": [],
            "body": {
              "id": 62813,
              "nodeType": "Block",
              "src": "1630:42:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62809,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62806,
                        "src": "1655:4:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62808,
                      "name": "_requireAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63248,
                      "src": "1636:18:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 62810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:24:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62811,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:24:96"
                },
                {
                  "id": 62812,
                  "nodeType": "PlaceholderStatement",
                  "src": "1666:1:96"
                }
              ]
            },
            "name": "onlyAuthorized",
            "nameLocation": "1601:14:96",
            "parameters": {
              "id": 62807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62806,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1624:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62814,
                  "src": "1616:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:14:96"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 62821,
            "nodeType": "FunctionDefinition",
            "src": "1676:55:96",
            "nodes": [],
            "body": {
              "id": 62820,
              "nodeType": "Block",
              "src": "1698:33:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62817,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50229,
                      "src": "1704:20:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 62818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:22:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62819,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:22:96"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 62815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1687:2:96"
            },
            "returnParameters": {
              "id": 62816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1698:0:96"
            },
            "scope": 63249,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 62840,
            "nodeType": "FunctionDefinition",
            "src": "1735:145:96",
            "nodes": [],
            "body": {
              "id": 62839,
              "nodeType": "Block",
              "src": "1814:66:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62831,
                      "name": "_rnsUnified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62793,
                      "src": "1820:11:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62832,
                      "name": "rnsUnified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62826,
                      "src": "1834:10:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      }
                    },
                    "src": "1820:24:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "id": 62834,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:24:96"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 62836,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62823,
                        "src": "1869:5:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62835,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49185,
                      "src": "1850:18:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 62837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:25:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62838,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:25:96"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62829,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62828,
                  "name": "initializer",
                  "nameLocations": [
                    "1802:11:96"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50150,
                  "src": "1802:11:96"
                },
                "nodeType": "ModifierInvocation",
                "src": "1802:11:96"
              }
            ],
            "name": "initialize",
            "nameLocation": "1744:10:96",
            "parameters": {
              "id": 62827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62823,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1763:5:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62840,
                  "src": "1755:13:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62826,
                  "mutability": "mutable",
                  "name": "rnsUnified",
                  "nameLocation": "1781:10:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62840,
                  "src": "1770:21:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSUnified_$67046",
                    "typeString": "contract INSUnified"
                  },
                  "typeName": {
                    "id": 62825,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62824,
                      "name": "INSUnified",
                      "nameLocations": [
                        "1770:10:96"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67046,
                      "src": "1770:10:96"
                    },
                    "referencedDeclaration": 67046,
                    "src": "1770:10:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:38:96"
            },
            "returnParameters": {
              "id": 62830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62850,
            "nodeType": "FunctionDefinition",
            "src": "1933:102:96",
            "nodes": [],
            "body": {
              "id": 62849,
              "nodeType": "Block",
              "src": "2001:34:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62847,
                    "name": "_defaultResolver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62797,
                    "src": "2014:16:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INameResolver_$67747",
                      "typeString": "contract INameResolver"
                    }
                  },
                  "functionReturnParameters": 62846,
                  "id": 62848,
                  "nodeType": "Return",
                  "src": "2007:23:96"
                }
              ]
            },
            "baseFunctions": [
              66748
            ],
            "documentation": {
              "id": 62841,
              "nodeType": "StructuredDocumentation",
              "src": "1884:46:96",
              "text": " @inheritdoc INSReverseRegistrar"
            },
            "functionSelector": "3efa047f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDefaultResolver",
            "nameLocation": "1942:18:96",
            "parameters": {
              "id": 62842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1960:2:96"
            },
            "returnParameters": {
              "id": 62846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62850,
                  "src": "1986:13:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INameResolver_$67747",
                    "typeString": "contract INameResolver"
                  },
                  "typeName": {
                    "id": 62844,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62843,
                      "name": "INameResolver",
                      "nameLocations": [
                        "1986:13:96"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67747,
                      "src": "1986:13:96"
                    },
                    "referencedDeclaration": 67747,
                    "src": "1986:13:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INameResolver_$67747",
                      "typeString": "contract INameResolver"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:15:96"
            },
            "scope": 63249,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62860,
            "nodeType": "FunctionDefinition",
            "src": "2088:89:96",
            "nodes": [],
            "body": {
              "id": 62859,
              "nodeType": "Block",
              "src": "2148:29:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62857,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62793,
                    "src": "2161:11:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "functionReturnParameters": 62856,
                  "id": 62858,
                  "nodeType": "Return",
                  "src": "2154:18:96"
                }
              ]
            },
            "baseFunctions": [
              66755
            ],
            "documentation": {
              "id": 62851,
              "nodeType": "StructuredDocumentation",
              "src": "2039:46:96",
              "text": " @inheritdoc INSReverseRegistrar"
            },
            "functionSelector": "8c843314",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRNSUnified",
            "nameLocation": "2097:13:96",
            "parameters": {
              "id": 62852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:2:96"
            },
            "returnParameters": {
              "id": 62856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62860,
                  "src": "2136:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSUnified_$67046",
                    "typeString": "contract INSUnified"
                  },
                  "typeName": {
                    "id": 62854,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62853,
                      "name": "INSUnified",
                      "nameLocations": [
                        "2136:10:96"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67046,
                      "src": "2136:10:96"
                    },
                    "referencedDeclaration": 67046,
                    "src": "2136:10:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:12:96"
            },
            "scope": 63249,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62890,
            "nodeType": "FunctionDefinition",
            "src": "2218:240:96",
            "nodes": [],
            "body": {
              "id": 62889,
              "nodeType": "Block",
              "src": "2294:164:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 62887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 62880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 62873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 62868,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62863,
                          "src": "2307:11:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 62870,
                                "name": "INSReverseRegistrar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66789,
                                "src": "2327:19:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INSReverseRegistrar_$66789_$",
                                  "typeString": "type(contract INSReverseRegistrar)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_INSReverseRegistrar_$66789_$",
                                  "typeString": "type(contract INSReverseRegistrar)"
                                }
                              ],
                              "id": 62869,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2322:4:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 62871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2322:25:96",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_INSReverseRegistrar_$66789",
                              "typeString": "type(contract INSReverseRegistrar)"
                            }
                          },
                          "id": 62872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2348:11:96",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "2322:37:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2307:52:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 62879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 62874,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62863,
                          "src": "2363:11:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 62876,
                                "name": "IERC165",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52691,
                                "src": "2383:7:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC165_$52691_$",
                                  "typeString": "type(contract IERC165)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC165_$52691_$",
                                  "typeString": "type(contract IERC165)"
                                }
                              ],
                              "id": 62875,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "2378:4:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 62877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2378:13:96",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$52691",
                              "typeString": "type(contract IERC165)"
                            }
                          },
                          "id": 62878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2392:11:96",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "2378:25:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2363:40:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2307:96:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 62886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 62881,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62863,
                        "src": "2413:11:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 62883,
                              "name": "IERC181",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66706,
                              "src": "2433:7:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC181_$66706_$",
                                "typeString": "type(contract IERC181)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC181_$66706_$",
                                "typeString": "type(contract IERC181)"
                              }
                            ],
                            "id": 62882,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2428:4:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 62884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2428:13:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC181_$66706",
                            "typeString": "type(contract IERC181)"
                          }
                        },
                        "id": 62885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2442:11:96",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2428:25:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2413:40:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2307:146:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 62867,
                  "id": 62888,
                  "nodeType": "Return",
                  "src": "2300:153:96"
                }
              ]
            },
            "baseFunctions": [
              52690
            ],
            "documentation": {
              "id": 62861,
              "nodeType": "StructuredDocumentation",
              "src": "2181:34:96",
              "text": " @inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2227:17:96",
            "parameters": {
              "id": 62864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62863,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2252:11:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62890,
                  "src": "2245:18:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 62862,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2245:6:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2244:20:96"
            },
            "returnParameters": {
              "id": 62867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62890,
                  "src": "2288:4:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62865,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:4:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:6:96"
            },
            "scope": 63249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62921,
            "nodeType": "FunctionDefinition",
            "src": "2511:218:96",
            "nodes": [],
            "body": {
              "id": 62920,
              "nodeType": "Block",
              "src": "2582:147:96",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 62907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 62901,
                          "name": "resolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62894,
                          "src": "2600:8:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INameResolver_$67747",
                            "typeString": "contract INameResolver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_INameResolver_$67747",
                            "typeString": "contract INameResolver"
                          }
                        ],
                        "id": 62900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2592:7:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 62899,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:7:96",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 62902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2592:17:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 62905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2621:1:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 62904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2613:7:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 62903,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2613:7:96",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 62906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2613:10:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2592:31:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62911,
                  "nodeType": "IfStatement",
                  "src": "2588:60:96",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 62908,
                        "name": "NullAssignment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66722,
                        "src": "2632:14:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 62909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2632:16:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 62910,
                    "nodeType": "RevertStatement",
                    "src": "2625:23:96"
                  }
                },
                {
                  "expression": {
                    "id": 62914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62912,
                      "name": "_defaultResolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62797,
                      "src": "2654:16:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INameResolver_$67747",
                        "typeString": "contract INameResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62913,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62894,
                      "src": "2673:8:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INameResolver_$67747",
                        "typeString": "contract INameResolver"
                      }
                    },
                    "src": "2654:27:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INameResolver_$67747",
                      "typeString": "contract INameResolver"
                    }
                  },
                  "id": 62915,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:27:96"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 62917,
                        "name": "resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62894,
                        "src": "2715:8:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INameResolver_$67747",
                          "typeString": "contract INameResolver"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_INameResolver_$67747",
                          "typeString": "contract INameResolver"
                        }
                      ],
                      "id": 62916,
                      "name": "DefaultResolverChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66735,
                      "src": "2692:22:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_INameResolver_$67747_$returns$__$",
                        "typeString": "function (contract INameResolver)"
                      }
                    },
                    "id": 62918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:32:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62919,
                  "nodeType": "EmitStatement",
                  "src": "2687:37:96"
                }
              ]
            },
            "baseFunctions": [
              66762
            ],
            "documentation": {
              "id": 62891,
              "nodeType": "StructuredDocumentation",
              "src": "2462:46:96",
              "text": " @inheritdoc INSReverseRegistrar"
            },
            "functionSelector": "c66485b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62897,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62896,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2572:9:96"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49105,
                  "src": "2572:9:96"
                },
                "nodeType": "ModifierInvocation",
                "src": "2572:9:96"
              }
            ],
            "name": "setDefaultResolver",
            "nameLocation": "2520:18:96",
            "parameters": {
              "id": 62895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62894,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "2553:8:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62921,
                  "src": "2539:22:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INameResolver_$67747",
                    "typeString": "contract INameResolver"
                  },
                  "typeName": {
                    "id": 62893,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62892,
                      "name": "INameResolver",
                      "nameLocations": [
                        "2539:13:96"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67747,
                      "src": "2539:13:96"
                    },
                    "referencedDeclaration": 67747,
                    "src": "2539:13:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INameResolver_$67747",
                      "typeString": "contract INameResolver"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:24:96"
            },
            "returnParameters": {
              "id": 62898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2582:0:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62940,
            "nodeType": "FunctionDefinition",
            "src": "2770:125:96",
            "nodes": [],
            "body": {
              "id": 62939,
              "nodeType": "Block",
              "src": "2829:66:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62929,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62927,
                      "src": "2835:2:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62931,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62924,
                          "src": "2858:4:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 62934,
                              "name": "_defaultResolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62797,
                              "src": "2872:16:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INameResolver_$67747",
                                "typeString": "contract INameResolver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_INameResolver_$67747",
                                "typeString": "contract INameResolver"
                              }
                            ],
                            "id": 62933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2864:7:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 62932,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2864:7:96",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 62935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2864:25:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 62930,
                        "name": "claimWithResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63015,
                        "src": "2840:17:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) returns (uint256)"
                        }
                      },
                      "id": 62936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2840:50:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2835:55:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62938,
                  "nodeType": "ExpressionStatement",
                  "src": "2835:55:96"
                }
              ]
            },
            "baseFunctions": [
              66687
            ],
            "documentation": {
              "id": 62922,
              "nodeType": "StructuredDocumentation",
              "src": "2733:34:96",
              "text": " @inheritdoc IERC181"
            },
            "functionSelector": "1e83409a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "2779:5:96",
            "parameters": {
              "id": 62925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62924,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2793:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62940,
                  "src": "2785:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2784:14:96"
            },
            "returnParameters": {
              "id": 62928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62927,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2825:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62940,
                  "src": "2817:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:12:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62957,
            "nodeType": "FunctionDefinition",
            "src": "2936:119:96",
            "nodes": [],
            "body": {
              "id": 62956,
              "nodeType": "Block",
              "src": "3005:50:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 62954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62948,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62946,
                      "src": "3011:2:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 62950,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52306,
                            "src": "3031:10:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 62951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3031:12:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 62952,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62943,
                          "src": "3045:4:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        ],
                        "id": 62949,
                        "name": "setNameForAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63093,
                        "src": "3016:14:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,string calldata) returns (uint256)"
                        }
                      },
                      "id": 62953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3016:34:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3011:39:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62955,
                  "nodeType": "ExpressionStatement",
                  "src": "3011:39:96"
                }
              ]
            },
            "baseFunctions": [
              66705
            ],
            "documentation": {
              "id": 62941,
              "nodeType": "StructuredDocumentation",
              "src": "2899:34:96",
              "text": " @inheritdoc IERC181"
            },
            "functionSelector": "c47f0027",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setName",
            "nameLocation": "2945:7:96",
            "parameters": {
              "id": 62944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62943,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2969:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62957,
                  "src": "2953:20:96",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62942,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:6:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:22:96"
            },
            "returnParameters": {
              "id": 62947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62946,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3001:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62957,
                  "src": "2993:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:12:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62992,
            "nodeType": "FunctionDefinition",
            "src": "3108:260:96",
            "nodes": [],
            "body": {
              "id": 62991,
              "nodeType": "Block",
              "src": "3172:196:96",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    62969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62969,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "3203:6:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 62991,
                      "src": "3178:31:96",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 62968,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 62967,
                          "name": "INSUnified.Record",
                          "nameLocations": [
                            "3178:10:96",
                            "3189:6:96"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66859,
                          "src": "3178:17:96"
                        },
                        "referencedDeclaration": 66859,
                        "src": "3178:17:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$66859_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62974,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 62972,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62960,
                        "src": "3234:2:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 62970,
                        "name": "_rnsUnified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62793,
                        "src": "3212:11:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "id": 62971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3224:9:96",
                      "memberName": "getRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66975,
                      "src": "3212:21:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Record_$66859_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct INSUnified.Record memory)"
                      }
                    },
                    "id": 62973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3212:25:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                      "typeString": "struct INSUnified.Record memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3178:59:96"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 62975,
                          "name": "record",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62969,
                          "src": "3247:6:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                            "typeString": "struct INSUnified.Record memory"
                          }
                        },
                        "id": 62976,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3254:5:96",
                        "memberName": "immut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66855,
                        "src": "3247:12:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ImmutableRecord_$66842_memory_ptr",
                          "typeString": "struct INSUnified.ImmutableRecord memory"
                        }
                      },
                      "id": 62977,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3260:8:96",
                      "memberName": "parentId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66839,
                      "src": "3247:21:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 62978,
                        "name": "LibRNSDomain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68113,
                        "src": "3272:12:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$68113_$",
                          "typeString": "type(library LibRNSDomain)"
                        }
                      },
                      "id": 62979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3285:15:96",
                      "memberName": "ADDR_REVERSE_ID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68080,
                      "src": "3272:28:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:53:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62984,
                  "nodeType": "IfStatement",
                  "src": "3243:77:96",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 62981,
                        "name": "InvalidId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66713,
                        "src": "3309:9:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 62982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3309:11:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 62983,
                    "nodeType": "RevertStatement",
                    "src": "3302:18:96"
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 62985,
                            "name": "record",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62969,
                            "src": "3333:6:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                              "typeString": "struct INSUnified.Record memory"
                            }
                          },
                          "id": 62986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3340:5:96",
                          "memberName": "immut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66855,
                          "src": "3333:12:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ImmutableRecord_$66842_memory_ptr",
                            "typeString": "struct INSUnified.ImmutableRecord memory"
                          }
                        },
                        "id": 62987,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3346:5:96",
                        "memberName": "label",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66841,
                        "src": "3333:18:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 62988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3352:9:96",
                      "memberName": "parseAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68305,
                      "src": "3333:28:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (address)"
                      }
                    },
                    "id": 62989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3333:30:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 62964,
                  "id": 62990,
                  "nodeType": "Return",
                  "src": "3326:37:96"
                }
              ]
            },
            "baseFunctions": [
              66780
            ],
            "documentation": {
              "id": 62958,
              "nodeType": "StructuredDocumentation",
              "src": "3059:46:96",
              "text": " @inheritdoc INSReverseRegistrar"
            },
            "functionSelector": "b93f9b0a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "3117:10:96",
            "parameters": {
              "id": 62961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62960,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3136:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 62992,
                  "src": "3128:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3127:12:96"
            },
            "returnParameters": {
              "id": 62964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62963,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62992,
                  "src": "3163:7:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3163:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3162:9:96"
            },
            "scope": 63249,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63015,
            "nodeType": "FunctionDefinition",
            "src": "3409:163:96",
            "nodes": [],
            "body": {
              "id": 63014,
              "nodeType": "Block",
              "src": "3522:50:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63007,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63005,
                      "src": "3528:2:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63009,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62995,
                          "src": "3552:4:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 63010,
                          "name": "resolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62997,
                          "src": "3558:8:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 63008,
                        "name": "_claimWithResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63155,
                        "src": "3533:18:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) returns (uint256)"
                        }
                      },
                      "id": 63011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3533:34:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3528:39:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63013,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:39:96"
                }
              ]
            },
            "baseFunctions": [
              66697
            ],
            "documentation": {
              "id": 62993,
              "nodeType": "StructuredDocumentation",
              "src": "3372:34:96",
              "text": " @inheritdoc IERC181"
            },
            "functionSelector": "0f5a5466",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63000,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62999,
                  "name": "live",
                  "nameLocations": [
                    "3475:4:96"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62804,
                  "src": "3475:4:96"
                },
                "nodeType": "ModifierInvocation",
                "src": "3475:4:96"
              },
              {
                "arguments": [
                  {
                    "id": 63002,
                    "name": "addr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62995,
                    "src": "3495:4:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 63003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63001,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "3480:14:96"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62814,
                  "src": "3480:14:96"
                },
                "nodeType": "ModifierInvocation",
                "src": "3480:20:96"
              }
            ],
            "name": "claimWithResolver",
            "nameLocation": "3418:17:96",
            "parameters": {
              "id": 62998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62995,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "3444:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63015,
                  "src": "3436:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62997,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "3458:8:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63015,
                  "src": "3450:16:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:32:96"
            },
            "returnParameters": {
              "id": 63006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63005,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3518:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63015,
                  "src": "3510:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:12:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63093,
            "nodeType": "FunctionDefinition",
            "src": "3625:501:96",
            "nodes": [],
            "body": {
              "id": 63092,
              "nodeType": "Block",
              "src": "3739:387:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63030,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63028,
                      "src": "3745:2:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63032,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63018,
                          "src": "3760:4:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 63031,
                        "name": "computeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63113,
                        "src": "3750:9:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) pure returns (uint256)"
                        }
                      },
                      "id": 63033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3750:15:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3745:20:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63035,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:20:96"
                },
                {
                  "assignments": [
                    63038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63038,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "3782:10:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63092,
                      "src": "3771:21:96",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 63037,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63036,
                          "name": "INSUnified",
                          "nameLocations": [
                            "3771:10:96"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67046,
                          "src": "3771:10:96"
                        },
                        "referencedDeclaration": 67046,
                        "src": "3771:10:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63040,
                  "initialValue": {
                    "id": 63039,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62793,
                    "src": "3795:11:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3771:35:96"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 63043,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63028,
                          "src": "3835:2:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 63041,
                          "name": "rnsUnified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63038,
                          "src": "3816:10:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INSUnified_$67046",
                            "typeString": "contract INSUnified"
                          }
                        },
                        "id": 63042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3827:7:96",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51397,
                        "src": "3816:18:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 63044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3816:22:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 63047,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3850:4:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                            "typeString": "contract RNSReverseRegistrar"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                            "typeString": "contract RNSReverseRegistrar"
                          }
                        ],
                        "id": 63046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3842:7:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3842:7:96",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 63048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3842:13:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3816:39:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63068,
                  "nodeType": "IfStatement",
                  "src": "3812:178:96",
                  "trueBody": {
                    "id": 63067,
                    "nodeType": "Block",
                    "src": "3857:133:96",
                    "statements": [
                      {
                        "assignments": [
                          63051
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63051,
                            "mutability": "mutable",
                            "name": "claimedId",
                            "nameLocation": "3873:9:96",
                            "nodeType": "VariableDeclaration",
                            "scope": 63067,
                            "src": "3865:17:96",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 63050,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3865:7:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63059,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 63053,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63018,
                              "src": "3904:4:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63056,
                                  "name": "_defaultResolver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62797,
                                  "src": "3918:16:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INameResolver_$67747",
                                    "typeString": "contract INameResolver"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_INameResolver_$67747",
                                    "typeString": "contract INameResolver"
                                  }
                                ],
                                "id": 63055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3910:7:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 63054,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3910:7:96",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3910:25:96",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 63052,
                            "name": "_claimWithResolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63155,
                            "src": "3885:18:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) returns (uint256)"
                            }
                          },
                          "id": 63058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3885:51:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3865:71:96"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63060,
                            "name": "claimedId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63051,
                            "src": "3948:9:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 63061,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63028,
                            "src": "3961:2:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3948:15:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 63066,
                        "nodeType": "IfStatement",
                        "src": "3944:39:96",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 63063,
                              "name": "InvalidId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66713,
                              "src": "3972:9:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 63064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3972:11:96",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 63065,
                          "nodeType": "RevertStatement",
                          "src": "3965:18:96"
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    63073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63073,
                      "mutability": "mutable",
                      "name": "record",
                      "nameLocation": "4021:6:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63092,
                      "src": "3996:31:96",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                        "typeString": "struct INSUnified.Record"
                      },
                      "typeName": {
                        "id": 63072,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63071,
                          "name": "INSUnified.Record",
                          "nameLocations": [
                            "3996:10:96",
                            "4007:6:96"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66859,
                          "src": "3996:17:96"
                        },
                        "referencedDeclaration": 66859,
                        "src": "3996:17:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Record_$66859_storage_ptr",
                          "typeString": "struct INSUnified.Record"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63078,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63076,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63028,
                        "src": "4051:2:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63074,
                        "name": "rnsUnified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63038,
                        "src": "4030:10:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "id": 63075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4041:9:96",
                      "memberName": "getRecord",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66975,
                      "src": "4030:20:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Record_$66859_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct INSUnified.Record memory)"
                      }
                    },
                    "id": 63077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:24:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                      "typeString": "struct INSUnified.Record memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:58:96"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63087,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63028,
                            "src": "4111:2:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 63086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4103:7:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 63085,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4103:7:96",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:11:96",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 63089,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63020,
                        "src": "4116:4:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 63080,
                                "name": "record",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63073,
                                "src": "4074:6:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Record_$66859_memory_ptr",
                                  "typeString": "struct INSUnified.Record memory"
                                }
                              },
                              "id": 63081,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4081:3:96",
                              "memberName": "mut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66858,
                              "src": "4074:10:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MutableRecord_$66852_memory_ptr",
                                "typeString": "struct INSUnified.MutableRecord memory"
                              }
                            },
                            "id": 63082,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4085:8:96",
                            "memberName": "resolver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66845,
                            "src": "4074:19:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 63079,
                          "name": "INameResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67747,
                          "src": "4060:13:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_INameResolver_$67747_$",
                            "typeString": "type(contract INameResolver)"
                          }
                        },
                        "id": 63083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4060:34:96",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INameResolver_$67747",
                          "typeString": "contract INameResolver"
                        }
                      },
                      "id": 63084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4095:7:96",
                      "memberName": "setName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67738,
                      "src": "4060:42:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,string memory) external"
                      }
                    },
                    "id": 63090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:61:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63091,
                  "nodeType": "ExpressionStatement",
                  "src": "4060:61:96"
                }
              ]
            },
            "baseFunctions": [
              66772
            ],
            "documentation": {
              "id": 63016,
              "nodeType": "StructuredDocumentation",
              "src": "3576:46:96",
              "text": " @inheritdoc INSReverseRegistrar"
            },
            "functionSelector": "c9119941",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63023,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63022,
                  "name": "live",
                  "nameLocations": [
                    "3692:4:96"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62804,
                  "src": "3692:4:96"
                },
                "nodeType": "ModifierInvocation",
                "src": "3692:4:96"
              },
              {
                "arguments": [
                  {
                    "id": 63025,
                    "name": "addr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63018,
                    "src": "3712:4:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 63026,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63024,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "3697:14:96"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62814,
                  "src": "3697:14:96"
                },
                "nodeType": "ModifierInvocation",
                "src": "3697:20:96"
              }
            ],
            "name": "setNameForAddr",
            "nameLocation": "3634:14:96",
            "parameters": {
              "id": 63021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63018,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "3657:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63093,
                  "src": "3649:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3649:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63020,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "3679:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63093,
                  "src": "3663:20:96",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63019,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3663:6:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3648:36:96"
            },
            "returnParameters": {
              "id": 63029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63028,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3735:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63093,
                  "src": "3727:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:12:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63113,
            "nodeType": "FunctionDefinition",
            "src": "4179:146:96",
            "nodes": [],
            "body": {
              "id": 63112,
              "nodeType": "Block",
              "src": "4245:80:96",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63101,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63099,
                      "src": "4251:2:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 63104,
                            "name": "LibRNSDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68113,
                            "src": "4274:12:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$68113_$",
                              "typeString": "type(library LibRNSDomain)"
                            }
                          },
                          "id": 63105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4287:15:96",
                          "memberName": "ADDR_REVERSE_ID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68080,
                          "src": "4274:28:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 63106,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63096,
                              "src": "4304:4:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 63107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4309:8:96",
                            "memberName": "toString",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68230,
                            "src": "4304:13:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$attached_to$_t_address_$",
                              "typeString": "function (address) pure returns (string memory)"
                            }
                          },
                          "id": 63108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4304:15:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 63102,
                          "name": "LibRNSDomain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68113,
                          "src": "4256:12:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$68113_$",
                            "typeString": "type(library LibRNSDomain)"
                          }
                        },
                        "id": 63103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4269:4:96",
                        "memberName": "toId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68092,
                        "src": "4256:17:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 63109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4256:64:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4251:69:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63111,
                  "nodeType": "ExpressionStatement",
                  "src": "4251:69:96"
                }
              ]
            },
            "baseFunctions": [
              66788
            ],
            "documentation": {
              "id": 63094,
              "nodeType": "StructuredDocumentation",
              "src": "4130:46:96",
              "text": " @inheritdoc INSReverseRegistrar"
            },
            "functionSelector": "d472ad04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeId",
            "nameLocation": "4188:9:96",
            "parameters": {
              "id": 63097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63096,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "4206:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63113,
                  "src": "4198:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4198:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4197:14:96"
            },
            "returnParameters": {
              "id": 63100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63099,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4241:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63113,
                  "src": "4233:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4233:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4232:12:96"
            },
            "scope": 63249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63155,
            "nodeType": "FunctionDefinition",
            "src": "4457:304:96",
            "nodes": [],
            "body": {
              "id": 63154,
              "nodeType": "Block",
              "src": "4547:214:96",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63124,
                      "mutability": "mutable",
                      "name": "stringifiedAddr",
                      "nameLocation": "4567:15:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63154,
                      "src": "4553:29:96",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 63123,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4553:6:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63128,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63125,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63116,
                        "src": "4585:4:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 63126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4590:8:96",
                      "memberName": "toString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68230,
                      "src": "4585:13:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$attached_to$_t_address_$",
                        "typeString": "function (address) pure returns (string memory)"
                      }
                    },
                    "id": 63127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4585:15:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4553:47:96"
                },
                {
                  "expression": {
                    "id": 63147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 63129,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63121,
                          "src": "4609:2:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 63130,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4606:6:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 63133,
                            "name": "LibRNSDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68113,
                            "src": "4632:12:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$68113_$",
                              "typeString": "type(library LibRNSDomain)"
                            }
                          },
                          "id": 63134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4645:15:96",
                          "memberName": "ADDR_REVERSE_ID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68080,
                          "src": "4632:28:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 63135,
                          "name": "stringifiedAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63124,
                          "src": "4662:15:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 63136,
                          "name": "resolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63118,
                          "src": "4679:8:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 63139,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4697:4:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                "typeString": "contract RNSReverseRegistrar"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                "typeString": "contract RNSReverseRegistrar"
                              }
                            ],
                            "id": 63138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4689:7:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 63137,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4689:7:96",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4689:13:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 63143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4709:6:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 63142,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4709:6:96",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                }
                              ],
                              "id": 63141,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4704:4:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 63144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4704:12:96",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint64",
                              "typeString": "type(uint64)"
                            }
                          },
                          "id": 63145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4717:3:96",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "4704:16:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "expression": {
                          "id": 63131,
                          "name": "_rnsUnified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62793,
                          "src": "4615:11:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INSUnified_$67046",
                            "typeString": "contract INSUnified"
                          }
                        },
                        "id": 63132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4627:4:96",
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66966,
                        "src": "4615:16:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint64_$returns$_t_uint64_$_t_uint256_$",
                          "typeString": "function (uint256,string memory,address,address,uint64) external returns (uint64,uint256)"
                        }
                      },
                      "id": 63146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4615:106:96",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint64_$_t_uint256_$",
                        "typeString": "tuple(uint64,uint256)"
                      }
                    },
                    "src": "4606:115:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63148,
                  "nodeType": "ExpressionStatement",
                  "src": "4606:115:96"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63150,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63116,
                        "src": "4747:4:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63151,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63121,
                        "src": "4753:2:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63149,
                      "name": "ReverseClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66729,
                      "src": "4732:14:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 63152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4732:24:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63153,
                  "nodeType": "EmitStatement",
                  "src": "4727:29:96"
                }
              ]
            },
            "documentation": {
              "id": 63114,
              "nodeType": "StructuredDocumentation",
              "src": "4329:125:96",
              "text": " @dev Helper method to claim domain hex(addr) + '.addr.reverse' for addr.\n Emits an event {ReverseClaimed}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claimWithResolver",
            "nameLocation": "4466:18:96",
            "parameters": {
              "id": 63119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63116,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "4493:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63155,
                  "src": "4485:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63118,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "4507:8:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63155,
                  "src": "4499:16:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4499:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:32:96"
            },
            "returnParameters": {
              "id": 63122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63121,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4543:2:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63155,
                  "src": "4535:10:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4535:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4534:12:96"
            },
            "scope": 63249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63209,
            "nodeType": "FunctionDefinition",
            "src": "4888:419:96",
            "nodes": [],
            "body": {
              "id": 63208,
              "nodeType": "Block",
              "src": "4926:381:96",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63161,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "4943:10:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63208,
                      "src": "4932:21:96",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 63160,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63159,
                          "name": "INSUnified",
                          "nameLocations": [
                            "4932:10:96"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67046,
                          "src": "4932:10:96"
                        },
                        "referencedDeclaration": 67046,
                        "src": "4932:10:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63163,
                  "initialValue": {
                    "id": 63162,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62793,
                    "src": "4956:11:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4932:35:96"
                },
                {
                  "assignments": [
                    63165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63165,
                      "mutability": "mutable",
                      "name": "addrReverseId",
                      "nameLocation": "4981:13:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63208,
                      "src": "4973:21:96",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4973:7:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63168,
                  "initialValue": {
                    "expression": {
                      "id": 63166,
                      "name": "LibRNSDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68113,
                      "src": "4997:12:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$68113_$",
                        "typeString": "type(library LibRNSDomain)"
                      }
                    },
                    "id": 63167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "5010:15:96",
                    "memberName": "ADDR_REVERSE_ID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68080,
                    "src": "4997:28:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4973:52:96"
                },
                {
                  "assignments": [
                    63170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63170,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5039:5:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63208,
                      "src": "5031:13:96",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63169,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5031:7:96",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63175,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63173,
                        "name": "addrReverseId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63165,
                        "src": "5066:13:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63171,
                        "name": "rnsUnified",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63161,
                        "src": "5047:10:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "id": 63172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5058:7:96",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51397,
                      "src": "5047:18:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 63174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5047:33:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5031:49:96"
                },
                {
                  "condition": {
                    "id": 63202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5097:162:96",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 63200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 63191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 63181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 63176,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63170,
                                "src": "5108:5:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 63179,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5125:4:96",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                      "typeString": "contract RNSReverseRegistrar"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                      "typeString": "contract RNSReverseRegistrar"
                                    }
                                  ],
                                  "id": 63178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5117:7:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 63177,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5117:7:96",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5117:13:96",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5108:22:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 63190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 63184,
                                    "name": "addrReverseId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63165,
                                    "src": "5157:13:96",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 63182,
                                    "name": "rnsUnified",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63161,
                                    "src": "5134:10:96",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                                      "typeString": "contract INSUnified"
                                    }
                                  },
                                  "id": 63183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5145:11:96",
                                  "memberName": "getApproved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51453,
                                  "src": "5134:22:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 63185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5134:37:96",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 63188,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5183:4:96",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                      "typeString": "contract RNSReverseRegistrar"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                      "typeString": "contract RNSReverseRegistrar"
                                    }
                                  ],
                                  "id": 63187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5175:7:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 63186,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5175:7:96",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5175:13:96",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5134:54:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5108:80:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 63194,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63170,
                                "src": "5230:5:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 63197,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5245:4:96",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                      "typeString": "contract RNSReverseRegistrar"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RNSReverseRegistrar_$63249",
                                      "typeString": "contract RNSReverseRegistrar"
                                    }
                                  ],
                                  "id": 63196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5237:7:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 63195,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5237:7:96",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5237:13:96",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 63192,
                                "name": "rnsUnified",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63161,
                                "src": "5202:10:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_INSUnified_$67046",
                                  "typeString": "contract INSUnified"
                                }
                              },
                              "id": 63193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5213:16:96",
                              "memberName": "isApprovedForAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51463,
                              "src": "5202:27:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view external returns (bool)"
                              }
                            },
                            "id": 63199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5202:49:96",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5108:143:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 63201,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5098:161:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63207,
                  "nodeType": "IfStatement",
                  "src": "5086:217:96",
                  "trueBody": {
                    "id": 63206,
                    "nodeType": "Block",
                    "src": "5266:37:96",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 63203,
                            "name": "InvalidConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66716,
                            "src": "5281:13:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 63204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5281:15:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63205,
                        "nodeType": "RevertStatement",
                        "src": "5274:22:96"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 63156,
              "nodeType": "StructuredDocumentation",
              "src": "4765:120:96",
              "text": " @dev Helper method to ensure the contract can mint or modify domain hex(addr) + '.addr.reverse' for addr."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireLive",
            "nameLocation": "4897:12:96",
            "parameters": {
              "id": 63157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4909:2:96"
            },
            "returnParameters": {
              "id": 63158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4926:0:96"
            },
            "scope": 63249,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63248,
            "nodeType": "FunctionDefinition",
            "src": "5434:293:96",
            "nodes": [],
            "body": {
              "id": 63247,
              "nodeType": "Block",
              "src": "5490:237:96",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63216
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63216,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "5504:6:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63247,
                      "src": "5496:14:96",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63215,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5496:7:96",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63219,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63217,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52306,
                      "src": "5513:10:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 63218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:12:96",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5496:29:96"
                },
                {
                  "assignments": [
                    63222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63222,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "5542:10:96",
                      "nodeType": "VariableDeclaration",
                      "scope": 63247,
                      "src": "5531:21:96",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 63221,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63220,
                          "name": "INSUnified",
                          "nameLocations": [
                            "5531:10:96"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67046,
                          "src": "5531:10:96"
                        },
                        "referencedDeclaration": 67046,
                        "src": "5531:10:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63224,
                  "initialValue": {
                    "id": 63223,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62793,
                    "src": "5555:11:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5531:35:96"
                },
                {
                  "condition": {
                    "id": 63241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5576:109:96",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 63239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 63233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 63227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 63225,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63212,
                                "src": "5578:4:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 63226,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63216,
                                "src": "5586:6:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5578:14:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 63230,
                                  "name": "CONTROLLER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62784,
                                  "src": "5615:15:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 63231,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63216,
                                  "src": "5632:6:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 63228,
                                  "name": "rnsUnified",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63222,
                                  "src": "5596:10:96",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INSUnified_$67046",
                                    "typeString": "contract INSUnified"
                                  }
                                },
                                "id": 63229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5607:7:96",
                                "memberName": "hasRole",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 49015,
                                "src": "5596:18:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view external returns (bool)"
                                }
                              },
                              "id": 63232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5596:43:96",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5578:61:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 63236,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63212,
                                "src": "5671:4:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 63237,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63216,
                                "src": "5677:6:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 63234,
                                "name": "rnsUnified",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63222,
                                "src": "5643:10:96",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_INSUnified_$67046",
                                  "typeString": "contract INSUnified"
                                }
                              },
                              "id": 63235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5654:16:96",
                              "memberName": "isApprovedForAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51463,
                              "src": "5643:27:96",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view external returns (bool)"
                              }
                            },
                            "id": 63238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5643:41:96",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5578:106:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 63240,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5577:108:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63246,
                  "nodeType": "IfStatement",
                  "src": "5572:151:96",
                  "trueBody": {
                    "id": 63245,
                    "nodeType": "Block",
                    "src": "5687:36:96",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 63242,
                            "name": "Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66719,
                            "src": "5702:12:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 63243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5702:14:96",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63244,
                        "nodeType": "RevertStatement",
                        "src": "5695:21:96"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 63210,
              "nodeType": "StructuredDocumentation",
              "src": "5311:120:96",
              "text": " @dev Helper method to ensure addr is authorized for claiming domain hex(addr) + '.addr.reverse' for addr."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorized",
            "nameLocation": "5443:18:96",
            "parameters": {
              "id": 63213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63212,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "5470:4:96",
                  "nodeType": "VariableDeclaration",
                  "scope": 63248,
                  "src": "5462:12:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5462:7:96",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5461:14:96"
            },
            "returnParameters": {
              "id": 63214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5490:0:96"
            },
            "scope": 63249,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 62771,
              "name": "Initializable",
              "nameLocations": [
                "1097:13:96"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50248,
              "src": "1097:13:96"
            },
            "id": 62772,
            "nodeType": "InheritanceSpecifier",
            "src": "1097:13:96"
          },
          {
            "baseName": {
              "id": 62773,
              "name": "Ownable",
              "nameLocations": [
                "1112:7:96"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49186,
              "src": "1112:7:96"
            },
            "id": 62774,
            "nodeType": "InheritanceSpecifier",
            "src": "1112:7:96"
          },
          {
            "baseName": {
              "id": 62775,
              "name": "INSReverseRegistrar",
              "nameLocations": [
                "1121:19:96"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66789,
              "src": "1121:19:96"
            },
            "id": 62776,
            "nodeType": "InheritanceSpecifier",
            "src": "1121:19:96"
          }
        ],
        "canonicalName": "RNSReverseRegistrar",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 62770,
          "nodeType": "StructuredDocumentation",
          "src": "558:506:96",
          "text": " @notice Customized version of ReverseRegistrar: https://github.com/ensdomains/ens-contracts/blob/0c75ba23fae76165d51c9c80d76d22261e06179d/contracts/reverseRegistrar/ReverseRegistrar.sol\n @dev The reverse registrar provides functions to claim a reverse record, as well as a convenience function to\n configure the record as it's most commonly used, as a way of specifying a canonical name for an address.\n The reverse registrar is specified in EIP 181 https://eips.ethereum.org/EIPS/eip-181."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          63249,
          66789,
          52691,
          66706,
          49186,
          52316,
          50248
        ],
        "name": "RNSReverseRegistrar",
        "nameLocation": "1074:19:96",
        "scope": 63250,
        "usedErrors": [
          66713,
          66716,
          66719,
          66722,
          68117,
          68121
        ],
        "usedEvents": [
          49087,
          50094,
          66729,
          66735
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 29142324,
  "bytecode": "0x608060405261000d3361001a565b610015610075565b610134565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16156100e15760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614610132576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6113db806101436000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638c84331411610097578063c66485b211610066578063c66485b21461020d578063c911994114610220578063d472ad0414610233578063f2fde38b1461024657600080fd5b80638c843314146101bf5780638da5cb5b146101d0578063b93f9b0a146101e7578063c47f0027146101fa57600080fd5b80631e83409a116100d35780631e83409a1461016a5780633efa047f1461017d578063485cc955146101a2578063715018a6146101b757600080fd5b806301ffc9a7146100fa578063092c5b3b146101225780630f5a546614610157575b600080fd5b61010d610108366004610e5b565b610259565b60405190151581526020015b60405180910390f35b6101497f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335781565b604051908152602001610119565b610149610165366004610e9a565b6102ab565b610149610178366004610ed3565b6102d1565b6034546001600160a01b03165b6040516001600160a01b039091168152602001610119565b6101b56101b0366004610e9a565b6102eb565b005b6101b561041f565b6033546001600160a01b031661018a565b6000546201000090046001600160a01b031661018a565b61018a6101f5366004610ef0565b610433565b610149610208366004610f52565b6104f5565b6101b561021b366004610ed3565b610502565b61014961022e366004610f94565b61057b565b610149610241366004610ed3565b61073a565b6101b5610254366004610ed3565b610776565b60006001600160e01b0319821663d96a46ad60e01b148061028a57506001600160e01b031982166301ffc9a760e01b145b806102a557506001600160e01b0319821663d5a614db60e01b145b92915050565b60006102b56107ef565b826102bf8161098e565b6102c98484610acd565b949350505050565b6034546000906102a59083906001600160a01b03166102ab565b600054610100900460ff161580801561030b5750600054600160ff909116105b806103255750303b158015610325575060005460ff166001145b61038d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156103b0576000805461ff0019166101001790555b603380546001600160a01b0319166001600160a01b0384161790556103d483610bb4565b801561041a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610427610c0f565b6104316000610bb4565b565b6033546040516303e9e60960e01b81526004810183905260009182916001600160a01b03909116906303e9e60990602401600060405180830381865afa158015610481573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a9919081019061114e565b805160200151909150600080516020611386833981519152146104df57604051631bf4348160e31b815260040160405180910390fd5b8051604001516104ee90610c70565b9392505050565b60006104ee33848461057b565b61050a610c0f565b6001600160a01b038116610531576040516362daafb160e11b815260040160405180910390fd5b603480546001600160a01b0319166001600160a01b0383169081179091556040517feae17a84d9eb83d8c8eb317f9e7d64857bc363fa51674d996c023f4340c577cf90600090a250565b60006105856107ef565b8361058f8161098e565b6105988561073a565b6033546040516331a9108f60e11b8152600481018390529193506001600160a01b03169030908290636352211e90602401602060405180830381865afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190611271565b6001600160a01b031614610656576034546000906106329088906001600160a01b0316610acd565b905083811461065457604051631bf4348160e31b815260040160405180910390fd5b505b6040516303e9e60960e01b8152600481018490526000906001600160a01b038316906303e9e60990602401600060405180830381865afa15801561069e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c6919081019061114e565b602081015151604051637737221360e01b81529192506001600160a01b0316906377372213906106fe9087908a908a9060040161128e565b600060405180830381600087803b15801561071857600080fd5b505af115801561072c573d6000803e3d6000fd5b505050505050509392505050565b60006102a5600080516020611386833981519152610760846001600160a01b0316610d0a565b6000918252805160209182012090526040902090565b61077e610c0f565b6001600160a01b0381166107e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610384565b6107ec81610bb4565b50565b6033546040516331a9108f60e11b8152600080516020611386833981519152600482018190526001600160a01b0390921691906000908390636352211e90602401602060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190611271565b90506001600160a01b0381163014806108fb575060405163020604bf60e21b81526004810183905230906001600160a01b0385169063081812fc90602401602060405180830381865afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190611271565b6001600160a01b0316145b80610971575060405163e985e9c560e01b81526001600160a01b03828116600483015230602483015284169063e985e9c590604401602060405180830381865afa15801561094d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097191906112c4565b61041a576040516306b7c75960e31b815260040160405180910390fd5b60335433906001600160a01b03908116908316821480610a395750604051632474521560e21b81527f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335760048201526001600160a01b0383811660248301528216906391d1485490604401602060405180830381865afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3991906112c4565b80610ab1575060405163e985e9c560e01b81526001600160a01b038481166004830152838116602483015282169063e985e9c590604401602060405180830381865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab191906112c4565b61041a576040516282b42960e81b815260040160405180910390fd5b600080610ae2846001600160a01b0316610d0a565b603354604051630570891f60e01b81529192506001600160a01b031690630570891f90610b31906000805160206113868339815191529085908890309067ffffffffffffffff906004016112df565b60408051808303816000875af1158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190611343565b6040519093508391506001600160a01b038616907f53591c13f73c953042ec59cc15c968c03041980e380816e0b08dfcead86c89ac90600090a35092915050565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000546001600160a01b03620100009091041633146104315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610384565b60008151602814610c9457604051638dc6ac0160e01b815260040160405180910390fd5b6000805b6028811015610d035761010082029150610cd1848281518110610cbd57610cbd61136f565b01602001516001600160f81b031916610d7b565b60ff1660100282019150610cf3848260010181518110610cbd57610cbd61136f565b60ff169190910190600201610c98565b5092915050565b6060602881526020810160285b8015610d74576001810390506f181899199a1a9b1b9c1cb0b131b232b360811b600f85161a828201536010840493506001810390506f181899199a1a9b1b9c1cb0b131b232b360811b600f85161a82820153601084049350610d17565b5050919050565b60006001600160f81b03198216606160f81b11801590610da95750603360f91b6001600160f81b0319831611155b15610db9575060f81c6056190190565b6001600160f81b03198216604160f81b11801590610de55750602360f91b6001600160f81b0319831611155b15610df5575060f81c6036190190565b6001600160f81b03198216600360fc1b11801590610e215750603960f81b6001600160f81b0319831611155b15610e31575060f81c602f190190565b604051633fd7c86760e01b81526001600160f81b031983166004820152602401610384565b919050565b600060208284031215610e6d57600080fd5b81356001600160e01b0319811681146104ee57600080fd5b6001600160a01b03811681146107ec57600080fd5b60008060408385031215610ead57600080fd5b8235610eb881610e85565b91506020830135610ec881610e85565b809150509250929050565b600060208284031215610ee557600080fd5b81356104ee81610e85565b600060208284031215610f0257600080fd5b5035919050565b60008083601f840112610f1b57600080fd5b50813567ffffffffffffffff811115610f3357600080fd5b602083019150836020828501011115610f4b57600080fd5b9250929050565b60008060208385031215610f6557600080fd5b823567ffffffffffffffff811115610f7c57600080fd5b610f8885828601610f09565b90969095509350505050565b600080600060408486031215610fa957600080fd5b8335610fb481610e85565b9250602084013567ffffffffffffffff811115610fd057600080fd5b610fdc86828701610f09565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561102257611022610fe9565b60405290565b6040516060810167ffffffffffffffff8111828210171561102257611022610fe9565b604051601f8201601f1916810167ffffffffffffffff8111828210171561107457611074610fe9565b604052919050565b60005b8381101561109757818101518382015260200161107f565b50506000910152565b805167ffffffffffffffff81168114610e5657600080fd5b80518015158114610e5657600080fd5b6000608082840312156110da57600080fd5b6040516080810181811067ffffffffffffffff821117156110fd576110fd610fe9565b8060405250809150825161111081610e85565b8152602083015161112081610e85565b6020820152611131604084016110a0565b6040820152611142606084016110b8565b60608201525092915050565b6000602080838503121561116157600080fd5b825167ffffffffffffffff8082111561117957600080fd5b9084019060a0828703121561118d57600080fd5b611195610fff565b8251828111156111a457600080fd5b8301606081890312156111b657600080fd5b6111be611028565b815160ff811681146111cf57600080fd5b815281860151868201526040820151848111156111eb57600080fd5b80830192505088601f83011261120057600080fd5b81518481111561121257611212610fe9565b611224601f8201601f1916880161104b565b9450808552898782850101111561123a57600080fd5b6112498188870189860161107c565b5060408101849052825250611260878486016110c8565b848201528094505050505092915050565b60006020828403121561128357600080fd5b81516104ee81610e85565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6000602082840312156112d657600080fd5b6104ee826110b8565b85815260a06020820152600085518060a08401526113048160c0850160208a0161107c565b6001600160a01b03958616604084015293909416606082015267ffffffffffffffff91909116608082015260c0601f909201601f191601019392505050565b6000806040838503121561135657600080fd5b61135f836110a0565b9150602083015190509250929050565b634e487b7160e01b600052603260045260246000fdfe91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2a2646970667358221220a08b9f6b89a9e4966176fa2b4cf0142ddf4236162fbaf94ce4dd18a53db2e7a764736f6c63430008150033",
  "chainId": 2020,
  "contractName": "RNSReverseRegistrar",
  "deployedBytecode": "",
  "deployer": "0x0F68eDBE14C8f68481771016d7E2871d6a35DE11",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "The reverse registrar provides functions to claim a reverse record, as well as a convenience function to configure the record as it's most commonly used, as a way of specifying a canonical name for an address. The reverse registrar is specified in EIP 181 https://eips.ethereum.org/EIPS/eip-181.",
    "methods": {
      "claim(address)": {
        "details": "Claims the name hex(addr) + '.addr.reverse' for addr.",
        "params": {
          "addr": "The address to set as the addr of the reverse record in INS."
        },
        "returns": {
          "id": "The INS node hash of the reverse record."
        }
      },
      "claimWithResolver(address,address)": {
        "details": "Claims the name hex(owner) + '.addr.reverse' for owner and sets resolver.",
        "params": {
          "addr": "The address to set as the owner of the reverse record in INS.",
          "resolver": "The address of the resolver to set; 0 to leave unchanged."
        },
        "returns": {
          "id": "The INS node hash of the reverse record."
        }
      },
      "computeId(address)": {
        "details": "Returns the id hash for a given account's reverse records.",
        "params": {
          "addr": "The address to hash"
        },
        "returns": {
          "id": "The INS node hash."
        }
      },
      "getAddress(uint256)": {
        "details": "Returns address that the reverse node resolves for. Eg. node namehash('{addr}.addr.reverse') will always resolve for `addr`."
      },
      "getDefaultResolver()": {
        "details": "Returns default resolver."
      },
      "getRNSUnified()": {
        "details": "Returns RNSUnified contract."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setDefaultResolver(address)": {
        "details": "Sets default resolver. Requirement: - The method caller must be admin. Emitted an event {DefaultResolverChanged}."
      },
      "setName(string)": {
        "details": "Sets the name record for the reverse INS record associated with the calling account. First updates the resolver to the default reverse resolver if necessary.",
        "params": {
          "name": "The name to set for this address."
        },
        "returns": {
          "id": "The INS node hash of the reverse record."
        }
      },
      "setNameForAddr(address,string)": {
        "details": "Same as {IERC181-setName}."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "events": {
      "DefaultResolverChanged(address)": {
        "details": "Emitted when the default resolver is changed."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "ReverseClaimed(address,uint256)": {
        "details": "Emitted when reverse node is claimed."
      }
    },
    "errors": {
      "InvalidConfig()": [
        {
          "details": "Error: The contract is not authorized for minting or modifying domain hex(addr) + '.addr.reverse'."
        }
      ],
      "InvalidId()": [
        {
          "details": "Error: The provided id is not child node of `ADDR_REVERSE_ID`"
        }
      ],
      "NullAssignment()": [
        {
          "details": "Error: The provided resolver address is null."
        }
      ],
      "Unauthorized()": [
        {
          "details": "Error: The sender lacks the necessary permissions."
        }
      ]
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"char\",\"type\":\"bytes1\"}],\"name\":\"InvalidCharacter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidStringLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAssignment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract INameResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"DefaultResolverChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ReverseClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONTROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"claimWithResolver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"computeId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultResolver\",\"outputs\":[{\"internalType\":\"contract INameResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRNSUnified\",\"outputs\":[{\"internalType\":\"contract INSUnified\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"contract INSUnified\",\"name\":\"rnsUnified\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INameResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setDefaultResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setNameForAddr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The reverse registrar provides functions to claim a reverse record, as well as a convenience function to configure the record as it's most commonly used, as a way of specifying a canonical name for an address. The reverse registrar is specified in EIP 181 https://eips.ethereum.org/EIPS/eip-181.\",\"errors\":{\"InvalidConfig()\":[{\"details\":\"Error: The contract is not authorized for minting or modifying domain hex(addr) + '.addr.reverse'.\"}],\"InvalidId()\":[{\"details\":\"Error: The provided id is not child node of `ADDR_REVERSE_ID`\"}],\"NullAssignment()\":[{\"details\":\"Error: The provided resolver address is null.\"}],\"Unauthorized()\":[{\"details\":\"Error: The sender lacks the necessary permissions.\"}]},\"events\":{\"DefaultResolverChanged(address)\":{\"details\":\"Emitted when the default resolver is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"ReverseClaimed(address,uint256)\":{\"details\":\"Emitted when reverse node is claimed.\"}},\"kind\":\"dev\",\"methods\":{\"claim(address)\":{\"details\":\"Claims the name hex(addr) + '.addr.reverse' for addr.\",\"params\":{\"addr\":\"The address to set as the addr of the reverse record in INS.\"},\"returns\":{\"id\":\"The INS node hash of the reverse record.\"}},\"claimWithResolver(address,address)\":{\"details\":\"Claims the name hex(owner) + '.addr.reverse' for owner and sets resolver.\",\"params\":{\"addr\":\"The address to set as the owner of the reverse record in INS.\",\"resolver\":\"The address of the resolver to set; 0 to leave unchanged.\"},\"returns\":{\"id\":\"The INS node hash of the reverse record.\"}},\"computeId(address)\":{\"details\":\"Returns the id hash for a given account's reverse records.\",\"params\":{\"addr\":\"The address to hash\"},\"returns\":{\"id\":\"The INS node hash.\"}},\"getAddress(uint256)\":{\"details\":\"Returns address that the reverse node resolves for. Eg. node namehash('{addr}.addr.reverse') will always resolve for `addr`.\"},\"getDefaultResolver()\":{\"details\":\"Returns default resolver.\"},\"getRNSUnified()\":{\"details\":\"Returns RNSUnified contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDefaultResolver(address)\":{\"details\":\"Sets default resolver. Requirement: - The method caller must be admin. Emitted an event {DefaultResolverChanged}.\"},\"setName(string)\":{\"details\":\"Sets the name record for the reverse INS record associated with the calling account. First updates the resolver to the default reverse resolver if necessary.\",\"params\":{\"name\":\"The name to set for this address.\"},\"returns\":{\"id\":\"The INS node hash of the reverse record.\"}},\"setNameForAddr(address,string)\":{\"details\":\"Same as {IERC181-setName}.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"CONTROLLER_ROLE\":{\"details\":\"This controller must equal to INSReverseRegistrar.CONTROLLER_ROLE()\"},\"____gap\":{\"details\":\"Gap for upgradeability.\"},\"_defaultResolver\":{\"details\":\"The default resolver.\"},\"_rnsUnified\":{\"details\":\"The rns unified contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Customized version of ReverseRegistrar: https://github.com/ensdomains/ens-contracts/blob/0c75ba23fae76165d51c9c80d76d22261e06179d/contracts/reverseRegistrar/ReverseRegistrar.sol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RNSReverseRegistrar.sol\":\"RNSReverseRegistrar\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/=lib/pyth-sdk-solidity/\",\":@rns-contracts/=src/\",\":buffer/=lib/buffer/contracts/\",\":contract-template/=lib/contract-template/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerable is IAccessControl {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/RNSReverseRegistrar.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { INameResolver } from \\\"./interfaces/resolvers/INameResolver.sol\\\";\\nimport { IERC165, IERC181, INSReverseRegistrar } from \\\"./interfaces/INSReverseRegistrar.sol\\\";\\nimport { INSUnified } from \\\"./interfaces/INSUnified.sol\\\";\\nimport { LibString } from \\\"./libraries/LibString.sol\\\";\\nimport { LibRNSDomain } from \\\"./libraries/LibRNSDomain.sol\\\";\\n\\n/**\\n * @notice Customized version of ReverseRegistrar: https://github.com/ensdomains/ens-contracts/blob/0c75ba23fae76165d51c9c80d76d22261e06179d/contracts/reverseRegistrar/ReverseRegistrar.sol\\n * @dev The reverse registrar provides functions to claim a reverse record, as well as a convenience function to\\n * configure the record as it's most commonly used, as a way of specifying a canonical name for an address.\\n * The reverse registrar is specified in EIP 181 https://eips.ethereum.org/EIPS/eip-181.\\n */\\ncontract RNSReverseRegistrar is Initializable, Ownable, INSReverseRegistrar {\\n  using LibString for *;\\n\\n  /// @dev This controller must equal to INSReverseRegistrar.CONTROLLER_ROLE()\\n  bytes32 public constant CONTROLLER_ROLE = keccak256(\\\"CONTROLLER_ROLE\\\");\\n\\n  /// @dev Gap for upgradeability.\\n  uint256[50] private ____gap;\\n  /// @dev The rns unified contract.\\n  INSUnified internal _rnsUnified;\\n  /// @dev The default resolver.\\n  INameResolver internal _defaultResolver;\\n\\n  modifier live() {\\n    _requireLive();\\n    _;\\n  }\\n\\n  modifier onlyAuthorized(address addr) {\\n    _requireAuthorized(addr);\\n    _;\\n  }\\n\\n  constructor() payable {\\n    _disableInitializers();\\n  }\\n\\n  function initialize(address admin, INSUnified rnsUnified) external initializer {\\n    _rnsUnified = rnsUnified;\\n    _transferOwnership(admin);\\n  }\\n\\n  /**\\n   * @inheritdoc INSReverseRegistrar\\n   */\\n  function getDefaultResolver() external view returns (INameResolver) {\\n    return _defaultResolver;\\n  }\\n\\n  /**\\n   * @inheritdoc INSReverseRegistrar\\n   */\\n  function getRNSUnified() external view returns (INSUnified) {\\n    return _rnsUnified;\\n  }\\n\\n  /**\\n   * @inheritdoc IERC165\\n   */\\n  function supportsInterface(bytes4 interfaceId) external pure returns (bool) {\\n    return interfaceId == type(INSReverseRegistrar).interfaceId || interfaceId == type(IERC165).interfaceId\\n      || interfaceId == type(IERC181).interfaceId;\\n  }\\n\\n  /**\\n   * @inheritdoc INSReverseRegistrar\\n   */\\n  function setDefaultResolver(INameResolver resolver) external onlyOwner {\\n    if (address(resolver) == address(0)) revert NullAssignment();\\n    _defaultResolver = resolver;\\n    emit DefaultResolverChanged(resolver);\\n  }\\n\\n  /**\\n   * @inheritdoc IERC181\\n   */\\n  function claim(address addr) external returns (uint256 id) {\\n    id = claimWithResolver(addr, address(_defaultResolver));\\n  }\\n\\n  /**\\n   * @inheritdoc IERC181\\n   */\\n  function setName(string calldata name) external returns (uint256 id) {\\n    id = setNameForAddr(_msgSender(), name);\\n  }\\n\\n  /**\\n   * @inheritdoc INSReverseRegistrar\\n   */\\n  function getAddress(uint256 id) external view returns (address) {\\n    INSUnified.Record memory record = _rnsUnified.getRecord(id);\\n    if (record.immut.parentId != LibRNSDomain.ADDR_REVERSE_ID) revert InvalidId();\\n    return record.immut.label.parseAddr();\\n  }\\n\\n  /**\\n   * @inheritdoc IERC181\\n   */\\n  function claimWithResolver(address addr, address resolver) public live onlyAuthorized(addr) returns (uint256 id) {\\n    id = _claimWithResolver(addr, resolver);\\n  }\\n\\n  /**\\n   * @inheritdoc INSReverseRegistrar\\n   */\\n  function setNameForAddr(address addr, string calldata name) public live onlyAuthorized(addr) returns (uint256 id) {\\n    id = computeId(addr);\\n    INSUnified rnsUnified = _rnsUnified;\\n    if (rnsUnified.ownerOf(id) != address(this)) {\\n      uint256 claimedId = _claimWithResolver(addr, address(_defaultResolver));\\n      if (claimedId != id) revert InvalidId();\\n    }\\n\\n    INSUnified.Record memory record = rnsUnified.getRecord(id);\\n    INameResolver(record.mut.resolver).setName(bytes32(id), name);\\n  }\\n\\n  /**\\n   * @inheritdoc INSReverseRegistrar\\n   */\\n  function computeId(address addr) public pure returns (uint256 id) {\\n    id = LibRNSDomain.toId(LibRNSDomain.ADDR_REVERSE_ID, addr.toString());\\n  }\\n\\n  /**\\n   * @dev Helper method to claim domain hex(addr) + '.addr.reverse' for addr.\\n   * Emits an event {ReverseClaimed}.\\n   */\\n  function _claimWithResolver(address addr, address resolver) internal returns (uint256 id) {\\n    string memory stringifiedAddr = addr.toString();\\n    (, id) = _rnsUnified.mint(LibRNSDomain.ADDR_REVERSE_ID, stringifiedAddr, resolver, address(this), type(uint64).max);\\n    emit ReverseClaimed(addr, id);\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure the contract can mint or modify domain hex(addr) + '.addr.reverse' for addr.\\n   */\\n  function _requireLive() internal view {\\n    INSUnified rnsUnified = _rnsUnified;\\n    uint256 addrReverseId = LibRNSDomain.ADDR_REVERSE_ID;\\n    address owner = rnsUnified.ownerOf(addrReverseId);\\n    if (\\n      !(\\n        owner == address(this) || rnsUnified.getApproved(addrReverseId) == address(this)\\n          || rnsUnified.isApprovedForAll(owner, address(this))\\n      )\\n    ) {\\n      revert InvalidConfig();\\n    }\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure addr is authorized for claiming domain hex(addr) + '.addr.reverse' for addr.\\n   */\\n  function _requireAuthorized(address addr) internal view {\\n    address sender = _msgSender();\\n    INSUnified rnsUnified = _rnsUnified;\\n    if (!(addr == sender || rnsUnified.hasRole(CONTROLLER_ROLE, sender) || rnsUnified.isApprovedForAll(addr, sender))) {\\n      revert Unauthorized();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x110d52dd1dff7be521099a533bd39cb2c774b9c0fb1635090069415bf27ad2bc\",\"license\":\"MIT\"},\"src/interfaces/INSReverseRegistrar.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC165 } from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport { INameResolver } from \\\"./resolvers/INameResolver.sol\\\";\\nimport { INSUnified } from \\\"./INSUnified.sol\\\";\\n\\n/// @dev See https://eips.ethereum.org/EIPS/eip-181#registrar\\ninterface IERC181 {\\n  /**\\n   * @dev Claims the name hex(addr) + '.addr.reverse' for addr.\\n   *\\n   * @param addr The address to set as the addr of the reverse record in INS.\\n   * @return id The INS node hash of the reverse record.\\n   */\\n  function claim(address addr) external returns (uint256 id);\\n\\n  /**\\n   * @dev Claims the name hex(owner) + '.addr.reverse' for owner and sets resolver.\\n   *\\n   * @param addr The address to set as the owner of the reverse record in INS.\\n   * @param resolver The address of the resolver to set; 0 to leave unchanged.\\n   * @return id The INS node hash of the reverse record.\\n   */\\n  function claimWithResolver(address addr, address resolver) external returns (uint256 id);\\n\\n  /**\\n   * @dev Sets the name record for the reverse INS record associated with the calling account. First updates the\\n   * resolver to the default reverse resolver if necessary.\\n   *\\n   * @param name The name to set for this address.\\n   * @return The INS node hash of the reverse record.\\n   */\\n  function setName(string memory name) external returns (uint256);\\n}\\n\\ninterface INSReverseRegistrar is IERC181, IERC165 {\\n  /// @dev Error: The provided id is not child node of `ADDR_REVERSE_ID`\\n  error InvalidId();\\n  /// @dev Error: The contract is not authorized for minting or modifying domain hex(addr) + '.addr.reverse'.\\n  error InvalidConfig();\\n  /// @dev Error: The sender lacks the necessary permissions.\\n  error Unauthorized();\\n  /// @dev Error: The provided resolver address is null.\\n  error NullAssignment();\\n\\n  /// @dev Emitted when reverse node is claimed.\\n  event ReverseClaimed(address indexed addr, uint256 indexed id);\\n  /// @dev Emitted when the default resolver is changed.\\n  event DefaultResolverChanged(INameResolver indexed resolver);\\n\\n  /**\\n   * @dev Returns the controller role.\\n   */\\n  function CONTROLLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns default resolver.\\n   */\\n  function getDefaultResolver() external view returns (INameResolver);\\n\\n  /**\\n   * @dev Returns RNSUnified contract.\\n   */\\n  function getRNSUnified() external view returns (INSUnified);\\n\\n  /**\\n   * @dev Sets default resolver.\\n   *\\n   * Requirement:\\n   *\\n   * - The method caller must be admin.\\n   *\\n   * Emitted an event {DefaultResolverChanged}.\\n   *\\n   */\\n  function setDefaultResolver(INameResolver resolver) external;\\n\\n  /**\\n   * @dev Same as {IERC181-setName}.\\n   */\\n  function setNameForAddr(address addr, string memory name) external returns (uint256 id);\\n\\n  /**\\n   * @dev Returns address that the reverse node resolves for.\\n   * Eg. node namehash('{addr}.addr.reverse') will always resolve for `addr`.\\n   */\\n  function getAddress(uint256 id) external view returns (address);\\n\\n  /**\\n   * @dev Returns the id hash for a given account's reverse records.\\n   * @param addr The address to hash\\n   * @return The INS node hash.\\n   */\\n  function computeId(address addr) external pure returns (uint256);\\n}\\n\",\"keccak256\":\"0x3b88e9ea1dd7c128244b5d0c69cee9dcadcb16b05a7e13416cc7b95c071b60a4\",\"license\":\"MIT\"},\"src/interfaces/INSUnified.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC721Metadata } from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport { IAccessControlEnumerable } from \\\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\\\";\\nimport { ModifyingIndicator } from \\\"../types/ModifyingIndicator.sol\\\";\\n\\ninterface INSUnified is IAccessControlEnumerable, IERC721Metadata {\\n  /// @dev Error: The provided token id is expired.\\n  error Expired();\\n  /// @dev Error: The provided token id is unexists.\\n  error Unexists();\\n  /// @dev Error: The provided token id's depth level is greater than 3.\\n  error ThirdLevelDomainUnallowed();\\n  /// @dev Error: The provided id expiry is greater than parent id expiry.\\n  error ExceedParentExpiry();\\n  /// @dev Error: The provided name is unavailable for registration.\\n  error Unavailable();\\n  /// @dev Error: The sender lacks the necessary permissions.\\n  error Unauthorized();\\n  /// @dev Error: Missing controller role required for modification.\\n  error MissingControllerRole();\\n  /// @dev Error: Attempting to set an immutable field, which cannot be modified.\\n  error CannotSetImmutableField();\\n  /// @dev Error: Missing protected settler role required for modification.\\n  error MissingProtectedSettlerRole();\\n  /// @dev Error: Attempting to set an expiry time that is not larger than the previous one.\\n  error ExpiryTimeMustBeLargerThanTheOldOne();\\n  /// @dev Error: The provided name must be registered or is in a grace period.\\n  error NameMustBeRegisteredOrInGracePeriod();\\n\\n  /**\\n   * | Fields\\\\Idc | Modifying Indicator |\\n   * | ---------- | ------------------- |\\n   * | depth      | 0b00000001          |\\n   * | parentId   | 0b00000010          |\\n   * | label      | 0b00000100          |\\n   */\\n  struct ImmutableRecord {\\n    // The level-th of a domain.\\n    uint8 depth;\\n    // The node of parent token. Eg, parent node of vip.duke.ron equals to namehash('duke.ron')\\n    uint256 parentId;\\n    // The label of a domain. Eg, label is vip for domain vip.duke.ron\\n    string label;\\n  }\\n\\n  /**\\n   * | Fields\\\\Idc,Roles | Modifying Indicator | Controller | Protected setter | (Parent) Owner/Spender |\\n   * | ---------------- | ------------------- | ---------- | ---------------- | ---------------------- |\\n   * | resolver         | 0b00001000          | x          |                  | x                      |\\n   * | owner            | 0b00010000          | x          |                  | x                      |\\n   * | expiry           | 0b00100000          | x          |                  |                        |\\n   * | protected        | 0b01000000          |            | x                |                        |\\n   * Note: (Parent) Owner/Spender means parent owner or current owner or current token spender.\\n   */\\n  struct MutableRecord {\\n    // The resolver address.\\n    address resolver;\\n    // The record owner. This field must equal to the owner of token.\\n    address owner;\\n    // Expiry timestamp.\\n    uint64 expiry;\\n    // Flag indicating whether the token is protected or not.\\n    bool protected;\\n  }\\n\\n  struct Record {\\n    ImmutableRecord immut;\\n    MutableRecord mut;\\n  }\\n\\n  /// @dev Emitted when a base URI is updated.\\n  event BaseURIUpdated(address indexed operator, string newURI);\\n  /// @dev Emitted when the grace period for all domain is updated.\\n  event GracePeriodUpdated(address indexed operator, uint64 newGracePeriod);\\n\\n  /**\\n   * @dev Emitted when the record of node is updated.\\n   * @param indicator The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right\\n   * to left) needs to be updated.\\n   * @param record The updated fields.\\n   */\\n  event RecordUpdated(uint256 indexed node, ModifyingIndicator indicator, Record record);\\n\\n  /**\\n   * @dev Returns the controller role.\\n   * @notice Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}.\\n   */\\n  function CONTROLLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the protected setter role.\\n   * @notice Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`.\\n   */\\n  function PROTECTED_SETTLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the reservation role.\\n   * @notice Never expire for token owner has this role.\\n   */\\n  function RESERVATION_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the max expiry value.\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the name hash output of a domain.\\n   */\\n  function namehash(string memory domain) external pure returns (bytes32 node);\\n\\n  /**\\n   * @dev Returns true if the specified name is available for registration.\\n   * Note: Only available after passing the grace period.\\n   */\\n  function available(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the grace period in second(s).\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function getGracePeriod() external view returns (uint64);\\n\\n  /**\\n   * @dev Returns the total minted ids.\\n   * Note: Burning id will not affect `totalMinted`.\\n   */\\n  function totalMinted() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the grace period in second(s).\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function setGracePeriod(uint64) external;\\n\\n  /**\\n   * @dev Sets the base uri.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract owner.\\n   *\\n   */\\n  function setBaseURI(string calldata baseTokenURI) external;\\n\\n  /**\\n   * @dev Mints token for subnode.\\n   *\\n   * Requirements:\\n   * - The token must be available.\\n   * - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   *\\n   * @param parentId The parent node to mint or create subnode.\\n   * @param label The domain label. Eg, label is duke for domain duke.ron.\\n   * @param resolver The resolver address.\\n   * @param owner The token owner.\\n   * @param duration Duration in second(s) to expire. Leave 0 to set as parent.\\n   */\\n  function mint(uint256 parentId, string calldata label, address resolver, address owner, uint64 duration)\\n    external\\n    returns (uint64 expiryTime, uint256 id);\\n\\n  /**\\n   * @dev Returns all record of a domain.\\n   * Reverts if the token is non existent.\\n   */\\n  function getRecord(uint256 id) external view returns (Record memory record);\\n\\n  /**\\n   * @dev Returns the domain name of id.\\n   */\\n  function getDomain(uint256 id) external view returns (string memory domain);\\n\\n  /**\\n   * @dev Returns whether the requester is able to modify the record based on the updated index.\\n   * Note: This method strictly follows the permission of struct {MutableRecord}.\\n   */\\n  function canSetRecord(address requester, uint256 id, ModifyingIndicator indicator)\\n    external\\n    view\\n    returns (bool, bytes4 error);\\n\\n  /**\\n   * @dev Sets record of existing token. Update operation for {Record.mut}.\\n   *\\n   * Requirements:\\n   * - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setRecord(uint256 id, ModifyingIndicator indicator, MutableRecord calldata record) external;\\n\\n  /**\\n   * @dev Reclaims ownership. Update operation for {Record.mut.owner}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   * - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function reclaim(uint256 id, address owner) external;\\n\\n  /**\\n   * @dev Renews token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function renew(uint256 id, uint64 duration) external returns (uint64 expiry);\\n\\n  /**\\n   * @dev Sets expiry time for a token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setExpiry(uint256 id, uint64 expiry) external;\\n\\n  /**\\n   * @dev Sets the protected status of a list of ids. Update operation for {Record.mut.protected}.\\n   *\\n   * Requirements:\\n   * - The method caller must have protected setter role.\\n   *\\n   * Emits events {RecordUpdated}.\\n   */\\n  function bulkSetProtected(uint256[] calldata ids, bool protected) external;\\n}\\n\",\"keccak256\":\"0x98e2e77490d7fd6d87a8e9800223bb2f60a33e7338e2f65f64a3aed4737c035c\",\"license\":\"MIT\"},\"src/interfaces/resolvers/INameResolver.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\ninterface INameResolver {\\n  /// @dev Emitted when a node name is changed.\\n  event NameChanged(bytes32 indexed node, string name);\\n\\n  /**\\n   * @dev Sets the name associated with an INS node, for reverse records.\\n   *\\n   * Requirements:\\n   * - The method caller must be authorized to change user fields of RNS Token `node`. See indicator\\n   * {ModifyingIndicator.USER_FIELDS_INDICATOR}.\\n   *\\n   * Emits an event {NameChanged}.\\n   *\\n   * @param node The node to update.\\n   */\\n  function setName(bytes32 node, string calldata newName) external;\\n\\n  /**\\n   * @dev Returns the name associated with an INS node, for reverse records.\\n   * @param node The INS node to query.\\n   * @return The associated name.\\n   */\\n  function name(bytes32 node) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf3dbbe3238d5f1e491a43dbccbd74755fcd325b5c6aef6b7f0819684bd1f9da3\",\"license\":\"UNLICENSED\"},\"src/libraries/LibRNSDomain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nlibrary LibRNSDomain {\\n  /// @dev Value equals to namehash('ron')\\n  uint256 internal constant RON_ID = 0xba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d688;\\n  /// @dev Value equals to namehash('addr.reverse')\\n  uint256 internal constant ADDR_REVERSE_ID = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n  /**\\n   * @dev Calculate the corresponding id given parentId and label.\\n   */\\n  function toId(uint256 parentId, string memory label) internal pure returns (uint256 id) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(0x0, parentId)\\n      mstore(0x20, keccak256(add(label, 32), mload(label)))\\n      id := keccak256(0x0, 64)\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates the hash of the label.\\n   */\\n  function hashLabel(string memory label) internal pure returns (bytes32 hashed) {\\n    assembly (\\\"memory-safe\\\") {\\n      hashed := keccak256(add(label, 32), mload(label))\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculate the RNS namehash of a str.\\n   */\\n  function namehash(string memory str) internal pure returns (bytes32 hashed) {\\n    // notice: this method is case-sensitive, ensure the string is lowercased before calling this method\\n    assembly (\\\"memory-safe\\\") {\\n      // load str length\\n      let len := mload(str)\\n      // returns bytes32(0x0) if length is zero\\n      if iszero(iszero(len)) {\\n        let hashedLen\\n        // compute pointer to str[0]\\n        let head := add(str, 32)\\n        // compute pointer to str[length - 1]\\n        let tail := add(head, sub(len, 1))\\n        // cleanup dirty bytes if contains any\\n        mstore(0x0, 0)\\n        // loop backwards from `tail` to `head`\\n        for { let i := tail } iszero(lt(i, head)) { i := sub(i, 1) } {\\n          // check if `i` is `head`\\n          let isHead := eq(i, head)\\n          // check if `str[i-1]` is \\\".\\\"\\n          // `0x2e` == bytes1(\\\".\\\")\\n          let isDotNext := eq(shr(248, mload(sub(i, 1))), 0x2e)\\n          if or(isHead, isDotNext) {\\n            // size = distance(length, i) - hashedLength + 1\\n            let size := add(sub(sub(tail, i), hashedLen), 1)\\n            mstore(0x20, keccak256(i, size))\\n            mstore(0x0, keccak256(0x0, 64))\\n            // skip \\\".\\\" thereby + 1\\n            hashedLen := add(hashedLen, add(size, 1))\\n          }\\n        }\\n      }\\n      hashed := mload(0x0)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x715029b2b420c6ec00bc1f939b837acf45d247fde8426089575b0e7b5e84518b\",\"license\":\"MIT\"},\"src/libraries/LibString.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary LibString {\\n  error InvalidStringLength();\\n  error InvalidCharacter(bytes1 char);\\n\\n  /// @dev Lookup constant for method. See more detail at https://eips.ethereum.org/EIPS/eip-181\\n  bytes32 private constant LOOKUP = 0x3031323334353637383961626364656600000000000000000000000000000000;\\n\\n  /**\\n   * @dev Returns the length of a given string\\n   *\\n   * @param s The string to measure the length of\\n   * @return The length of the input string\\n   */\\n  function strlen(string memory s) internal pure returns (uint256) {\\n    unchecked {\\n      uint256 i;\\n      uint256 len;\\n      uint256 bytelength = bytes(s).length;\\n      for (len; i < bytelength; len++) {\\n        bytes1 b = bytes(s)[i];\\n        if (b < 0x80) {\\n          i += 1;\\n        } else if (b < 0xE0) {\\n          i += 2;\\n        } else if (b < 0xF0) {\\n          i += 3;\\n        } else if (b < 0xF8) {\\n          i += 4;\\n        } else if (b < 0xFC) {\\n          i += 5;\\n        } else {\\n          i += 6;\\n        }\\n      }\\n      return len;\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts an address to string.\\n   */\\n  function toString(address addr) internal pure returns (string memory stringifiedAddr) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(stringifiedAddr, 40)\\n      let ptr := add(stringifiedAddr, 0x20)\\n      for { let i := 40 } gt(i, 0) { } {\\n        i := sub(i, 1)\\n        mstore8(add(i, ptr), byte(and(addr, 0xf), LOOKUP))\\n        addr := div(addr, 0x10)\\n\\n        i := sub(i, 1)\\n        mstore8(add(i, ptr), byte(and(addr, 0xf), LOOKUP))\\n        addr := div(addr, 0x10)\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts string to address.\\n   * Reverts if the string length is not equal to 40.\\n   */\\n  function parseAddr(string memory stringifiedAddr) internal pure returns (address) {\\n    unchecked {\\n      if (bytes(stringifiedAddr).length != 40) revert InvalidStringLength();\\n      uint160 addr;\\n      for (uint256 i = 0; i < 40; i += 2) {\\n        addr *= 0x100;\\n        addr += uint160(hexCharToDec(bytes(stringifiedAddr)[i])) * 0x10;\\n        addr += hexCharToDec(bytes(stringifiedAddr)[i + 1]);\\n      }\\n      return address(addr);\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts a hex char (0-9, a-f, A-F) to decimal number.\\n   * Reverts if the char is invalid.\\n   */\\n  function hexCharToDec(bytes1 c) private pure returns (uint8 r) {\\n    unchecked {\\n      if ((bytes1(\\\"a\\\") <= c) && (c <= bytes1(\\\"f\\\"))) r = uint8(c) - 87;\\n      else if ((bytes1(\\\"A\\\") <= c) && (c <= bytes1(\\\"F\\\"))) r = uint8(c) - 55;\\n      else if ((bytes1(\\\"0\\\") <= c) && (c <= bytes1(\\\"9\\\"))) r = uint8(c) - 48;\\n      else revert InvalidCharacter(c);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x9d456b294f0e44ccaabded43a3d96db6270761a167535155a762fe41e968b905\",\"license\":\"MIT\"},\"src/types/ModifyingIndicator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ntype ModifyingIndicator is uint256;\\n\\nusing { hasAny } for ModifyingIndicator global;\\nusing { or as | } for ModifyingIndicator global;\\nusing { and as & } for ModifyingIndicator global;\\nusing { eq as == } for ModifyingIndicator global;\\nusing { not as ~ } for ModifyingIndicator global;\\nusing { xor as ^ } for ModifyingIndicator global;\\nusing { neq as != } for ModifyingIndicator global;\\n\\n/// @dev Indicator for modifying immutable fields: Depth, ParentId, Label. See struct {INSUnified.ImmutableRecord}.\\nModifyingIndicator constant IMMUTABLE_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x7);\\n\\n/// @dev Indicator for modifying user fields: Resolver, Owner. See struct {INSUnified.MutableRecord}.\\nModifyingIndicator constant USER_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x18);\\n\\n/// @dev Indicator when modifying all of the fields in {ModifyingField}.\\nModifyingIndicator constant ALL_FIELDS_INDICATOR = ModifyingIndicator.wrap(type(uint256).max);\\n\\nfunction eq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return ModifyingIndicator.unwrap(self) == ModifyingIndicator.unwrap(other);\\n}\\n\\nfunction neq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return !eq(self, other);\\n}\\n\\nfunction xor(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) ^ ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction not(ModifyingIndicator self) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(~ModifyingIndicator.unwrap(self));\\n}\\n\\nfunction or(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) | ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction and(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) & ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction hasAny(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return self & other != ModifyingIndicator.wrap(0);\\n}\\n\",\"keccak256\":\"0x2e42fbba358c470ff6b57268367d248f0e2fcf8d7142d762688f7aef5efae7ee\",\"license\":\"MIT\"}},\"version\":1}",
  "nonce": 268,
  "numDeployments": 1,
  "storageLayout": {
    "storage": [
      {
        "astId": 50086,
        "contract": "src/RNSReverseRegistrar.sol:RNSReverseRegistrar",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 50089,
        "contract": "src/RNSReverseRegistrar.sol:RNSReverseRegistrar",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 49081,
        "contract": "src/RNSReverseRegistrar.sol:RNSReverseRegistrar",
        "label": "_owner",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 62789,
        "contract": "src/RNSReverseRegistrar.sol:RNSReverseRegistrar",
        "label": "____gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 62793,
        "contract": "src/RNSReverseRegistrar.sol:RNSReverseRegistrar",
        "label": "_rnsUnified",
        "offset": 0,
        "slot": "51",
        "type": "t_contract(INSUnified)67046"
      },
      {
        "astId": 62797,
        "contract": "src/RNSReverseRegistrar.sol:RNSReverseRegistrar",
        "label": "_defaultResolver",
        "offset": 0,
        "slot": "52",
        "type": "t_contract(INameResolver)67747"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(INSUnified)67046": {
        "encoding": "inplace",
        "label": "contract INSUnified",
        "numberOfBytes": "20"
      },
      "t_contract(INameResolver)67747": {
        "encoding": "inplace",
        "label": "contract INameResolver",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1699254558,
  "userdoc": {
    "version": 1,
    "kind": "user",
    "notice": "Customized version of ReverseRegistrar: https://github.com/ensdomains/ens-contracts/blob/0c75ba23fae76165d51c9c80d76d22261e06179d/contracts/reverseRegistrar/ReverseRegistrar.sol"
  }
}