{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyBidding",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractBidderIsForbidden",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EventIsNotCreatedOrAlreadyStarted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidArrayLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidEventRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameNotReserved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOneBidded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotYetEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAssignment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QueryIsNotInPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RatioIsTooLarge",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct EventRange",
          "name": "range",
          "type": "tuple"
        }
      ],
      "name": "AuctionEventSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "name": "BidGapRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousBidder",
          "type": "address"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "startingPrices",
          "type": "uint256[]"
        }
      ],
      "name": "LabelsListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_EXPIRY_DURATION",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_AUCTION_DOMAIN_EXPIRY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_EXPIRY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "bulkClaimBidNames",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "claimedAts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "labels",
          "type": "string[]"
        }
      ],
      "name": "bulkRegister",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct EventRange",
          "name": "range",
          "type": "tuple"
        }
      ],
      "name": "createAuctionEvent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAuction",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "auctionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "startingPrice",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "bidder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimedAt",
                  "type": "uint256"
                }
              ],
              "internalType": "struct INSAuction.Bid",
              "name": "bid",
              "type": "tuple"
            }
          ],
          "internalType": "struct INSAuction.DomainAuction",
          "name": "auction",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "beatPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        }
      ],
      "name": "getAuctionEvent",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct EventRange",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBidGapRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRNSUnified",
      "outputs": [
        {
          "internalType": "contract INSUnified",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        },
        {
          "internalType": "contract INSUnified",
          "name": "rnsUnified",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "treasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidGapRatio",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "startingPrices",
          "type": "uint256[]"
        }
      ],
      "name": "listNamesForAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "reserved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "auctionId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endedAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct EventRange",
          "name": "range",
          "type": "tuple"
        }
      ],
      "name": "setAuctionEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ratio",
          "type": "uint256"
        }
      ],
      "name": "setBidGapRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "address": "0x20143137cB90c8663e575BF509D8f370cd711cB8",
  "args": "0x",
  "ast": {
    "absolutePath": "src/RNSAuction.sol",
    "id": 61578,
    "exportedSymbols": {
      "AccessControlEnumerable": [
        48975
      ],
      "BitMaps": [
        54112
      ],
      "EventRange": [
        67966
      ],
      "INSAuction": [
        66400
      ],
      "INSUnified": [
        67046
      ],
      "Initializable": [
        50248
      ],
      "LibEventRange": [
        68037
      ],
      "LibRNSDomain": [
        68113
      ],
      "LibSafeRange": [
        68657
      ],
      "Math": [
        53557
      ],
      "RNSAuction": [
        61577
      ],
      "RONTransferHelper": [
        69515
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9957:94",
    "nodes": [
      {
        "id": 60581,
        "nodeType": "PragmaDirective",
        "src": "32:24:94",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 60583,
        "nodeType": "ImportDirective",
        "src": "58:86:94",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 50249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60582,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50248,
              "src": "67:13:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60585,
        "nodeType": "ImportDirective",
        "src": "145:101:94",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 48976,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60584,
              "name": "AccessControlEnumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48975,
              "src": "154:23:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60587,
        "nodeType": "ImportDirective",
        "src": "247:67:94",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 53558,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60586,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53557,
              "src": "256:4:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60589,
        "nodeType": "ImportDirective",
        "src": "315:76:94",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol",
        "file": "@openzeppelin/contracts/utils/structs/BitMaps.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 54113,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60588,
              "name": "BitMaps",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54112,
              "src": "324:7:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60592,
        "nodeType": "ImportDirective",
        "src": "392:69:94",
        "nodes": [],
        "absolutePath": "src/interfaces/INSAuction.sol",
        "file": "./interfaces/INSAuction.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 66401,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60590,
              "name": "INSUnified",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67046,
              "src": "401:10:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 60591,
              "name": "INSAuction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66400,
              "src": "413:10:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60594,
        "nodeType": "ImportDirective",
        "src": "462:65:94",
        "nodes": [],
        "absolutePath": "src/libraries/math/LibSafeRange.sol",
        "file": "./libraries/math/LibSafeRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 68658,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60593,
              "name": "LibSafeRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68657,
              "src": "471:12:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60596,
        "nodeType": "ImportDirective",
        "src": "528:60:94",
        "nodes": [],
        "absolutePath": "src/libraries/LibRNSDomain.sol",
        "file": "./libraries/LibRNSDomain.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 68114,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60595,
              "name": "LibRNSDomain",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68113,
              "src": "537:12:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60599,
        "nodeType": "ImportDirective",
        "src": "589:74:94",
        "nodes": [],
        "absolutePath": "src/libraries/LibEventRange.sol",
        "file": "./libraries/LibEventRange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 68038,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60597,
              "name": "LibEventRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68037,
              "src": "598:13:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 60598,
              "name": "EventRange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67966,
              "src": "613:10:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60601,
        "nodeType": "ImportDirective",
        "src": "664:80:94",
        "nodes": [],
        "absolutePath": "src/libraries/transfers/RONTransferHelper.sol",
        "file": "./libraries/transfers/RONTransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61578,
        "sourceUnit": 69516,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60600,
              "name": "RONTransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69515,
              "src": "673:17:94",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61577,
        "nodeType": "ContractDefinition",
        "src": "746:9242:94",
        "nodes": [
          {
            "id": 60610,
            "nodeType": "UsingForDirective",
            "src": "824:31:94",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 60608,
              "name": "LibSafeRange",
              "nameLocations": [
                "830:12:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68657,
              "src": "830:12:94"
            },
            "typeName": {
              "id": 60609,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "847:7:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 60614,
            "nodeType": "UsingForDirective",
            "src": "858:33:94",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 60611,
              "name": "BitMaps",
              "nameLocations": [
                "864:7:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54112,
              "src": "864:7:94"
            },
            "typeName": {
              "id": 60613,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60612,
                "name": "BitMaps.BitMap",
                "nameLocations": [
                  "876:7:94",
                  "884:6:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53982,
                "src": "876:14:94"
              },
              "referencedDeclaration": 53982,
              "src": "876:14:94",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$53982_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            }
          },
          {
            "id": 60618,
            "nodeType": "UsingForDirective",
            "src": "894:35:94",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 60615,
              "name": "LibEventRange",
              "nameLocations": [
                "900:13:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68037,
              "src": "900:13:94"
            },
            "typeName": {
              "id": 60617,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60616,
                "name": "EventRange",
                "nameLocations": [
                  "918:10:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67966,
                "src": "918:10:94"
              },
              "referencedDeclaration": 67966,
              "src": "918:10:94",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                "typeString": "struct EventRange"
              }
            }
          },
          {
            "id": 60626,
            "nodeType": "VariableDeclaration",
            "src": "962:52:94",
            "nodes": [],
            "baseFunctions": [
              66260
            ],
            "constant": true,
            "documentation": {
              "id": 60619,
              "nodeType": "StructuredDocumentation",
              "src": "933:26:94",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "b9671690",
            "mutability": "constant",
            "name": "MAX_EXPIRY",
            "nameLocation": "985:10:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 60620,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "962:6:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 60623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1003:6:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint64_$",
                      "typeString": "type(uint64)"
                    },
                    "typeName": {
                      "id": 60622,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "1003:6:94",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint64_$",
                      "typeString": "type(uint64)"
                    }
                  ],
                  "id": 60621,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "998:4:94",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 60624,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "998:12:94",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint64",
                  "typeString": "type(uint64)"
                }
              },
              "id": 60625,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberLocation": "1011:3:94",
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "998:16:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60630,
            "nodeType": "VariableDeclaration",
            "src": "1047:47:94",
            "nodes": [],
            "baseFunctions": [
              66278
            ],
            "constant": true,
            "documentation": {
              "id": 60627,
              "nodeType": "StructuredDocumentation",
              "src": "1018:26:94",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "4c255c97",
            "mutability": "constant",
            "name": "MAX_PERCENTAGE",
            "nameLocation": "1071:14:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1047:7:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130305f3030",
              "id": 60629,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1088:6:94",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "100_00"
            },
            "visibility": "public"
          },
          {
            "id": 60634,
            "nodeType": "VariableDeclaration",
            "src": "1127:56:94",
            "nodes": [],
            "baseFunctions": [
              66284
            ],
            "constant": true,
            "documentation": {
              "id": 60631,
              "nodeType": "StructuredDocumentation",
              "src": "1098:26:94",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "19a3ee40",
            "mutability": "constant",
            "name": "DOMAIN_EXPIRY_DURATION",
            "nameLocation": "1150:22:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 60632,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1127:6:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "333635",
              "id": 60633,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1175:8:94",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "365"
            },
            "visibility": "public"
          },
          {
            "id": 60640,
            "nodeType": "VariableDeclaration",
            "src": "1216:63:94",
            "nodes": [],
            "baseFunctions": [
              66266
            ],
            "constant": true,
            "documentation": {
              "id": 60635,
              "nodeType": "StructuredDocumentation",
              "src": "1187:26:94",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "0afe1bb3",
            "mutability": "constant",
            "name": "MAX_AUCTION_DOMAIN_EXPIRY",
            "nameLocation": "1239:25:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 60636,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1216:6:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_94608000_by_1",
                "typeString": "int_const 94608000"
              },
              "id": 60639,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "333635",
                "id": 60637,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1267:8:94",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_31536000_by_1",
                  "typeString": "int_const 31536000"
                },
                "value": "365"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "33",
                "id": 60638,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1278:1:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "src": "1267:12:94",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_94608000_by_1",
                "typeString": "int_const 94608000"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60646,
            "nodeType": "VariableDeclaration",
            "src": "1312:66:94",
            "nodes": [],
            "baseFunctions": [
              66272
            ],
            "constant": true,
            "documentation": {
              "id": 60641,
              "nodeType": "StructuredDocumentation",
              "src": "1283:26:94",
              "text": "@inheritdoc INSAuction"
            },
            "functionSelector": "f5b541a6",
            "mutability": "constant",
            "name": "OPERATOR_ROLE",
            "nameLocation": "1336:13:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 60642,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1312:7:94",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4f50455241544f525f524f4c45",
                  "id": 60644,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1362:15:94",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  },
                  "value": "OPERATOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
                    "typeString": "literal_string \"OPERATOR_ROLE\""
                  }
                ],
                "id": 60643,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1352:9:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 60645,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1352:26:94",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60651,
            "nodeType": "VariableDeclaration",
            "src": "1418:27:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60647,
              "nodeType": "StructuredDocumentation",
              "src": "1383:32:94",
              "text": "@dev Gap for upgradeability."
            },
            "mutability": "mutable",
            "name": "____gap",
            "nameLocation": "1438:7:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 60648,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1418:7:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 60650,
              "length": {
                "hexValue": "3530",
                "id": 60649,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1426:2:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1418:11:94",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 60655,
            "nodeType": "VariableDeclaration",
            "src": "1485:31:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60652,
              "nodeType": "StructuredDocumentation",
              "src": "1449:33:94",
              "text": "@dev The RNSUnified contract."
            },
            "mutability": "mutable",
            "name": "_rnsUnified",
            "nameLocation": "1505:11:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INSUnified_$67046",
              "typeString": "contract INSUnified"
            },
            "typeName": {
              "id": 60654,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60653,
                "name": "INSUnified",
                "nameLocations": [
                  "1485:10:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67046,
                "src": "1485:10:94"
              },
              "referencedDeclaration": 67046,
              "src": "1485:10:94",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INSUnified_$67046",
                "typeString": "contract INSUnified"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60661,
            "nodeType": "VariableDeclaration",
            "src": "1570:63:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60656,
              "nodeType": "StructuredDocumentation",
              "src": "1520:47:94",
              "text": "@dev Mapping from auction Id => event range"
            },
            "mutability": "mutable",
            "name": "_auctionRange",
            "nameLocation": "1620:13:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
              "typeString": "mapping(bytes32 => struct EventRange)"
            },
            "typeName": {
              "id": 60660,
              "keyName": "auctionId",
              "keyNameLocation": "1586:9:94",
              "keyType": {
                "id": 60657,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1578:7:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1570:40:94",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                "typeString": "mapping(bytes32 => struct EventRange)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 60659,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60658,
                  "name": "EventRange",
                  "nameLocations": [
                    "1599:10:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67966,
                  "src": "1599:10:94"
                },
                "referencedDeclaration": 67966,
                "src": "1599:10:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                  "typeString": "struct EventRange"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60667,
            "nodeType": "VariableDeclaration",
            "src": "1699:60:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60662,
              "nodeType": "StructuredDocumentation",
              "src": "1637:59:94",
              "text": "@dev Mapping from id of domain names => auction detail."
            },
            "mutability": "mutable",
            "name": "_domainAuction",
            "nameLocation": "1745:14:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
              "typeString": "mapping(uint256 => struct INSAuction.DomainAuction)"
            },
            "typeName": {
              "id": 60666,
              "keyName": "id",
              "keyNameLocation": "1715:2:94",
              "keyType": {
                "id": 60663,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1707:7:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1699:36:94",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                "typeString": "mapping(uint256 => struct INSAuction.DomainAuction)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 60665,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60664,
                  "name": "DomainAuction",
                  "nameLocations": [
                    "1721:13:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66210,
                  "src": "1721:13:94"
                },
                "referencedDeclaration": 66210,
                "src": "1721:13:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                  "typeString": "struct INSAuction.DomainAuction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60670,
            "nodeType": "VariableDeclaration",
            "src": "1789:34:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60668,
              "nodeType": "StructuredDocumentation",
              "src": "1764:22:94",
              "text": "@dev The treasury."
            },
            "mutability": "mutable",
            "name": "_treasury",
            "nameLocation": "1814:9:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 60669,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1789:15:94",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60673,
            "nodeType": "VariableDeclaration",
            "src": "1892:29:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60671,
              "nodeType": "StructuredDocumentation",
              "src": "1827:62:94",
              "text": "@dev The gap ratio between 2 bids with the starting price."
            },
            "mutability": "mutable",
            "name": "_bidGapRatio",
            "nameLocation": "1909:12:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60672,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1892:7:94",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60677,
            "nodeType": "VariableDeclaration",
            "src": "1976:33:94",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 60674,
              "nodeType": "StructuredDocumentation",
              "src": "1925:48:94",
              "text": "@dev Mapping from id => bool reserved status"
            },
            "mutability": "mutable",
            "name": "_reserved",
            "nameLocation": "2000:9:94",
            "scope": 61577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_BitMap_$53982_storage",
              "typeString": "struct BitMaps.BitMap"
            },
            "typeName": {
              "id": 60676,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60675,
                "name": "BitMaps.BitMap",
                "nameLocations": [
                  "1976:7:94",
                  "1984:6:94"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53982,
                "src": "1976:14:94"
              },
              "referencedDeclaration": 53982,
              "src": "1976:14:94",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_BitMap_$53982_storage_ptr",
                "typeString": "struct BitMaps.BitMap"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 60687,
            "nodeType": "ModifierDefinition",
            "src": "2014:90:94",
            "nodes": [],
            "body": {
              "id": 60686,
              "nodeType": "Block",
              "src": "2057:47:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60682,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60679,
                        "src": "2082:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 60681,
                      "name": "_requireNotStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61576,
                      "src": "2063:18:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) view"
                      }
                    },
                    "id": 60683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:29:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60684,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:29:94"
                },
                {
                  "id": 60685,
                  "nodeType": "PlaceholderStatement",
                  "src": "2098:1:94"
                }
              ]
            },
            "name": "whenNotStarted",
            "nameLocation": "2023:14:94",
            "parameters": {
              "id": 60680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60679,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "2046:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60687,
                  "src": "2038:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60678,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2038:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:19:94"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60698,
            "nodeType": "ModifierDefinition",
            "src": "2108:104:94",
            "nodes": [],
            "body": {
              "id": 60697,
              "nodeType": "Block",
              "src": "2164:48:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60693,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60690,
                        "src": "2194:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      ],
                      "id": 60692,
                      "name": "_requireValidEventRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61559,
                      "src": "2170:23:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$67966_calldata_ptr_$returns$__$",
                        "typeString": "function (struct EventRange calldata) view"
                      }
                    },
                    "id": 60694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:30:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60695,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:30:94"
                },
                {
                  "id": 60696,
                  "nodeType": "PlaceholderStatement",
                  "src": "2206:1:94"
                }
              ]
            },
            "name": "onlyValidEventRange",
            "nameLocation": "2117:19:94",
            "parameters": {
              "id": 60691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60690,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "2157:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60698,
                  "src": "2137:25:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 60689,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60688,
                      "name": "EventRange",
                      "nameLocations": [
                        "2137:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67966,
                      "src": "2137:10:94"
                    },
                    "referencedDeclaration": 67966,
                    "src": "2137:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2136:27:94"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60705,
            "nodeType": "FunctionDefinition",
            "src": "2216:55:94",
            "nodes": [],
            "body": {
              "id": 60704,
              "nodeType": "Block",
              "src": "2238:33:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60701,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50229,
                      "src": "2244:20:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 60702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:22:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60703,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:22:94"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 60699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:2:94"
            },
            "returnParameters": {
              "id": 60700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2238:0:94"
            },
            "scope": 61577,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60768,
            "nodeType": "FunctionDefinition",
            "src": "2275:531:94",
            "nodes": [],
            "body": {
              "id": 60767,
              "nodeType": "Block",
              "src": "2455:351:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60723,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60715,
                        "src": "2474:8:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 60722,
                      "name": "_setTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61470,
                      "src": "2461:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 60724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2461:22:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60725,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:22:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60727,
                        "name": "bidGapRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60717,
                        "src": "2505:11:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60726,
                      "name": "_setBidGapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61492,
                      "src": "2489:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 60728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2489:28:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60729,
                  "nodeType": "ExpressionStatement",
                  "src": "2489:28:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60731,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48562,
                        "src": "2534:18:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60732,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60707,
                        "src": "2554:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 60730,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48758,
                      "src": "2523:10:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 60733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2523:37:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60734,
                  "nodeType": "ExpressionStatement",
                  "src": "2523:37:94"
                },
                {
                  "assignments": [
                    60736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60736,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2575:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 60767,
                      "src": "2567:14:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2567:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60739,
                  "initialValue": {
                    "expression": {
                      "id": 60737,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60710,
                      "src": "2584:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "id": 60738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2594:6:94",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2584:16:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2567:33:94"
                },
                {
                  "assignments": [
                    60741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60741,
                      "mutability": "mutable",
                      "name": "operatorRole",
                      "nameLocation": "2614:12:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 60767,
                      "src": "2606:20:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60740,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60743,
                  "initialValue": {
                    "id": 60742,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60646,
                    "src": "2629:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2606:36:94"
                },
                {
                  "body": {
                    "id": 60761,
                    "nodeType": "Block",
                    "src": "2678:93:94",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60751,
                              "name": "operatorRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60741,
                              "src": "2697:12:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 60752,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60710,
                                "src": "2711:9:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 60754,
                              "indexExpression": {
                                "id": 60753,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60745,
                                "src": "2721:1:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2711:12:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60750,
                            "name": "_setupRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48758,
                            "src": "2686:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 60755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2686:38:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60756,
                        "nodeType": "ExpressionStatement",
                        "src": "2686:38:94"
                      },
                      {
                        "id": 60760,
                        "nodeType": "UncheckedBlock",
                        "src": "2733:32:94",
                        "statements": [
                          {
                            "expression": {
                              "id": 60758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2753:3:94",
                              "subExpression": {
                                "id": 60757,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60745,
                                "src": "2755:1:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60759,
                            "nodeType": "ExpressionStatement",
                            "src": "2753:3:94"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60747,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60745,
                      "src": "2665:1:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60748,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60736,
                      "src": "2669:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2665:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60762,
                  "initializationExpression": {
                    "assignments": [
                      60745
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60745,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2662:1:94",
                        "nodeType": "VariableDeclaration",
                        "scope": 60762,
                        "src": "2654:9:94",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60744,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2654:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60746,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2654:9:94"
                  },
                  "nodeType": "ForStatement",
                  "src": "2649:122:94"
                },
                {
                  "expression": {
                    "id": 60765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60763,
                      "name": "_rnsUnified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60655,
                      "src": "2777:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60764,
                      "name": "rnsUnified",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60713,
                      "src": "2791:10:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      }
                    },
                    "src": "2777:24:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "id": 60766,
                  "nodeType": "ExpressionStatement",
                  "src": "2777:24:94"
                }
              ]
            },
            "functionSelector": "ec14cf37",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60719,
                  "name": "initializer",
                  "nameLocations": [
                    "2443:11:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50150,
                  "src": "2443:11:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "2443:11:94"
              }
            ],
            "name": "initialize",
            "nameLocation": "2284:10:94",
            "parameters": {
              "id": 60718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60707,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "2308:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60768,
                  "src": "2300:13:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60710,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "2338:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60768,
                  "src": "2319:28:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60708,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2319:7:94",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 60709,
                    "nodeType": "ArrayTypeName",
                    "src": "2319:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60713,
                  "mutability": "mutable",
                  "name": "rnsUnified",
                  "nameLocation": "2364:10:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60768,
                  "src": "2353:21:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSUnified_$67046",
                    "typeString": "contract INSUnified"
                  },
                  "typeName": {
                    "id": 60712,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60711,
                      "name": "INSUnified",
                      "nameLocations": [
                        "2353:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67046,
                      "src": "2353:10:94"
                    },
                    "referencedDeclaration": 67046,
                    "src": "2353:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60715,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nameLocation": "2396:8:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60768,
                  "src": "2380:24:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 60714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:15:94",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60717,
                  "mutability": "mutable",
                  "name": "bidGapRatio",
                  "nameLocation": "2418:11:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60768,
                  "src": "2410:19:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2410:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:139:94"
            },
            "returnParameters": {
              "id": 60721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2455:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60858,
            "nodeType": "FunctionDefinition",
            "src": "2850:598:94",
            "nodes": [],
            "body": {
              "id": 60857,
              "nodeType": "Block",
              "src": "2962:486:94",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60782
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60782,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2976:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 60857,
                      "src": "2968:14:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60781,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60785,
                  "initialValue": {
                    "expression": {
                      "id": 60783,
                      "name": "labels",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60772,
                      "src": "2985:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "string calldata[] calldata"
                      }
                    },
                    "id": 60784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2992:6:94",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2985:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:30:94"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60786,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60782,
                      "src": "3008:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3018:1:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3008:11:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60792,
                  "nodeType": "IfStatement",
                  "src": "3004:44:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 60789,
                        "name": "InvalidArrayLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66189,
                        "src": "3028:18:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 60790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3028:20:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 60791,
                    "nodeType": "RevertStatement",
                    "src": "3021:27:94"
                  }
                },
                {
                  "expression": {
                    "id": 60799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60793,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60779,
                      "src": "3054:3:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60797,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60782,
                          "src": "3074:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 60796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3060:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 60794,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3064:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 60795,
                          "nodeType": "ArrayTypeName",
                          "src": "3064:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 60798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3060:21:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3054:27:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 60800,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:27:94"
                },
                {
                  "assignments": [
                    60803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60803,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "3098:10:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 60857,
                      "src": "3087:21:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 60802,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60801,
                          "name": "INSUnified",
                          "nameLocations": [
                            "3087:10:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67046,
                          "src": "3087:10:94"
                        },
                        "referencedDeclaration": 67046,
                        "src": "3087:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60805,
                  "initialValue": {
                    "id": 60804,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60655,
                    "src": "3111:11:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:35:94"
                },
                {
                  "assignments": [
                    60807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60807,
                      "mutability": "mutable",
                      "name": "parentId",
                      "nameLocation": "3136:8:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 60857,
                      "src": "3128:16:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60806,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3128:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60810,
                  "initialValue": {
                    "expression": {
                      "id": 60808,
                      "name": "LibRNSDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68113,
                      "src": "3147:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LibRNSDomain_$68113_$",
                        "typeString": "type(library LibRNSDomain)"
                      }
                    },
                    "id": 60809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3160:6:94",
                    "memberName": "RON_ID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68076,
                    "src": "3147:19:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3128:38:94"
                },
                {
                  "assignments": [
                    60812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60812,
                      "mutability": "mutable",
                      "name": "domainExpiryDuration",
                      "nameLocation": "3179:20:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 60857,
                      "src": "3172:27:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 60811,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3172:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60814,
                  "initialValue": {
                    "id": 60813,
                    "name": "DOMAIN_EXPIRY_DURATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60634,
                    "src": "3202:22:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3172:52:94"
                },
                {
                  "body": {
                    "id": 60855,
                    "nodeType": "Block",
                    "src": "3260:184:94",
                    "statements": [
                      {
                        "expression": {
                          "id": 60841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              {
                                "baseExpression": {
                                  "id": 60821,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60779,
                                  "src": "3271:3:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 60823,
                                "indexExpression": {
                                  "id": 60822,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60816,
                                  "src": "3275:1:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "3271:6:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 60824,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3268:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$_t_uint256_$",
                              "typeString": "tuple(,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 60827,
                                "name": "parentId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60807,
                                "src": "3297:8:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 60828,
                                  "name": "labels",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60772,
                                  "src": "3307:6:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "string calldata[] calldata"
                                  }
                                },
                                "id": 60830,
                                "indexExpression": {
                                  "id": 60829,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60816,
                                  "src": "3314:1:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3307:9:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 60833,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3326:3:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 60832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3318:7:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 60831,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3318:7:94",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 60834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3318:12:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 60837,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3340:4:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_RNSAuction_$61577",
                                      "typeString": "contract RNSAuction"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_RNSAuction_$61577",
                                      "typeString": "contract RNSAuction"
                                    }
                                  ],
                                  "id": 60836,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3332:7:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 60835,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3332:7:94",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 60838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3332:13:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 60839,
                                "name": "domainExpiryDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60812,
                                "src": "3347:20:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "expression": {
                                "id": 60825,
                                "name": "rnsUnified",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60803,
                                "src": "3281:10:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_INSUnified_$67046",
                                  "typeString": "contract INSUnified"
                                }
                              },
                              "id": 60826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3292:4:94",
                              "memberName": "mint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66966,
                              "src": "3281:15:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_uint64_$returns$_t_uint64_$_t_uint256_$",
                                "typeString": "function (uint256,string memory,address,address,uint64) external returns (uint64,uint256)"
                              }
                            },
                            "id": 60840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3281:87:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint64_$_t_uint256_$",
                              "typeString": "tuple(uint64,uint256)"
                            }
                          },
                          "src": "3268:100:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60842,
                        "nodeType": "ExpressionStatement",
                        "src": "3268:100:94"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 60846,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60779,
                                "src": "3390:3:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 60848,
                              "indexExpression": {
                                "id": 60847,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60816,
                                "src": "3394:1:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3390:6:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 60843,
                              "name": "_reserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60677,
                              "src": "3376:9:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BitMap_$53982_storage",
                                "typeString": "struct BitMaps.BitMap storage ref"
                              }
                            },
                            "id": 60845,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3386:3:94",
                            "memberName": "set",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54077,
                            "src": "3376:13:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BitMap_$53982_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_BitMap_$53982_storage_ptr_$",
                              "typeString": "function (struct BitMaps.BitMap storage pointer,uint256)"
                            }
                          },
                          "id": 60849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3376:21:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60850,
                        "nodeType": "ExpressionStatement",
                        "src": "3376:21:94"
                      },
                      {
                        "id": 60854,
                        "nodeType": "UncheckedBlock",
                        "src": "3406:32:94",
                        "statements": [
                          {
                            "expression": {
                              "id": 60852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "3426:3:94",
                              "subExpression": {
                                "id": 60851,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60816,
                                "src": "3428:1:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 60853,
                            "nodeType": "ExpressionStatement",
                            "src": "3426:3:94"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60818,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60816,
                      "src": "3247:1:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60819,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60782,
                      "src": "3251:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60856,
                  "initializationExpression": {
                    "assignments": [
                      60816
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60816,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3244:1:94",
                        "nodeType": "VariableDeclaration",
                        "scope": 60856,
                        "src": "3236:9:94",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60815,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3236:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60817,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3236:9:94"
                  },
                  "nodeType": "ForStatement",
                  "src": "3231:213:94"
                }
              ]
            },
            "baseFunctions": [
              66294
            ],
            "documentation": {
              "id": 60769,
              "nodeType": "StructuredDocumentation",
              "src": "2810:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "791a26b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60775,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60646,
                    "src": "2916:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60776,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60774,
                  "name": "onlyRole",
                  "nameLocations": [
                    "2907:8:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48573,
                  "src": "2907:8:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "2907:23:94"
              }
            ],
            "name": "bulkRegister",
            "nameLocation": "2859:12:94",
            "parameters": {
              "id": 60773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60772,
                  "mutability": "mutable",
                  "name": "labels",
                  "nameLocation": "2890:6:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60858,
                  "src": "2872:24:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60770,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2872:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 60771,
                    "nodeType": "ArrayTypeName",
                    "src": "2872:8:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2871:26:94"
            },
            "returnParameters": {
              "id": 60780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60779,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2957:3:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60858,
                  "src": "2940:20:94",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60777,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2940:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60778,
                    "nodeType": "ArrayTypeName",
                    "src": "2940:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2939:22:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60872,
            "nodeType": "FunctionDefinition",
            "src": "3492:92:94",
            "nodes": [],
            "body": {
              "id": 60871,
              "nodeType": "Block",
              "src": "3549:35:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60868,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60861,
                        "src": "3576:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 60866,
                        "name": "_reserved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60677,
                        "src": "3562:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BitMap_$53982_storage",
                          "typeString": "struct BitMaps.BitMap storage ref"
                        }
                      },
                      "id": 60867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3572:3:94",
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54018,
                      "src": "3562:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_BitMap_$53982_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_BitMap_$53982_storage_ptr_$",
                        "typeString": "function (struct BitMaps.BitMap storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 60869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:17:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 60865,
                  "id": 60870,
                  "nodeType": "Return",
                  "src": "3555:24:94"
                }
              ]
            },
            "baseFunctions": [
              66302
            ],
            "documentation": {
              "id": 60859,
              "nodeType": "StructuredDocumentation",
              "src": "3452:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "53f9195e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserved",
            "nameLocation": "3501:8:94",
            "parameters": {
              "id": 60862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60861,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3518:2:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60872,
                  "src": "3510:10:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:12:94"
            },
            "returnParameters": {
              "id": 60865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60872,
                  "src": "3543:4:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60863,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3543:4:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3542:6:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60910,
            "nodeType": "FunctionDefinition",
            "src": "3628:313:94",
            "nodes": [],
            "body": {
              "id": 60909,
              "nodeType": "Block",
              "src": "3794:147:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60887,
                      "name": "auctionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60885,
                      "src": "3800:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 60891,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52306,
                                "src": "3833:10:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 60892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3833:12:94",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60893,
                              "name": "range",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60876,
                              "src": "3847:5:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                                "typeString": "struct EventRange calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                                "typeString": "struct EventRange calldata"
                              }
                            ],
                            "expression": {
                              "id": 60889,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3822:3:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 60890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3826:6:94",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "3822:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 60894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3822:31:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 60888,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "3812:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 60895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3812:42:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3800:54:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 60897,
                  "nodeType": "ExpressionStatement",
                  "src": "3800:54:94"
                },
                {
                  "expression": {
                    "id": 60902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60898,
                        "name": "_auctionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60661,
                        "src": "3860:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                          "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                        }
                      },
                      "id": 60900,
                      "indexExpression": {
                        "id": 60899,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60885,
                        "src": "3874:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3860:24:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                        "typeString": "struct EventRange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60901,
                      "name": "range",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60876,
                      "src": "3887:5:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                        "typeString": "struct EventRange calldata"
                      }
                    },
                    "src": "3860:32:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "id": 60903,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:32:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 60905,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60885,
                        "src": "3919:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60906,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60876,
                        "src": "3930:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      ],
                      "id": 60904,
                      "name": "AuctionEventSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66218,
                      "src": "3903:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_EventRange_$67966_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct EventRange memory)"
                      }
                    },
                    "id": 60907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3903:33:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60908,
                  "nodeType": "EmitStatement",
                  "src": "3898:38:94"
                }
              ]
            },
            "baseFunctions": [
              66311
            ],
            "documentation": {
              "id": 60873,
              "nodeType": "StructuredDocumentation",
              "src": "3588:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "db5e1ec6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60879,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48562,
                    "src": "3709:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60878,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3700:8:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48573,
                  "src": "3700:8:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "3700:28:94"
              },
              {
                "arguments": [
                  {
                    "id": 60882,
                    "name": "range",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60876,
                    "src": "3753:5:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                      "typeString": "struct EventRange calldata"
                    }
                  }
                ],
                "id": 60883,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60881,
                  "name": "onlyValidEventRange",
                  "nameLocations": [
                    "3733:19:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60698,
                  "src": "3733:19:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "3733:26:94"
              }
            ],
            "name": "createAuctionEvent",
            "nameLocation": "3637:18:94",
            "parameters": {
              "id": 60877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60876,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "3676:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60910,
                  "src": "3656:25:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 60875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60874,
                      "name": "EventRange",
                      "nameLocations": [
                        "3656:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67966,
                      "src": "3656:10:94"
                    },
                    "referencedDeclaration": 67966,
                    "src": "3656:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3655:27:94"
            },
            "returnParameters": {
              "id": 60886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60885,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "3781:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60910,
                  "src": "3773:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60884,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3772:19:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60940,
            "nodeType": "FunctionDefinition",
            "src": "3985:267:94",
            "nodes": [],
            "body": {
              "id": 60939,
              "nodeType": "Block",
              "src": "4165:87:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 60932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60928,
                        "name": "_auctionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60661,
                        "src": "4171:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                          "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                        }
                      },
                      "id": 60930,
                      "indexExpression": {
                        "id": 60929,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60913,
                        "src": "4185:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4171:24:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                        "typeString": "struct EventRange storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60931,
                      "name": "range",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60916,
                      "src": "4198:5:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                        "typeString": "struct EventRange calldata"
                      }
                    },
                    "src": "4171:32:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "id": 60933,
                  "nodeType": "ExpressionStatement",
                  "src": "4171:32:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 60935,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60913,
                        "src": "4230:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 60936,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60916,
                        "src": "4241:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                          "typeString": "struct EventRange calldata"
                        }
                      ],
                      "id": 60934,
                      "name": "AuctionEventSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66218,
                      "src": "4214:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_EventRange_$67966_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct EventRange memory)"
                      }
                    },
                    "id": 60937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:33:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60938,
                  "nodeType": "EmitStatement",
                  "src": "4209:38:94"
                }
              ]
            },
            "baseFunctions": [
              66320
            ],
            "documentation": {
              "id": 60911,
              "nodeType": "StructuredDocumentation",
              "src": "3945:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "81bec1b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60919,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48562,
                    "src": "4082:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60918,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4073:8:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48573,
                  "src": "4073:8:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "4073:28:94"
              },
              {
                "arguments": [
                  {
                    "id": 60922,
                    "name": "range",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60916,
                    "src": "4126:5:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                      "typeString": "struct EventRange calldata"
                    }
                  }
                ],
                "id": 60923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60921,
                  "name": "onlyValidEventRange",
                  "nameLocations": [
                    "4106:19:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60698,
                  "src": "4106:19:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "4106:26:94"
              },
              {
                "arguments": [
                  {
                    "id": 60925,
                    "name": "auctionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60913,
                    "src": "4152:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60924,
                  "name": "whenNotStarted",
                  "nameLocations": [
                    "4137:14:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60687,
                  "src": "4137:14:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "4137:25:94"
              }
            ],
            "name": "setAuctionEvent",
            "nameLocation": "3994:15:94",
            "parameters": {
              "id": 60917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60913,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "4018:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60940,
                  "src": "4010:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60912,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60916,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "4049:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60940,
                  "src": "4029:25:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 60915,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60914,
                      "name": "EventRange",
                      "nameLocations": [
                        "4029:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67966,
                      "src": "4029:10:94"
                    },
                    "referencedDeclaration": 67966,
                    "src": "4029:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4009:46:94"
            },
            "returnParameters": {
              "id": 60927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60954,
            "nodeType": "FunctionDefinition",
            "src": "4296:126:94",
            "nodes": [],
            "body": {
              "id": 60953,
              "nodeType": "Block",
              "src": "4380:42:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 60949,
                      "name": "_auctionRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60661,
                      "src": "4393:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                        "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                      }
                    },
                    "id": 60951,
                    "indexExpression": {
                      "id": 60950,
                      "name": "auctionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60943,
                      "src": "4407:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4393:24:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "functionReturnParameters": 60948,
                  "id": 60952,
                  "nodeType": "Return",
                  "src": "4386:31:94"
                }
              ]
            },
            "baseFunctions": [
              66329
            ],
            "documentation": {
              "id": 60941,
              "nodeType": "StructuredDocumentation",
              "src": "4256:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "15a29162",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuctionEvent",
            "nameLocation": "4305:15:94",
            "parameters": {
              "id": 60944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60943,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "4329:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "4321:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4321:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4320:19:94"
            },
            "returnParameters": {
              "id": 60948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60954,
                  "src": "4361:17:94",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 60946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60945,
                      "name": "EventRange",
                      "nameLocations": [
                        "4361:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67966,
                      "src": "4361:10:94"
                    },
                    "referencedDeclaration": 67966,
                    "src": "4361:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4360:19:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61077,
            "nodeType": "FunctionDefinition",
            "src": "4466:884:94",
            "nodes": [],
            "body": {
              "id": 61076,
              "nodeType": "Block",
              "src": "4646:704:94",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60973,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "4660:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61076,
                      "src": "4652:14:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60972,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4652:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60976,
                  "initialValue": {
                    "expression": {
                      "id": 60974,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60960,
                      "src": "4669:3:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 60975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4673:6:94",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4669:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:27:94"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60977,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60973,
                        "src": "4689:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 60978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4699:1:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4689:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60980,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60973,
                        "src": "4704:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 60981,
                          "name": "startingPrices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60963,
                          "src": "4714:14:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        "id": 60982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4729:6:94",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4714:21:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4704:31:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4689:46:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60988,
                  "nodeType": "IfStatement",
                  "src": "4685:79:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 60985,
                        "name": "InvalidArrayLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66189,
                        "src": "4744:18:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 60986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4744:20:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 60987,
                    "nodeType": "RevertStatement",
                    "src": "4737:27:94"
                  }
                },
                {
                  "assignments": [
                    60990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60990,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "4778:2:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61076,
                      "src": "4770:10:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60989,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4770:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60991,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4770:10:94"
                },
                {
                  "assignments": [
                    60993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60993,
                      "mutability": "mutable",
                      "name": "mAuctionId",
                      "nameLocation": "4794:10:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61076,
                      "src": "4786:18:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60992,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4786:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60994,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4786:18:94"
                },
                {
                  "assignments": [
                    60997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60997,
                      "mutability": "mutable",
                      "name": "sAuction",
                      "nameLocation": "4832:8:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61076,
                      "src": "4810:30:94",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                        "typeString": "struct INSAuction.DomainAuction"
                      },
                      "typeName": {
                        "id": 60996,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60995,
                          "name": "DomainAuction",
                          "nameLocations": [
                            "4810:13:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66210,
                          "src": "4810:13:94"
                        },
                        "referencedDeclaration": 66210,
                        "src": "4810:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                          "typeString": "struct INSAuction.DomainAuction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60998,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:30:94"
                },
                {
                  "body": {
                    "id": 61068,
                    "nodeType": "Block",
                    "src": "4876:414:94",
                    "statements": [
                      {
                        "expression": {
                          "id": 61009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61005,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60990,
                            "src": "4884:2:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 61006,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60960,
                              "src": "4889:3:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 61008,
                            "indexExpression": {
                              "id": 61007,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61000,
                              "src": "4893:1:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4889:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4884:11:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61010,
                        "nodeType": "ExpressionStatement",
                        "src": "4884:11:94"
                      },
                      {
                        "condition": {
                          "id": 61014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4907:13:94",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 61012,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60990,
                                "src": "4917:2:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 61011,
                              "name": "reserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60872,
                              "src": "4908:8:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 61013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4908:12:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61018,
                        "nodeType": "IfStatement",
                        "src": "4903:43:94",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 61015,
                              "name": "NameNotReserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66181,
                              "src": "4929:15:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 61016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4929:17:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 61017,
                          "nodeType": "RevertStatement",
                          "src": "4922:24:94"
                        }
                      },
                      {
                        "expression": {
                          "id": 61023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61019,
                            "name": "sAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60997,
                            "src": "4955:8:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                              "typeString": "struct INSAuction.DomainAuction storage pointer"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 61020,
                              "name": "_domainAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60667,
                              "src": "4966:14:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                                "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                              }
                            },
                            "id": 61022,
                            "indexExpression": {
                              "id": 61021,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60990,
                              "src": "4981:2:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4966:18:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$66210_storage",
                              "typeString": "struct INSAuction.DomainAuction storage ref"
                            }
                          },
                          "src": "4955:29:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                            "typeString": "struct INSAuction.DomainAuction storage pointer"
                          }
                        },
                        "id": 61024,
                        "nodeType": "ExpressionStatement",
                        "src": "4955:29:94"
                      },
                      {
                        "expression": {
                          "id": 61028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61025,
                            "name": "mAuctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60993,
                            "src": "4992:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 61026,
                              "name": "sAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60997,
                              "src": "5005:8:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                                "typeString": "struct INSAuction.DomainAuction storage pointer"
                              }
                            },
                            "id": 61027,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5014:9:94",
                            "memberName": "auctionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66204,
                            "src": "5005:18:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4992:31:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 61029,
                        "nodeType": "ExpressionStatement",
                        "src": "4992:31:94"
                      },
                      {
                        "condition": {
                          "id": 61044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5035:76:94",
                          "subExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 61042,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 61036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 61032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 61030,
                                      "name": "mAuctionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60993,
                                      "src": "5037:10:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 61031,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5051:1:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "5037:15:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 61035,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 61033,
                                      "name": "mAuctionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60993,
                                      "src": "5056:10:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 61034,
                                      "name": "auctionId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 60957,
                                      "src": "5070:9:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "5056:23:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5037:42:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 61041,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 61037,
                                        "name": "sAuction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 60997,
                                        "src": "5083:8:94",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                                          "typeString": "struct INSAuction.DomainAuction storage pointer"
                                        }
                                      },
                                      "id": 61038,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5092:3:94",
                                      "memberName": "bid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66209,
                                      "src": "5083:12:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bid_$66202_storage",
                                        "typeString": "struct INSAuction.Bid storage ref"
                                      }
                                    },
                                    "id": 61039,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5096:9:94",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66199,
                                    "src": "5083:22:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 61040,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5109:1:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5083:27:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5037:73:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 61043,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5036:75:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61049,
                        "nodeType": "IfStatement",
                        "src": "5031:124:94",
                        "trueBody": {
                          "id": 61048,
                          "nodeType": "Block",
                          "src": "5113:42:94",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 61045,
                                  "name": "AlreadyBidding",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66177,
                                  "src": "5130:14:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 61046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5130:16:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61047,
                              "nodeType": "RevertStatement",
                              "src": "5123:23:94"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 61054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61050,
                              "name": "sAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60997,
                              "src": "5163:8:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                                "typeString": "struct INSAuction.DomainAuction storage pointer"
                              }
                            },
                            "id": 61052,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5172:9:94",
                            "memberName": "auctionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66204,
                            "src": "5163:18:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 61053,
                            "name": "auctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60957,
                            "src": "5184:9:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5163:30:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 61055,
                        "nodeType": "ExpressionStatement",
                        "src": "5163:30:94"
                      },
                      {
                        "expression": {
                          "id": 61062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61056,
                              "name": "sAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60997,
                              "src": "5201:8:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                                "typeString": "struct INSAuction.DomainAuction storage pointer"
                              }
                            },
                            "id": 61058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5210:13:94",
                            "memberName": "startingPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66206,
                            "src": "5201:22:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 61059,
                              "name": "startingPrices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60963,
                              "src": "5226:14:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 61061,
                            "indexExpression": {
                              "id": 61060,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61000,
                              "src": "5241:1:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5226:17:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5201:42:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61063,
                        "nodeType": "ExpressionStatement",
                        "src": "5201:42:94"
                      },
                      {
                        "id": 61067,
                        "nodeType": "UncheckedBlock",
                        "src": "5252:32:94",
                        "statements": [
                          {
                            "expression": {
                              "id": 61065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "5272:3:94",
                              "subExpression": {
                                "id": 61064,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61000,
                                "src": "5274:1:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 61066,
                            "nodeType": "ExpressionStatement",
                            "src": "5272:3:94"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61002,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61000,
                      "src": "4863:1:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 61003,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60973,
                      "src": "4867:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4863:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61069,
                  "initializationExpression": {
                    "assignments": [
                      61000
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 61000,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4860:1:94",
                        "nodeType": "VariableDeclaration",
                        "scope": 61069,
                        "src": "4852:9:94",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4852:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 61001,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4852:9:94"
                  },
                  "nodeType": "ForStatement",
                  "src": "4847:443:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61071,
                        "name": "auctionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60957,
                        "src": "5314:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61072,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60960,
                        "src": "5325:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 61073,
                        "name": "startingPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60963,
                        "src": "5330:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 61070,
                      "name": "LabelsListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66229,
                      "src": "5301:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 61074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5301:44:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61075,
                  "nodeType": "EmitStatement",
                  "src": "5296:49:94"
                }
              ]
            },
            "baseFunctions": [
              66341
            ],
            "documentation": {
              "id": 60955,
              "nodeType": "StructuredDocumentation",
              "src": "4426:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "777b0a18",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60966,
                    "name": "OPERATOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60646,
                    "src": "4599:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60965,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4590:8:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48573,
                  "src": "4590:8:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "4590:23:94"
              },
              {
                "arguments": [
                  {
                    "id": 60969,
                    "name": "auctionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60957,
                    "src": "4633:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 60970,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60968,
                  "name": "whenNotStarted",
                  "nameLocations": [
                    "4618:14:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60687,
                  "src": "4618:14:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "4618:25:94"
              }
            ],
            "name": "listNamesForAuction",
            "nameLocation": "4475:19:94",
            "parameters": {
              "id": 60964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60957,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "4503:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61077,
                  "src": "4495:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60956,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60960,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4533:3:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61077,
                  "src": "4514:22:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60958,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4514:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60959,
                    "nodeType": "ArrayTypeName",
                    "src": "4514:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60963,
                  "mutability": "mutable",
                  "name": "startingPrices",
                  "nameLocation": "4557:14:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61077,
                  "src": "4538:33:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60961,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4538:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60962,
                    "nodeType": "ArrayTypeName",
                    "src": "4538:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:78:94"
            },
            "returnParameters": {
              "id": 60971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4646:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61200,
            "nodeType": "FunctionDefinition",
            "src": "5394:938:94",
            "nodes": [],
            "body": {
              "id": 61199,
              "nodeType": "Block",
              "src": "5441:891:94",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61085,
                      "mutability": "mutable",
                      "name": "auction",
                      "nameLocation": "5468:7:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "5447:28:94",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                        "typeString": "struct INSAuction.DomainAuction"
                      },
                      "typeName": {
                        "id": 61084,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61083,
                          "name": "DomainAuction",
                          "nameLocations": [
                            "5447:13:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66210,
                          "src": "5447:13:94"
                        },
                        "referencedDeclaration": 66210,
                        "src": "5447:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                          "typeString": "struct INSAuction.DomainAuction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61089,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61086,
                      "name": "_domainAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60667,
                      "src": "5478:14:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                        "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                      }
                    },
                    "id": 61088,
                    "indexExpression": {
                      "id": 61087,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61080,
                      "src": "5493:2:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5478:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$66210_storage",
                      "typeString": "struct INSAuction.DomainAuction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5447:49:94"
                },
                {
                  "assignments": [
                    61092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61092,
                      "mutability": "mutable",
                      "name": "range",
                      "nameLocation": "5520:5:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "5502:23:94",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                        "typeString": "struct EventRange"
                      },
                      "typeName": {
                        "id": 61091,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61090,
                          "name": "EventRange",
                          "nameLocations": [
                            "5502:10:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67966,
                          "src": "5502:10:94"
                        },
                        "referencedDeclaration": 67966,
                        "src": "5502:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                          "typeString": "struct EventRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61097,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61093,
                      "name": "_auctionRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60661,
                      "src": "5528:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                        "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                      }
                    },
                    "id": 61096,
                    "indexExpression": {
                      "expression": {
                        "id": 61094,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61085,
                        "src": "5542:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      "id": 61095,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5550:9:94",
                      "memberName": "auctionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66204,
                      "src": "5542:17:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5528:32:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                      "typeString": "struct EventRange storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5502:58:94"
                },
                {
                  "assignments": [
                    61099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61099,
                      "mutability": "mutable",
                      "name": "beatPrice",
                      "nameLocation": "5574:9:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "5566:17:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61098,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5566:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61104,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61101,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61085,
                        "src": "5600:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      {
                        "id": 61102,
                        "name": "range",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61092,
                        "src": "5609:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                          "typeString": "struct EventRange memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                          "typeString": "struct EventRange memory"
                        }
                      ],
                      "id": 61100,
                      "name": "_getBeatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61538,
                      "src": "5586:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_DomainAuction_$66210_memory_ptr_$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct INSAuction.DomainAuction memory,struct EventRange memory) view returns (uint256)"
                      }
                    },
                    "id": 61103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5586:29:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5566:49:94"
                },
                {
                  "condition": {
                    "id": 61108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5626:19:94",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 61105,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61092,
                          "src": "5627:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        },
                        "id": 61106,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5633:10:94",
                        "memberName": "isInPeriod",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68036,
                        "src": "5627:16:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$67966_memory_ptr_$",
                          "typeString": "function (struct EventRange memory) view returns (bool)"
                        }
                      },
                      "id": 61107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5627:18:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61112,
                  "nodeType": "IfStatement",
                  "src": "5622:52:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61109,
                        "name": "QueryIsNotInPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66185,
                        "src": "5654:18:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5654:20:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61111,
                    "nodeType": "RevertStatement",
                    "src": "5647:27:94"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61113,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5684:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 61114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5688:5:94",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "5684:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 61115,
                      "name": "beatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61099,
                      "src": "5696:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5684:21:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61120,
                  "nodeType": "IfStatement",
                  "src": "5680:54:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61117,
                        "name": "InsufficientAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66187,
                        "src": "5714:18:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5714:20:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61119,
                    "nodeType": "RevertStatement",
                    "src": "5707:27:94"
                  }
                },
                {
                  "assignments": [
                    61122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61122,
                      "mutability": "mutable",
                      "name": "bidder",
                      "nameLocation": "5756:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "5740:22:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 61121,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5740:15:94",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61128,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 61125,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52306,
                          "src": "5773:10:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 61126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5773:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 61124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5765:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 61123,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5765:8:94",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5765:21:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5740:46:94"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 61132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61129,
                      "name": "bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61122,
                      "src": "5844:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 61130,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "5854:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 61131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5857:6:94",
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "5854:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5844:19:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61136,
                  "nodeType": "IfStatement",
                  "src": "5840:59:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61133,
                        "name": "ContractBidderIsForbidden",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66191,
                        "src": "5872:25:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5872:27:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61135,
                    "nodeType": "RevertStatement",
                    "src": "5865:34:94"
                  }
                },
                {
                  "assignments": [
                    61138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61138,
                      "mutability": "mutable",
                      "name": "prvBidder",
                      "nameLocation": "5921:9:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "5905:25:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 61137,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5905:15:94",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61142,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 61139,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61085,
                        "src": "5933:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      "id": 61140,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5941:3:94",
                      "memberName": "bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66209,
                      "src": "5933:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                        "typeString": "struct INSAuction.Bid memory"
                      }
                    },
                    "id": 61141,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5945:6:94",
                    "memberName": "bidder",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66195,
                    "src": "5933:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5905:46:94"
                },
                {
                  "assignments": [
                    61144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61144,
                      "mutability": "mutable",
                      "name": "prvPrice",
                      "nameLocation": "5965:8:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "5957:16:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61143,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5957:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61148,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 61145,
                        "name": "auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61085,
                        "src": "5976:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                          "typeString": "struct INSAuction.DomainAuction memory"
                        }
                      },
                      "id": 61146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5984:3:94",
                      "memberName": "bid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66209,
                      "src": "5976:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                        "typeString": "struct INSAuction.Bid memory"
                      }
                    },
                    "id": 61147,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5988:5:94",
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66197,
                    "src": "5976:17:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5957:36:94"
                },
                {
                  "assignments": [
                    61151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61151,
                      "mutability": "mutable",
                      "name": "sBid",
                      "nameLocation": "6012:4:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61199,
                      "src": "6000:16:94",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bid_$66202_storage_ptr",
                        "typeString": "struct INSAuction.Bid"
                      },
                      "typeName": {
                        "id": 61150,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61149,
                          "name": "Bid",
                          "nameLocations": [
                            "6000:3:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66202,
                          "src": "6000:3:94"
                        },
                        "referencedDeclaration": 66202,
                        "src": "6000:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$66202_storage_ptr",
                          "typeString": "struct INSAuction.Bid"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61156,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 61152,
                        "name": "_domainAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60667,
                        "src": "6019:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                          "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                        }
                      },
                      "id": 61154,
                      "indexExpression": {
                        "id": 61153,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61080,
                        "src": "6034:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6019:18:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$66210_storage",
                        "typeString": "struct INSAuction.DomainAuction storage ref"
                      }
                    },
                    "id": 61155,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6038:3:94",
                    "memberName": "bid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66209,
                    "src": "6019:22:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bid_$66202_storage",
                      "typeString": "struct INSAuction.Bid storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6000:41:94"
                },
                {
                  "expression": {
                    "id": 61162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61157,
                        "name": "sBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61151,
                        "src": "6047:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$66202_storage_ptr",
                          "typeString": "struct INSAuction.Bid storage pointer"
                        }
                      },
                      "id": 61159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6052:5:94",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66197,
                      "src": "6047:10:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 61160,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6060:3:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 61161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6064:5:94",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6060:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6047:22:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61163,
                  "nodeType": "ExpressionStatement",
                  "src": "6047:22:94"
                },
                {
                  "expression": {
                    "id": 61168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61164,
                        "name": "sBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61151,
                        "src": "6075:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$66202_storage_ptr",
                          "typeString": "struct INSAuction.Bid storage pointer"
                        }
                      },
                      "id": 61166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6080:6:94",
                      "memberName": "bidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66195,
                      "src": "6075:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61167,
                      "name": "bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61122,
                      "src": "6089:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6075:20:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 61169,
                  "nodeType": "ExpressionStatement",
                  "src": "6075:20:94"
                },
                {
                  "expression": {
                    "id": 61175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61170,
                        "name": "sBid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61151,
                        "src": "6101:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$66202_storage_ptr",
                          "typeString": "struct INSAuction.Bid storage pointer"
                        }
                      },
                      "id": 61172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6106:9:94",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66199,
                      "src": "6101:14:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 61173,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6118:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 61174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6124:9:94",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6118:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6101:32:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61176,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:32:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61178,
                          "name": "auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61085,
                          "src": "6154:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        "id": 61179,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6162:9:94",
                        "memberName": "auctionId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66204,
                        "src": "6154:17:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 61180,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61080,
                        "src": "6173:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 61181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6177:3:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6181:5:94",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6177:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61183,
                        "name": "bidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61122,
                        "src": "6188:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61184,
                        "name": "prvPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61144,
                        "src": "6196:8:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61185,
                        "name": "prvBidder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61138,
                        "src": "6206:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61177,
                      "name": "BidPlaced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66244,
                      "src": "6144:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256,address payable,uint256,address)"
                      }
                    },
                    "id": 61186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6144:72:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61187,
                  "nodeType": "EmitStatement",
                  "src": "6139:77:94"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61188,
                      "name": "prvPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61144,
                      "src": "6261:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 61189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6273:1:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6261:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61198,
                  "nodeType": "IfStatement",
                  "src": "6257:70:94",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 61194,
                          "name": "prvBidder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61138,
                          "src": "6307:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 61195,
                          "name": "prvPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61144,
                          "src": "6318:8:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 61191,
                          "name": "RONTransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69515,
                          "src": "6276:17:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RONTransferHelper_$69515_$",
                            "typeString": "type(library RONTransferHelper)"
                          }
                        },
                        "id": 61193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6294:12:94",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69490,
                        "src": "6276:30:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                          "typeString": "function (address payable,uint256)"
                        }
                      },
                      "id": 61196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6276:51:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61197,
                    "nodeType": "ExpressionStatement",
                    "src": "6276:51:94"
                  }
                }
              ]
            },
            "baseFunctions": [
              66347
            ],
            "documentation": {
              "id": 61078,
              "nodeType": "StructuredDocumentation",
              "src": "5354:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "9979ef45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "5403:8:94",
            "parameters": {
              "id": 61081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61080,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5420:2:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61200,
                  "src": "5412:10:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5412:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5411:12:94"
            },
            "returnParameters": {
              "id": 61082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5441:0:94"
            },
            "scope": 61577,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61356,
            "nodeType": "FunctionDefinition",
            "src": "6376:1072:94",
            "nodes": [],
            "body": {
              "id": 61355,
              "nodeType": "Block",
              "src": "6474:974:94",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61211,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "6488:2:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6480:10:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6480:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61212,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6480:10:94"
                },
                {
                  "assignments": [
                    61214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61214,
                      "mutability": "mutable",
                      "name": "accumulatedRON",
                      "nameLocation": "6504:14:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6496:22:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6496:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61215,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6496:22:94"
                },
                {
                  "assignments": [
                    61218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61218,
                      "mutability": "mutable",
                      "name": "range",
                      "nameLocation": "6542:5:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6524:23:94",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                        "typeString": "struct EventRange"
                      },
                      "typeName": {
                        "id": 61217,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61216,
                          "name": "EventRange",
                          "nameLocations": [
                            "6524:10:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67966,
                          "src": "6524:10:94"
                        },
                        "referencedDeclaration": 67966,
                        "src": "6524:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                          "typeString": "struct EventRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61219,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6524:23:94"
                },
                {
                  "assignments": [
                    61222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61222,
                      "mutability": "mutable",
                      "name": "auction",
                      "nameLocation": "6574:7:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6553:28:94",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                        "typeString": "struct INSAuction.DomainAuction"
                      },
                      "typeName": {
                        "id": 61221,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61220,
                          "name": "DomainAuction",
                          "nameLocations": [
                            "6553:13:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66210,
                          "src": "6553:13:94"
                        },
                        "referencedDeclaration": 66210,
                        "src": "6553:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                          "typeString": "struct INSAuction.DomainAuction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61223,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6553:28:94"
                },
                {
                  "assignments": [
                    61225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61225,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "6595:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6587:14:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6587:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61228,
                  "initialValue": {
                    "expression": {
                      "id": 61226,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61204,
                      "src": "6604:3:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 61227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6608:6:94",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6604:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6587:27:94"
                },
                {
                  "expression": {
                    "id": 61235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61229,
                      "name": "claimedAts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61208,
                      "src": "6620:10:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61233,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61225,
                          "src": "6647:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 61232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6633:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 61230,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6637:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 61231,
                          "nodeType": "ArrayTypeName",
                          "src": "6637:9:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 61234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6633:21:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6620:34:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 61236,
                  "nodeType": "ExpressionStatement",
                  "src": "6620:34:94"
                },
                {
                  "assignments": [
                    61239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61239,
                      "mutability": "mutable",
                      "name": "rnsUnified",
                      "nameLocation": "6671:10:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6660:21:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INSUnified_$67046",
                        "typeString": "contract INSUnified"
                      },
                      "typeName": {
                        "id": 61238,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61237,
                          "name": "INSUnified",
                          "nameLocations": [
                            "6660:10:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67046,
                          "src": "6660:10:94"
                        },
                        "referencedDeclaration": 67046,
                        "src": "6660:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INSUnified_$67046",
                          "typeString": "contract INSUnified"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61241,
                  "initialValue": {
                    "id": 61240,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60655,
                    "src": "6684:11:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6660:35:94"
                },
                {
                  "assignments": [
                    61243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61243,
                      "mutability": "mutable",
                      "name": "expiry",
                      "nameLocation": "6708:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61355,
                      "src": "6701:13:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 61242,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6701:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61253,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 61249,
                            "name": "DOMAIN_EXPIRY_DURATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60634,
                            "src": "6758:22:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 61250,
                            "name": "MAX_EXPIRY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60626,
                            "src": "6782:10:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 61246,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6724:5:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 61247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6730:9:94",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6724:15:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 61248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6740:17:94",
                          "memberName": "addWithUpperbound",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68656,
                          "src": "6724:33:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 61251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6724:69:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6717:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 61244,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6717:6:94",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6717:77:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6701:93:94"
                },
                {
                  "body": {
                    "id": 61346,
                    "nodeType": "Block",
                    "src": "6830:550:94",
                    "statements": [
                      {
                        "expression": {
                          "id": 61264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61260,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61211,
                            "src": "6838:2:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 61261,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61204,
                              "src": "6843:3:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 61263,
                            "indexExpression": {
                              "id": 61262,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61255,
                              "src": "6847:1:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6843:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6838:11:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61265,
                        "nodeType": "ExpressionStatement",
                        "src": "6838:11:94"
                      },
                      {
                        "expression": {
                          "id": 61270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61266,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61222,
                            "src": "6857:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                              "typeString": "struct INSAuction.DomainAuction memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 61267,
                              "name": "_domainAuction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60667,
                              "src": "6867:14:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                                "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                              }
                            },
                            "id": 61269,
                            "indexExpression": {
                              "id": 61268,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61211,
                              "src": "6882:2:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6867:18:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$66210_storage",
                              "typeString": "struct INSAuction.DomainAuction storage ref"
                            }
                          },
                          "src": "6857:28:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        "id": 61271,
                        "nodeType": "ExpressionStatement",
                        "src": "6857:28:94"
                      },
                      {
                        "expression": {
                          "id": 61277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61272,
                            "name": "range",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61218,
                            "src": "6893:5:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                              "typeString": "struct EventRange memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 61273,
                              "name": "_auctionRange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60661,
                              "src": "6901:13:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                                "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                              }
                            },
                            "id": 61276,
                            "indexExpression": {
                              "expression": {
                                "id": 61274,
                                "name": "auction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61222,
                                "src": "6915:7:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                  "typeString": "struct INSAuction.DomainAuction memory"
                                }
                              },
                              "id": 61275,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6923:9:94",
                              "memberName": "auctionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66204,
                              "src": "6915:17:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6901:32:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                              "typeString": "struct EventRange storage ref"
                            }
                          },
                          "src": "6893:40:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        },
                        "id": 61278,
                        "nodeType": "ExpressionStatement",
                        "src": "6893:40:94"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 61283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 61279,
                                "name": "auction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61222,
                                "src": "6946:7:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                  "typeString": "struct INSAuction.DomainAuction memory"
                                }
                              },
                              "id": 61280,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6954:3:94",
                              "memberName": "bid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66209,
                              "src": "6946:11:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                                "typeString": "struct INSAuction.Bid memory"
                              }
                            },
                            "id": 61281,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6958:9:94",
                            "memberName": "claimedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66201,
                            "src": "6946:21:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6971:1:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6946:26:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61341,
                        "nodeType": "IfStatement",
                        "src": "6942:392:94",
                        "trueBody": {
                          "id": 61340,
                          "nodeType": "Block",
                          "src": "6974:360:94",
                          "statements": [
                            {
                              "condition": {
                                "id": 61287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "6988:16:94",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 61284,
                                      "name": "range",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61218,
                                      "src": "6989:5:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                                        "typeString": "struct EventRange memory"
                                      }
                                    },
                                    "id": 61285,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6995:7:94",
                                    "memberName": "isEnded",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 68014,
                                    "src": "6989:13:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$67966_memory_ptr_$",
                                      "typeString": "function (struct EventRange memory) view returns (bool)"
                                    }
                                  },
                                  "id": 61286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6989:15:94",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 61291,
                              "nodeType": "IfStatement",
                              "src": "6984:42:94",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 61288,
                                    "name": "NotYetEnded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66171,
                                    "src": "7013:11:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 61289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7013:13:94",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 61290,
                                "nodeType": "RevertStatement",
                                "src": "7006:20:94"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 61292,
                                      "name": "auction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61222,
                                      "src": "7040:7:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                        "typeString": "struct INSAuction.DomainAuction memory"
                                      }
                                    },
                                    "id": 61293,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7048:3:94",
                                    "memberName": "bid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66209,
                                    "src": "7040:11:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                                      "typeString": "struct INSAuction.Bid memory"
                                    }
                                  },
                                  "id": 61294,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7052:9:94",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66199,
                                  "src": "7040:21:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 61295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7065:1:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7040:26:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 61300,
                              "nodeType": "IfStatement",
                              "src": "7036:52:94",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 61297,
                                    "name": "NoOneBidded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66173,
                                    "src": "7075:11:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 61298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7075:13:94",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 61299,
                                "nodeType": "RevertStatement",
                                "src": "7068:20:94"
                              }
                            },
                            {
                              "expression": {
                                "id": 61305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 61301,
                                  "name": "accumulatedRON",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61214,
                                  "src": "7099:14:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 61302,
                                      "name": "auction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61222,
                                      "src": "7117:7:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                        "typeString": "struct INSAuction.DomainAuction memory"
                                      }
                                    },
                                    "id": 61303,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7125:3:94",
                                    "memberName": "bid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66209,
                                    "src": "7117:11:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                                      "typeString": "struct INSAuction.Bid memory"
                                    }
                                  },
                                  "id": 61304,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7129:5:94",
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66197,
                                  "src": "7117:17:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7099:35:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 61306,
                              "nodeType": "ExpressionStatement",
                              "src": "7099:35:94"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 61310,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61211,
                                    "src": "7165:2:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 61311,
                                    "name": "expiry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61243,
                                    "src": "7169:6:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61307,
                                    "name": "rnsUnified",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61239,
                                    "src": "7144:10:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                                      "typeString": "contract INSUnified"
                                    }
                                  },
                                  "id": 61309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7155:9:94",
                                  "memberName": "setExpiry",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67036,
                                  "src": "7144:20:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                                    "typeString": "function (uint256,uint64) external"
                                  }
                                },
                                "id": 61312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7144:32:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61313,
                              "nodeType": "ExpressionStatement",
                              "src": "7144:32:94"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 61319,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7218:4:94",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_RNSAuction_$61577",
                                          "typeString": "contract RNSAuction"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_RNSAuction_$61577",
                                          "typeString": "contract RNSAuction"
                                        }
                                      ],
                                      "id": 61318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7210:7:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 61317,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7210:7:94",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61320,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7210:13:94",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 61321,
                                        "name": "auction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61222,
                                        "src": "7225:7:94",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                          "typeString": "struct INSAuction.DomainAuction memory"
                                        }
                                      },
                                      "id": 61322,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7233:3:94",
                                      "memberName": "bid",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66209,
                                      "src": "7225:11:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                                        "typeString": "struct INSAuction.Bid memory"
                                      }
                                    },
                                    "id": 61323,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7237:6:94",
                                    "memberName": "bidder",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66195,
                                    "src": "7225:18:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 61324,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61211,
                                    "src": "7245:2:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61314,
                                    "name": "rnsUnified",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61239,
                                    "src": "7186:10:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                                      "typeString": "contract INSUnified"
                                    }
                                  },
                                  "id": 61316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7197:12:94",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51429,
                                  "src": "7186:23:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256) external"
                                  }
                                },
                                "id": 61325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7186:62:94",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61326,
                              "nodeType": "ExpressionStatement",
                              "src": "7186:62:94"
                            },
                            {
                              "expression": {
                                "id": 61338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 61327,
                                        "name": "_domainAuction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 60667,
                                        "src": "7259:14:94",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                                          "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                                        }
                                      },
                                      "id": 61329,
                                      "indexExpression": {
                                        "id": 61328,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61211,
                                        "src": "7274:2:94",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7259:18:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DomainAuction_$66210_storage",
                                        "typeString": "struct INSAuction.DomainAuction storage ref"
                                      }
                                    },
                                    "id": 61330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7278:3:94",
                                    "memberName": "bid",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66209,
                                    "src": "7259:22:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bid_$66202_storage",
                                      "typeString": "struct INSAuction.Bid storage ref"
                                    }
                                  },
                                  "id": 61331,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7282:9:94",
                                  "memberName": "claimedAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66201,
                                  "src": "7259:32:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 61337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 61332,
                                      "name": "claimedAts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61208,
                                      "src": "7294:10:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 61334,
                                    "indexExpression": {
                                      "id": 61333,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61255,
                                      "src": "7305:1:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "7294:13:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 61335,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "7310:5:94",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 61336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7316:9:94",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "7310:15:94",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7294:31:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7259:66:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 61339,
                              "nodeType": "ExpressionStatement",
                              "src": "7259:66:94"
                            }
                          ]
                        }
                      },
                      {
                        "id": 61345,
                        "nodeType": "UncheckedBlock",
                        "src": "7342:32:94",
                        "statements": [
                          {
                            "expression": {
                              "id": 61343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7362:3:94",
                              "subExpression": {
                                "id": 61342,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61255,
                                "src": "7364:1:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 61344,
                            "nodeType": "ExpressionStatement",
                            "src": "7362:3:94"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61257,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61255,
                      "src": "6817:1:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 61258,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61225,
                      "src": "6821:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6817:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61347,
                  "initializationExpression": {
                    "assignments": [
                      61255
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 61255,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6814:1:94",
                        "nodeType": "VariableDeclaration",
                        "scope": 61347,
                        "src": "6806:9:94",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 61254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6806:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 61256,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6806:9:94"
                  },
                  "nodeType": "ForStatement",
                  "src": "6801:579:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61351,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60670,
                        "src": "7417:9:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 61352,
                        "name": "accumulatedRON",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61214,
                        "src": "7428:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61348,
                        "name": "RONTransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69515,
                        "src": "7386:17:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RONTransferHelper_$69515_$",
                          "typeString": "type(library RONTransferHelper)"
                        }
                      },
                      "id": 61350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7404:12:94",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69490,
                      "src": "7386:30:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 61353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7386:57:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61354,
                  "nodeType": "ExpressionStatement",
                  "src": "7386:57:94"
                }
              ]
            },
            "baseFunctions": [
              66368
            ],
            "documentation": {
              "id": 61201,
              "nodeType": "StructuredDocumentation",
              "src": "6336:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "6e7d60f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bulkClaimBidNames",
            "nameLocation": "6385:17:94",
            "parameters": {
              "id": 61205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61204,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6422:3:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61356,
                  "src": "6403:22:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61202,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6403:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61203,
                    "nodeType": "ArrayTypeName",
                    "src": "6403:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6402:24:94"
            },
            "returnParameters": {
              "id": 61209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61208,
                  "mutability": "mutable",
                  "name": "claimedAts",
                  "nameLocation": "6462:10:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61356,
                  "src": "6445:27:94",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61206,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6445:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61207,
                    "nodeType": "ArrayTypeName",
                    "src": "6445:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6444:29:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61366,
            "nodeType": "FunctionDefinition",
            "src": "7492:89:94",
            "nodes": [],
            "body": {
              "id": 61365,
              "nodeType": "Block",
              "src": "7552:29:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61363,
                    "name": "_rnsUnified",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60655,
                    "src": "7565:11:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "functionReturnParameters": 61362,
                  "id": 61364,
                  "nodeType": "Return",
                  "src": "7558:18:94"
                }
              ]
            },
            "baseFunctions": [
              66399
            ],
            "documentation": {
              "id": 61357,
              "nodeType": "StructuredDocumentation",
              "src": "7452:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "8c843314",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRNSUnified",
            "nameLocation": "7501:13:94",
            "parameters": {
              "id": 61358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7514:2:94"
            },
            "returnParameters": {
              "id": 61362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61366,
                  "src": "7540:10:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INSUnified_$67046",
                    "typeString": "contract INSUnified"
                  },
                  "typeName": {
                    "id": 61360,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61359,
                      "name": "INSUnified",
                      "nameLocations": [
                        "7540:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67046,
                      "src": "7540:10:94"
                    },
                    "referencedDeclaration": 67046,
                    "src": "7540:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INSUnified_$67046",
                      "typeString": "contract INSUnified"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7539:12:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61375,
            "nodeType": "FunctionDefinition",
            "src": "7625:82:94",
            "nodes": [],
            "body": {
              "id": 61374,
              "nodeType": "Block",
              "src": "7680:27:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61372,
                    "name": "_treasury",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60670,
                    "src": "7693:9:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 61371,
                  "id": 61373,
                  "nodeType": "Return",
                  "src": "7686:16:94"
                }
              ]
            },
            "baseFunctions": [
              66374
            ],
            "documentation": {
              "id": 61367,
              "nodeType": "StructuredDocumentation",
              "src": "7585:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "3b19e84a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTreasury",
            "nameLocation": "7634:11:94",
            "parameters": {
              "id": 61368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7645:2:94"
            },
            "returnParameters": {
              "id": 61371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61375,
                  "src": "7671:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7671:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7670:9:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61384,
            "nodeType": "FunctionDefinition",
            "src": "7751:88:94",
            "nodes": [],
            "body": {
              "id": 61383,
              "nodeType": "Block",
              "src": "7809:30:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61381,
                    "name": "_bidGapRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60673,
                    "src": "7822:12:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 61380,
                  "id": 61382,
                  "nodeType": "Return",
                  "src": "7815:19:94"
                }
              ]
            },
            "baseFunctions": [
              66380
            ],
            "documentation": {
              "id": 61376,
              "nodeType": "StructuredDocumentation",
              "src": "7711:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "a282d4ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBidGapRatio",
            "nameLocation": "7760:14:94",
            "parameters": {
              "id": 61377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7774:2:94"
            },
            "returnParameters": {
              "id": 61380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61379,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61384,
                  "src": "7800:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7800:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7799:9:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61398,
            "nodeType": "FunctionDefinition",
            "src": "7883:110:94",
            "nodes": [],
            "body": {
              "id": 61397,
              "nodeType": "Block",
              "src": "7964:29:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61394,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61387,
                        "src": "7983:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61393,
                      "name": "_setTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61470,
                      "src": "7970:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 61395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7970:18:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61396,
                  "nodeType": "ExpressionStatement",
                  "src": "7970:18:94"
                }
              ]
            },
            "baseFunctions": [
              66386
            ],
            "documentation": {
              "id": 61385,
              "nodeType": "StructuredDocumentation",
              "src": "7843:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "f0f44260",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61390,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48562,
                    "src": "7944:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61389,
                  "name": "onlyRole",
                  "nameLocations": [
                    "7935:8:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48573,
                  "src": "7935:8:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "7935:28:94"
              }
            ],
            "name": "setTreasury",
            "nameLocation": "7892:11:94",
            "parameters": {
              "id": 61388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61387,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7920:4:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61398,
                  "src": "7904:20:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 61386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7904:15:94",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7903:22:94"
            },
            "returnParameters": {
              "id": 61392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7964:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61412,
            "nodeType": "FunctionDefinition",
            "src": "8038:110:94",
            "nodes": [],
            "body": {
              "id": 61411,
              "nodeType": "Block",
              "src": "8115:33:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61408,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61401,
                        "src": "8137:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61407,
                      "name": "_setBidGapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61492,
                      "src": "8121:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8121:22:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61410,
                  "nodeType": "ExpressionStatement",
                  "src": "8121:22:94"
                }
              ]
            },
            "baseFunctions": [
              66392
            ],
            "documentation": {
              "id": 61399,
              "nodeType": "StructuredDocumentation",
              "src": "7997:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "60223b44",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61404,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48562,
                    "src": "8095:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 61405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61403,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8086:8:94"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48573,
                  "src": "8086:8:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "8086:28:94"
              }
            ],
            "name": "setBidGapRatio",
            "nameLocation": "8047:14:94",
            "parameters": {
              "id": 61402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61401,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "8070:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61412,
                  "src": "8062:13:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8062:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8061:15:94"
            },
            "returnParameters": {
              "id": 61406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8115:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61445,
            "nodeType": "FunctionDefinition",
            "src": "8192:254:94",
            "nodes": [],
            "body": {
              "id": 61444,
              "nodeType": "Block",
              "src": "8294:152:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61423,
                      "name": "auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61419,
                      "src": "8300:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                        "typeString": "struct INSAuction.DomainAuction memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 61424,
                        "name": "_domainAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60667,
                        "src": "8310:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_DomainAuction_$66210_storage_$",
                          "typeString": "mapping(uint256 => struct INSAuction.DomainAuction storage ref)"
                        }
                      },
                      "id": 61426,
                      "indexExpression": {
                        "id": 61425,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61415,
                        "src": "8325:2:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8310:18:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DomainAuction_$66210_storage",
                        "typeString": "struct INSAuction.DomainAuction storage ref"
                      }
                    },
                    "src": "8300:28:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                      "typeString": "struct INSAuction.DomainAuction memory"
                    }
                  },
                  "id": 61428,
                  "nodeType": "ExpressionStatement",
                  "src": "8300:28:94"
                },
                {
                  "assignments": [
                    61431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61431,
                      "mutability": "mutable",
                      "name": "range",
                      "nameLocation": "8352:5:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 61444,
                      "src": "8334:23:94",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                        "typeString": "struct EventRange"
                      },
                      "typeName": {
                        "id": 61430,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61429,
                          "name": "EventRange",
                          "nameLocations": [
                            "8334:10:94"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67966,
                          "src": "8334:10:94"
                        },
                        "referencedDeclaration": 67966,
                        "src": "8334:10:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                          "typeString": "struct EventRange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61436,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61433,
                          "name": "auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61419,
                          "src": "8376:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        "id": 61434,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8384:9:94",
                        "memberName": "auctionId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66204,
                        "src": "8376:17:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 61432,
                      "name": "getAuctionEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60954,
                      "src": "8360:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_EventRange_$67966_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct EventRange memory)"
                      }
                    },
                    "id": 61435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:34:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                      "typeString": "struct EventRange memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8334:60:94"
                },
                {
                  "expression": {
                    "id": 61442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61437,
                      "name": "beatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61421,
                      "src": "8400:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61439,
                          "name": "auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61419,
                          "src": "8426:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          }
                        },
                        {
                          "id": 61440,
                          "name": "range",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61431,
                          "src": "8435:5:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                            "typeString": "struct INSAuction.DomainAuction memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                            "typeString": "struct EventRange memory"
                          }
                        ],
                        "id": 61438,
                        "name": "_getBeatPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61538,
                        "src": "8412:13:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_DomainAuction_$66210_memory_ptr_$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct INSAuction.DomainAuction memory,struct EventRange memory) view returns (uint256)"
                        }
                      },
                      "id": 61441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8412:29:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8400:41:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61443,
                  "nodeType": "ExpressionStatement",
                  "src": "8400:41:94"
                }
              ]
            },
            "baseFunctions": [
              66358
            ],
            "documentation": {
              "id": 61413,
              "nodeType": "StructuredDocumentation",
              "src": "8152:37:94",
              "text": " @inheritdoc INSAuction"
            },
            "functionSelector": "78bd7935",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuction",
            "nameLocation": "8201:10:94",
            "parameters": {
              "id": 61416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61415,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8220:2:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61445,
                  "src": "8212:10:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8212:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8211:12:94"
            },
            "returnParameters": {
              "id": 61422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61419,
                  "mutability": "mutable",
                  "name": "auction",
                  "nameLocation": "8266:7:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61445,
                  "src": "8245:28:94",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                    "typeString": "struct INSAuction.DomainAuction"
                  },
                  "typeName": {
                    "id": 61418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61417,
                      "name": "DomainAuction",
                      "nameLocations": [
                        "8245:13:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66210,
                      "src": "8245:13:94"
                    },
                    "referencedDeclaration": 66210,
                    "src": "8245:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                      "typeString": "struct INSAuction.DomainAuction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61421,
                  "mutability": "mutable",
                  "name": "beatPrice",
                  "nameLocation": "8283:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61445,
                  "src": "8275:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8275:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8244:49:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61470,
            "nodeType": "FunctionDefinition",
            "src": "8547:165:94",
            "nodes": [],
            "body": {
              "id": 61469,
              "nodeType": "Block",
              "src": "8600:112:94",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 61456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61451,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61448,
                      "src": "8610:4:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 61454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8626:1:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 61453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8618:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 61452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8618:7:94",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 61455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8618:10:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8610:18:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61460,
                  "nodeType": "IfStatement",
                  "src": "8606:47:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61457,
                        "name": "NullAssignment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66175,
                        "src": "8637:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8637:16:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61459,
                    "nodeType": "RevertStatement",
                    "src": "8630:23:94"
                  }
                },
                {
                  "expression": {
                    "id": 61463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61461,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60670,
                      "src": "8659:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61462,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61448,
                      "src": "8671:4:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8659:16:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 61464,
                  "nodeType": "ExpressionStatement",
                  "src": "8659:16:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61466,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61448,
                        "src": "8702:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 61465,
                      "name": "TreasuryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66249,
                      "src": "8686:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 61467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8686:21:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61468,
                  "nodeType": "EmitStatement",
                  "src": "8681:26:94"
                }
              ]
            },
            "documentation": {
              "id": 61446,
              "nodeType": "StructuredDocumentation",
              "src": "8450:94:94",
              "text": " @dev Helper method to set treasury.\n Emits an event {TreasuryUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTreasury",
            "nameLocation": "8556:12:94",
            "parameters": {
              "id": 61449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61448,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8585:4:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61470,
                  "src": "8569:20:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 61447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8569:15:94",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8568:22:94"
            },
            "returnParameters": {
              "id": 61450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8600:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61492,
            "nodeType": "FunctionDefinition",
            "src": "8821:174:94",
            "nodes": [],
            "body": {
              "id": 61491,
              "nodeType": "Block",
              "src": "8870:125:94",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61476,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61473,
                      "src": "8880:5:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 61477,
                      "name": "MAX_PERCENTAGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60630,
                      "src": "8888:14:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8880:22:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61482,
                  "nodeType": "IfStatement",
                  "src": "8876:52:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61479,
                        "name": "RatioIsTooLarge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66179,
                        "src": "8911:15:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8911:17:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61481,
                    "nodeType": "RevertStatement",
                    "src": "8904:24:94"
                  }
                },
                {
                  "expression": {
                    "id": 61485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61483,
                      "name": "_bidGapRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60673,
                      "src": "8934:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61484,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61473,
                      "src": "8949:5:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8934:20:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61486,
                  "nodeType": "ExpressionStatement",
                  "src": "8934:20:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61488,
                        "name": "ratio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61473,
                        "src": "8984:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61487,
                      "name": "BidGapRatioUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66254,
                      "src": "8965:18:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 61489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8965:25:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61490,
                  "nodeType": "EmitStatement",
                  "src": "8960:30:94"
                }
              ]
            },
            "documentation": {
              "id": 61471,
              "nodeType": "StructuredDocumentation",
              "src": "8716:102:94",
              "text": " @dev Helper method to set bid gap ratio.\n Emits an event {BidGapRatioUpdated}."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBidGapRatio",
            "nameLocation": "8830:15:94",
            "parameters": {
              "id": 61474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61473,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "8854:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61492,
                  "src": "8846:13:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8846:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8845:15:94"
            },
            "returnParameters": {
              "id": 61475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8870:0:94"
            },
            "scope": 61577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61538,
            "nodeType": "FunctionDefinition",
            "src": "9054:440:94",
            "nodes": [],
            "body": {
              "id": 61537,
              "nodeType": "Block",
              "src": "9188:306:94",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61504,
                      "name": "beatPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61502,
                      "src": "9194:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 61507,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61496,
                            "src": "9215:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                              "typeString": "struct INSAuction.DomainAuction memory"
                            }
                          },
                          "id": 61508,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9223:13:94",
                          "memberName": "startingPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66206,
                          "src": "9215:21:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 61509,
                              "name": "auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61496,
                              "src": "9238:7:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                "typeString": "struct INSAuction.DomainAuction memory"
                              }
                            },
                            "id": 61510,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9246:3:94",
                            "memberName": "bid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66209,
                            "src": "9238:11:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                              "typeString": "struct INSAuction.Bid memory"
                            }
                          },
                          "id": 61511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9250:5:94",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66197,
                          "src": "9238:17:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 61505,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53557,
                          "src": "9206:4:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$53557_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 61506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9211:3:94",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52716,
                        "src": "9206:8:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 61512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9206:50:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9194:62:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61514,
                  "nodeType": "ExpressionStatement",
                  "src": "9194:62:94"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 61524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 61519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 61515,
                            "name": "auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61496,
                            "src": "9354:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                              "typeString": "struct INSAuction.DomainAuction memory"
                            }
                          },
                          "id": 61516,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9362:3:94",
                          "memberName": "bid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66209,
                          "src": "9354:11:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bid_$66202_memory_ptr",
                            "typeString": "struct INSAuction.Bid memory"
                          }
                        },
                        "id": 61517,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9366:5:94",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66197,
                        "src": "9354:17:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 61518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9375:1:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "9354:22:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 61523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "9380:16:94",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 61520,
                            "name": "range",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61499,
                            "src": "9381:5:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                              "typeString": "struct EventRange memory"
                            }
                          },
                          "id": 61521,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9387:7:94",
                          "memberName": "isEnded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68014,
                          "src": "9381:13:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$67966_memory_ptr_$",
                            "typeString": "function (struct EventRange memory) view returns (bool)"
                          }
                        },
                        "id": 61522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9381:15:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9354:42:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61536,
                  "nodeType": "IfStatement",
                  "src": "9350:140:94",
                  "trueBody": {
                    "id": 61535,
                    "nodeType": "Block",
                    "src": "9398:92:94",
                    "statements": [
                      {
                        "expression": {
                          "id": 61533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 61525,
                            "name": "beatPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61502,
                            "src": "9406:9:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 61528,
                                  "name": "auction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61496,
                                  "src": "9431:7:94",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                                    "typeString": "struct INSAuction.DomainAuction memory"
                                  }
                                },
                                "id": 61529,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9439:13:94",
                                "memberName": "startingPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66206,
                                "src": "9431:21:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 61530,
                                "name": "_bidGapRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60673,
                                "src": "9454:12:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 61531,
                                "name": "MAX_PERCENTAGE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60630,
                                "src": "9468:14:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 61526,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53557,
                                "src": "9419:4:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$53557_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 61527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9424:6:94",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52905,
                              "src": "9419:11:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 61532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9419:64:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9406:77:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61534,
                        "nodeType": "ExpressionStatement",
                        "src": "9406:77:94"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 61493,
              "nodeType": "StructuredDocumentation",
              "src": "8999:52:94",
              "text": " @dev Helper method to get beat price."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getBeatPrice",
            "nameLocation": "9063:13:94",
            "parameters": {
              "id": 61500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61496,
                  "mutability": "mutable",
                  "name": "auction",
                  "nameLocation": "9098:7:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61538,
                  "src": "9077:28:94",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DomainAuction_$66210_memory_ptr",
                    "typeString": "struct INSAuction.DomainAuction"
                  },
                  "typeName": {
                    "id": 61495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61494,
                      "name": "DomainAuction",
                      "nameLocations": [
                        "9077:13:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66210,
                      "src": "9077:13:94"
                    },
                    "referencedDeclaration": 66210,
                    "src": "9077:13:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DomainAuction_$66210_storage_ptr",
                      "typeString": "struct INSAuction.DomainAuction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61499,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "9125:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61538,
                  "src": "9107:23:94",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$67966_memory_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 61498,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61497,
                      "name": "EventRange",
                      "nameLocations": [
                        "9107:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67966,
                      "src": "9107:10:94"
                    },
                    "referencedDeclaration": 67966,
                    "src": "9107:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9076:55:94"
            },
            "returnParameters": {
              "id": 61503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61502,
                  "mutability": "mutable",
                  "name": "beatPrice",
                  "nameLocation": "9175:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61538,
                  "src": "9167:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9167:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9166:19:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61559,
            "nodeType": "FunctionDefinition",
            "src": "9566:160:94",
            "nodes": [],
            "body": {
              "id": 61558,
              "nodeType": "Block",
              "src": "9640:86:94",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 61553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9650:43:94",
                    "subExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 61551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 61545,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61542,
                                "src": "9652:5:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                                  "typeString": "struct EventRange calldata"
                                }
                              },
                              "id": 61546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9658:5:94",
                              "memberName": "valid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67982,
                              "src": "9652:11:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_EventRange_$67966_calldata_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$67966_calldata_ptr_$",
                                "typeString": "function (struct EventRange calldata) pure returns (bool)"
                              }
                            },
                            "id": 61547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9652:13:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 61548,
                                "name": "range",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61542,
                                "src": "9669:5:94",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                                  "typeString": "struct EventRange calldata"
                                }
                              },
                              "id": 61549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9675:15:94",
                              "memberName": "isNotYetStarted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67998,
                              "src": "9669:21:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$67966_memory_ptr_$",
                                "typeString": "function (struct EventRange memory) view returns (bool)"
                              }
                            },
                            "id": 61550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9669:23:94",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9652:40:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 61552,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9651:42:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61557,
                  "nodeType": "IfStatement",
                  "src": "9646:75:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61554,
                        "name": "InvalidEventRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66183,
                        "src": "9702:17:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9702:19:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61556,
                    "nodeType": "RevertStatement",
                    "src": "9695:26:94"
                  }
                }
              ]
            },
            "documentation": {
              "id": 61539,
              "nodeType": "StructuredDocumentation",
              "src": "9498:65:94",
              "text": " @dev Helper method to ensure event range is valid."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireValidEventRange",
            "nameLocation": "9575:23:94",
            "parameters": {
              "id": 61543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61542,
                  "mutability": "mutable",
                  "name": "range",
                  "nameLocation": "9619:5:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61559,
                  "src": "9599:25:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EventRange_$67966_calldata_ptr",
                    "typeString": "struct EventRange"
                  },
                  "typeName": {
                    "id": 61541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61540,
                      "name": "EventRange",
                      "nameLocations": [
                        "9599:10:94"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67966,
                      "src": "9599:10:94"
                    },
                    "referencedDeclaration": 67966,
                    "src": "9599:10:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EventRange_$67966_storage_ptr",
                      "typeString": "struct EventRange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9598:27:94"
            },
            "returnParameters": {
              "id": 61544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9640:0:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61576,
            "nodeType": "FunctionDefinition",
            "src": "9823:163:94",
            "nodes": [],
            "body": {
              "id": 61575,
              "nodeType": "Block",
              "src": "9884:102:94",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 61570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9894:43:94",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "baseExpression": {
                            "id": 61565,
                            "name": "_auctionRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60661,
                            "src": "9895:13:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_EventRange_$67966_storage_$",
                              "typeString": "mapping(bytes32 => struct EventRange storage ref)"
                            }
                          },
                          "id": 61567,
                          "indexExpression": {
                            "id": 61566,
                            "name": "auctionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61562,
                            "src": "9909:9:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9895:24:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EventRange_$67966_storage",
                            "typeString": "struct EventRange storage ref"
                          }
                        },
                        "id": 61568,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9920:15:94",
                        "memberName": "isNotYetStarted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67998,
                        "src": "9895:40:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_EventRange_$67966_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_EventRange_$67966_memory_ptr_$",
                          "typeString": "function (struct EventRange memory) view returns (bool)"
                        }
                      },
                      "id": 61569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9895:42:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61574,
                  "nodeType": "IfStatement",
                  "src": "9890:91:94",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61571,
                        "name": "EventIsNotCreatedOrAlreadyStarted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66193,
                        "src": "9946:33:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 61572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9946:35:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 61573,
                    "nodeType": "RevertStatement",
                    "src": "9939:42:94"
                  }
                }
              ]
            },
            "documentation": {
              "id": 61560,
              "nodeType": "StructuredDocumentation",
              "src": "9730:90:94",
              "text": " @dev Helper method to ensure the auction is not yet started or not created."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotStarted",
            "nameLocation": "9832:18:94",
            "parameters": {
              "id": 61563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61562,
                  "mutability": "mutable",
                  "name": "auctionId",
                  "nameLocation": "9859:9:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 61576,
                  "src": "9851:17:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 61561,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9851:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9850:19:94"
            },
            "returnParameters": {
              "id": 61564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9884:0:94"
            },
            "scope": 61577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60602,
              "name": "Initializable",
              "nameLocations": [
                "769:13:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50248,
              "src": "769:13:94"
            },
            "id": 60603,
            "nodeType": "InheritanceSpecifier",
            "src": "769:13:94"
          },
          {
            "baseName": {
              "id": 60604,
              "name": "AccessControlEnumerable",
              "nameLocations": [
                "784:23:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48975,
              "src": "784:23:94"
            },
            "id": 60605,
            "nodeType": "InheritanceSpecifier",
            "src": "784:23:94"
          },
          {
            "baseName": {
              "id": 60606,
              "name": "INSAuction",
              "nameLocations": [
                "809:10:94"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66400,
              "src": "809:10:94"
            },
            "id": 60607,
            "nodeType": "InheritanceSpecifier",
            "src": "809:10:94"
          }
        ],
        "canonicalName": "RNSAuction",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61577,
          66400,
          48975,
          48850,
          52679,
          52691,
          49073,
          49048,
          52316,
          50248
        ],
        "name": "RNSAuction",
        "nameLocation": "755:10:94",
        "scope": 61578,
        "usedErrors": [
          66171,
          66173,
          66175,
          66177,
          66179,
          66181,
          66183,
          66185,
          66187,
          66189,
          66191,
          66193
        ],
        "usedEvents": [
          48987,
          48996,
          49005,
          50094,
          66218,
          66229,
          66244,
          66249,
          66254
        ]
      }
    ],
    "license": "MIT"
  },
  "blockNumber": 29142324,
  "bytecode": "0x608060405261000c610011565b6100d0565b600054610100900460ff161561007d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100ce576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612443806100df6000396000f3fe6080604052600436106101c25760003560e01c8063791a26b4116100f7578063a282d4ae11610095578063db5e1ec611610064578063db5e1ec6146105b4578063ec14cf37146105d4578063f0f44260146105f4578063f5b541a61461061457600080fd5b8063a282d4ae14610544578063b967169014610559578063ca15c87314610574578063d547741f1461059457600080fd5b80639010d07c116100d15780639010d07c146104dc57806391d14854146104fc5780639979ef451461051c578063a217fddf1461052f57600080fd5b8063791a26b41461047e57806381bec1b31461049e5780638c843314146104be57600080fd5b80633b19e84a1161016457806360223b441161013e57806360223b44146103a15780636e7d60f2146103c1578063777b0a18146103ee57806378bd79351461040e57600080fd5b80633b19e84a146103395780634c255c971461036b57806353f9195e1461038157600080fd5b806319a3ee40116101a057806319a3ee40146102a0578063248a9ca3146102b85780632f2ff15d146102f757806336568abe1461031957600080fd5b806301ffc9a7146101c75780630afe1bb3146101fc57806315a291621461022c575b600080fd5b3480156101d357600080fd5b506101e76101e2366004611cf6565b610636565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b506102146305a39a8081565b6040516001600160401b0390911681526020016101f3565b34801561023857600080fd5b50610285610247366004611d20565b604080518082019091526000808252602082015250600090815260366020908152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252016101f3565b3480156102ac57600080fd5b506102146301e1338081565b3480156102c457600080fd5b506102e96102d3366004611d20565b6000908152600160208190526040909120015490565b6040519081526020016101f3565b34801561030357600080fd5b50610317610312366004611d4e565b610661565b005b34801561032557600080fd5b50610317610334366004611d4e565b61068c565b34801561034557600080fd5b506038546001600160a01b03165b6040516001600160a01b0390911681526020016101f3565b34801561037757600080fd5b506102e961271081565b34801561038d57600080fd5b506101e761039c366004611d20565b61070f565b3480156103ad57600080fd5b506103176103bc366004611d20565b610732565b3480156103cd57600080fd5b506103e16103dc366004611dc9565b610746565b6040516101f39190611e0a565b3480156103fa57600080fd5b50610317610409366004611e4e565b610a35565b34801561041a57600080fd5b5061042e610429366004611d20565b610b98565b6040805183518152602080850151818301529382015180516001600160a01b0316828401529384015160608083019190915291840151608082015292015160a083015260c082015260e0016101f3565b34801561048a57600080fd5b506103e1610499366004611dc9565b610c4d565b3480156104aa57600080fd5b506103176104b9366004611edf565b610e08565b3480156104ca57600080fd5b506035546001600160a01b0316610353565b3480156104e857600080fd5b506103536104f7366004611f0c565b610e85565b34801561050857600080fd5b506101e7610517366004611d4e565b610ea4565b61031761052a366004611d20565b610ecf565b34801561053b57600080fd5b506102e9600081565b34801561055057600080fd5b506039546102e9565b34801561056557600080fd5b506102146001600160401b0381565b34801561058057600080fd5b506102e961058f366004611d20565b611081565b3480156105a057600080fd5b506103176105af366004611d4e565b611098565b3480156105c057600080fd5b506102e96105cf366004611f2e565b6110be565b3480156105e057600080fd5b506103176105ef366004611f4a565b61115b565b34801561060057600080fd5b5061031761060f366004611fce565b6112f8565b34801561062057600080fd5b506102e96000805160206123ee83398151915281565b60006001600160e01b03198216635a05180f60e01b148061065b575061065b8261130c565b92915050565b6000828152600160208190526040909120015461067d81611341565b610687838361134e565b505050565b6001600160a01b03811633146107015760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61070b8282611370565b5050565b600881901c6000908152603a6020526040812054600160ff84161b16151561065b565b600061073d81611341565b61070b82611392565b6060600080610768604051806040016040528060008152602001600081525090565b610770611ca1565b85806001600160401b0381111561078957610789611feb565b6040519080825280602002602001820160405280156107b2578160200160208202803683370190505b506035549096506001600160a01b031660006107da426301e133806001600160401b036113f0565b905060005b83811015610a11578a8a828181106107f9576107f9612001565b60209081029290920135600081815260378452604080822081516060808201845282548252600180840154838a0152845160808101865260028501546001600160a01b031681526003850154818b0152600485015481870152600590940154848301528285019384528251865260368952848620855180870190965280548652015497840197909752905190950151929c5099509297509091039050610a095760208601514210156108be576040516372d1250d60e01b815260040160405180910390fd5b8460400151604001516000036108e7576040516323bbcc0160e01b815260040160405180910390fd5b6040850151602001516108fa908861202d565b60405163fc284d1160e01b8152600481018a90526001600160401b03841660248201529097506001600160a01b0384169063fc284d1190604401600060405180830381600087803b15801561094e57600080fd5b505af1158015610962573d6000803e3d6000fd5b505050506040858101515190516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018a9052908416906323b872dd90606401600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b50505050428982815181106109e8576109e8612001565b602090810291909101810182905260008a8152603790915260409020600501555b6001016107df565b50603854610a28906001600160a01b031687611426565b5050505050505092915050565b6000805160206123ee833981519152610a4d81611341565b85610a578161148b565b84801580610a655750808414155b15610a8357604051634ec4810560e11b815260040160405180910390fd5b6000806000805b84811015610b4c578a8a82818110610aa457610aa4612001565b905060200201359350610ab68461070f565b610ad357604051637d6fe8d760e11b815260040160405180910390fd5b6000848152603760205260409020805493509150821580610af357508b83145b80610b0057506004820154155b610b1d57604051631dc8374160e01b815260040160405180910390fd5b8b8255888882818110610b3257610b32612001565b905060200201358260010181905550806001019050610a8a565b508a7f9a845a1c4235343a450f5e39d4179b7e2a6c9586c02bff45d956717f4a19dd948b8b8b8b604051610b839493929190612072565b60405180910390a25050505050505050505050565b610ba0611ca1565b5060008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b03168152600385015481880152600485015481870152600590940154918401919091528184019290925280518351808501855286815285018690528552603684528285208351808501909452805484529091015492820192909252909190610c4583826114d8565b915050915091565b60606000805160206123ee833981519152610c6781611341565b826000819003610c8a57604051634ec4810560e11b815260040160405180910390fd5b806001600160401b03811115610ca257610ca2611feb565b604051908082528060200260200182016040528015610ccb578160200160208202803683370190505b506035549093506001600160a01b03167fba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d6886301e1338060005b84811015610dfc57836001600160a01b0316630570891f848b8b85818110610d2e57610d2e612001565b9050602002810190610d4091906120a4565b600030886040518763ffffffff1660e01b8152600401610d65969594939291906120ea565b60408051808303816000875af1158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190612146565b9050878281518110610dbb57610dbb612001565b602002602001018181525050610df4878281518110610ddc57610ddc612001565b6020026020010151603a61153090919063ffffffff16565b600101610d04565b50505050505092915050565b6000610e1381611341565b81610e1d81611559565b83610e278161148b565b60008581526036602090815260409091208535815590850135600182015550847fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b85604051610e769190612180565b60405180910390a25050505050565b6000828152600260205260408120610e9d908361159e565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b031681526003850154818801526004850154818701526005909401549184019190915281840192909252805185526036845282852083518085019094528054845290910154928201929092529091610f6383836114d8565b9050610f6e826115aa565b610f8b576040516348c6117b60e11b815260040160405180910390fd5b80341015610fac57604051632ca2f52b60e11b815260040160405180910390fd5b33328114610fcc576040516259ca3d60e61b815260040160405180910390fd5b604084810151805160209182015160008981526037845284902034600382018190556002820180546001600160a01b0319166001600160a01b038981169182178355426004909501949094558b5188519384529683015295810183905290831660608201529193909290918991907f5934294f4724ea4bb71fee8511b9ccb8dd6d2249ac4d120a81ccfcbbd0ad905f9060800160405180910390a38115611077576110778383611426565b5050505050505050565b600081815260026020526040812061065b906115c5565b600082815260016020819052604090912001546110b481611341565b6106878383611370565b6000806110ca81611341565b826110d481611559565b33846040516020016110e7929190612197565b60408051808303601f1901815291815281516020928301206000818152603684529190912086358155918601356001830155935050827fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b8560405161114c9190612180565b60405180910390a25050919050565b600054610100900460ff161580801561117b5750600054600160ff909116105b806111955750303b158015611195575060005460ff166001145b6111f85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f8565b6000805460ff19166001179055801561121b576000805461ff0019166101001790555b611224836115cf565b61122d82611392565b611238600088611640565b846000805160206123ee83398151915260005b8281101561128b57611283828a8a8481811061126957611269612001565b905060200201602081019061127e9190611fce565b611640565b60010161124b565b5050603580546001600160a01b0319166001600160a01b0387161790555080156112ef576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600061130381611341565b61070b826115cf565b60006001600160e01b03198216637965db0b60e01b148061065b57506301ffc9a760e01b6001600160e01b031983161461065b565b61134b813361164a565b50565b611358828261167d565b600082815260026020526040902061068790826116e8565b61137a82826116fd565b60008281526002602052604090206106879082611764565b6127108111156113b55760405163220f1a1560e01b815260040160405180910390fd5b60398190556040518181527f846b33625d74f443855144a5f2aef4dda303cda3dfb1c704cb58ab70671823429060200160405180910390a150565b6000818411806113ff57508183115b1561140b575080610e9d565b6114158484611779565b905081811115610e9d575092915050565b6000611432838361178d565b9050806106875761144b836001600160a01b0316611803565b61145483611819565b6040516020016114659291906121e2565b60408051601f198184030181529082905262461bcd60e51b82526106f891600401612260565b60008181526036602090815260409182902082518084019093528054835260010154908201526114bb9051421090565b61134b5760405163028e4e9760e51b815260040160405180910390fd5b60006114f08360200151846040015160200151611830565b905082604001516020015160001415801561150e5750602082015142105b1561065b576115268360200151603954612710611846565b610e9d908261202d565b600881901c600090815260209290925260409091208054600160ff9093169290921b9091179055565b6020810135813511158015611581575061158161157b36839003830183612293565b51421090565b61134b576040516302ef0c7360e21b815260040160405180910390fd5b6000610e9d8383611930565b60004282600001511115801561065b57505060200151421090565b600061065b825490565b6001600160a01b0381166115f6576040516362daafb160e11b815260040160405180910390fd5b603880546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b61070b828261134e565b6116548282610ea4565b61070b5761166181611803565b61166c83602061195a565b6040516020016114659291906122ef565b6116878282610ea4565b61070b5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610e9d836001600160a01b038416611af5565b6117078282610ea4565b1561070b5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610e9d836001600160a01b038416611b44565b8181018281101561065b575060001961065b565b604080516000808252602082019092526001600160a01b0384169083906040516117b79190612364565b60006040518083038185875af1925050503d80600081146117f4576040519150601f19603f3d011682016040523d82523d6000602084013e6117f9565b606091505b5090949350505050565b606061065b6001600160a01b038316601461195a565b606061065b8261182884611c37565b60010161195a565b600081831161183f5781610e9d565b5090919050565b60008080600019858709858702925082811083820303915050806000036118805783828161187657611876612380565b0492505050610e9d565b8084116118c75760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016106f8565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600082600001828154811061194757611947612001565b9060005260206000200154905092915050565b60606000611969836002612396565b61197490600261202d565b6001600160401b0381111561198b5761198b611feb565b6040519080825280601f01601f1916602001820160405280156119b5576020820181803683370190505b509050600360fc1b816000815181106119d0576119d0612001565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119ff576119ff612001565b60200101906001600160f81b031916908160001a9053506000611a23846002612396565b611a2e90600161202d565b90505b6001811115611aa6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a6257611a62612001565b1a60f81b828281518110611a7857611a78612001565b60200101906001600160f81b031916908160001a90535060049490941c93611a9f816123ad565b9050611a31565b508315610e9d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106f8565b6000818152600183016020526040812054611b3c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561065b565b50600061065b565b60008181526001830160205260408120548015611c2d576000611b686001836123c4565b8554909150600090611b7c906001906123c4565b9050818114611be1576000866000018281548110611b9c57611b9c612001565b9060005260206000200154905080876000018481548110611bbf57611bbf612001565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611bf257611bf26123d7565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061065b565b600091505061065b565b600080608083901c15611c4f5760809290921c916010015b604083901c15611c645760409290921c916008015b602083901c15611c795760209290921c916004015b601083901c15611c8e5760109290921c916002015b600883901c1561065b5760010192915050565b60405180606001604052806000801916815260200160008152602001611cf1604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b905290565b600060208284031215611d0857600080fd5b81356001600160e01b031981168114610e9d57600080fd5b600060208284031215611d3257600080fd5b5035919050565b6001600160a01b038116811461134b57600080fd5b60008060408385031215611d6157600080fd5b823591506020830135611d7381611d39565b809150509250929050565b60008083601f840112611d9057600080fd5b5081356001600160401b03811115611da757600080fd5b6020830191508360208260051b8501011115611dc257600080fd5b9250929050565b60008060208385031215611ddc57600080fd5b82356001600160401b03811115611df257600080fd5b611dfe85828601611d7e565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611e4257835183529284019291840191600101611e26565b50909695505050505050565b600080600080600060608688031215611e6657600080fd5b8535945060208601356001600160401b0380821115611e8457600080fd5b611e9089838a01611d7e565b90965094506040880135915080821115611ea957600080fd5b50611eb688828901611d7e565b969995985093965092949392505050565b600060408284031215611ed957600080fd5b50919050565b60008060608385031215611ef257600080fd5b82359150611f038460208501611ec7565b90509250929050565b60008060408385031215611f1f57600080fd5b50508035926020909101359150565b600060408284031215611f4057600080fd5b610e9d8383611ec7565b60008060008060008060a08789031215611f6357600080fd5b8635611f6e81611d39565b955060208701356001600160401b03811115611f8957600080fd5b611f9589828a01611d7e565b9096509450506040870135611fa981611d39565b92506060870135611fb981611d39565b80925050608087013590509295509295509295565b600060208284031215611fe057600080fd5b8135610e9d81611d39565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561065b5761065b612017565b81835260006001600160fb1b0383111561205957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000612086604083018688612040565b8281036020840152612099818587612040565b979650505050505050565b6000808335601e198436030181126120bb57600080fd5b8301803591506001600160401b038211156120d557600080fd5b602001915036819003821315611dc257600080fd5b86815260a060208201528460a0820152848660c0830137600060c08683018101919091526001600160a01b0394851660408301529290931660608401526001600160401b03166080830152601f909201601f1916010192915050565b6000806040838503121561215957600080fd5b82516001600160401b038116811461217057600080fd5b6020939093015192949293505050565b81358152602080830135908201526040810161065b565b6001600160a01b038316815260608101610e9d602083018480358252602090810135910152565b60005b838110156121d95781810151838201526020016121c1565b50506000910152565b7f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366815269032b9102927a7103a37960b51b60208201526000835161222d81602a8501602088016121be565b660103b30b63ab2960cd1b602a9184019182015283516122548160318401602088016121be565b01603101949350505050565b602081526000825180602084015261227f8160408501602087016121be565b601f01601f19169190910160400192915050565b6000604082840312156122a557600080fd5b604051604081018181106001600160401b03821117156122d557634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123278160178501602088016121be565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123588160288401602088016121be565b01602801949350505050565b600082516123768184602087016121be565b9190910192915050565b634e487b7160e01b600052601260045260246000fd5b808202811582820484141761065b5761065b612017565b6000816123bc576123bc612017565b506000190190565b8181038181111561065b5761065b612017565b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220541efeef78951616e66ce12436c57ab837a0632fd4d91676961efb067cf8e5cc64736f6c63430008150033",
  "chainId": 2020,
  "contractName": "RNSAuction",
  "deployedBytecode": "0x6080604052600436106101c25760003560e01c8063791a26b4116100f7578063a282d4ae11610095578063db5e1ec611610064578063db5e1ec6146105b4578063ec14cf37146105d4578063f0f44260146105f4578063f5b541a61461061457600080fd5b8063a282d4ae14610544578063b967169014610559578063ca15c87314610574578063d547741f1461059457600080fd5b80639010d07c116100d15780639010d07c146104dc57806391d14854146104fc5780639979ef451461051c578063a217fddf1461052f57600080fd5b8063791a26b41461047e57806381bec1b31461049e5780638c843314146104be57600080fd5b80633b19e84a1161016457806360223b441161013e57806360223b44146103a15780636e7d60f2146103c1578063777b0a18146103ee57806378bd79351461040e57600080fd5b80633b19e84a146103395780634c255c971461036b57806353f9195e1461038157600080fd5b806319a3ee40116101a057806319a3ee40146102a0578063248a9ca3146102b85780632f2ff15d146102f757806336568abe1461031957600080fd5b806301ffc9a7146101c75780630afe1bb3146101fc57806315a291621461022c575b600080fd5b3480156101d357600080fd5b506101e76101e2366004611cf6565b610636565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b506102146305a39a8081565b6040516001600160401b0390911681526020016101f3565b34801561023857600080fd5b50610285610247366004611d20565b604080518082019091526000808252602082015250600090815260366020908152604091829020825180840190935280548352600101549082015290565b604080518251815260209283015192810192909252016101f3565b3480156102ac57600080fd5b506102146301e1338081565b3480156102c457600080fd5b506102e96102d3366004611d20565b6000908152600160208190526040909120015490565b6040519081526020016101f3565b34801561030357600080fd5b50610317610312366004611d4e565b610661565b005b34801561032557600080fd5b50610317610334366004611d4e565b61068c565b34801561034557600080fd5b506038546001600160a01b03165b6040516001600160a01b0390911681526020016101f3565b34801561037757600080fd5b506102e961271081565b34801561038d57600080fd5b506101e761039c366004611d20565b61070f565b3480156103ad57600080fd5b506103176103bc366004611d20565b610732565b3480156103cd57600080fd5b506103e16103dc366004611dc9565b610746565b6040516101f39190611e0a565b3480156103fa57600080fd5b50610317610409366004611e4e565b610a35565b34801561041a57600080fd5b5061042e610429366004611d20565b610b98565b6040805183518152602080850151818301529382015180516001600160a01b0316828401529384015160608083019190915291840151608082015292015160a083015260c082015260e0016101f3565b34801561048a57600080fd5b506103e1610499366004611dc9565b610c4d565b3480156104aa57600080fd5b506103176104b9366004611edf565b610e08565b3480156104ca57600080fd5b506035546001600160a01b0316610353565b3480156104e857600080fd5b506103536104f7366004611f0c565b610e85565b34801561050857600080fd5b506101e7610517366004611d4e565b610ea4565b61031761052a366004611d20565b610ecf565b34801561053b57600080fd5b506102e9600081565b34801561055057600080fd5b506039546102e9565b34801561056557600080fd5b506102146001600160401b0381565b34801561058057600080fd5b506102e961058f366004611d20565b611081565b3480156105a057600080fd5b506103176105af366004611d4e565b611098565b3480156105c057600080fd5b506102e96105cf366004611f2e565b6110be565b3480156105e057600080fd5b506103176105ef366004611f4a565b61115b565b34801561060057600080fd5b5061031761060f366004611fce565b6112f8565b34801561062057600080fd5b506102e96000805160206123ee83398151915281565b60006001600160e01b03198216635a05180f60e01b148061065b575061065b8261130c565b92915050565b6000828152600160208190526040909120015461067d81611341565b610687838361134e565b505050565b6001600160a01b03811633146107015760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61070b8282611370565b5050565b600881901c6000908152603a6020526040812054600160ff84161b16151561065b565b600061073d81611341565b61070b82611392565b6060600080610768604051806040016040528060008152602001600081525090565b610770611ca1565b85806001600160401b0381111561078957610789611feb565b6040519080825280602002602001820160405280156107b2578160200160208202803683370190505b506035549096506001600160a01b031660006107da426301e133806001600160401b036113f0565b905060005b83811015610a11578a8a828181106107f9576107f9612001565b60209081029290920135600081815260378452604080822081516060808201845282548252600180840154838a0152845160808101865260028501546001600160a01b031681526003850154818b0152600485015481870152600590940154848301528285019384528251865260368952848620855180870190965280548652015497840197909752905190950151929c5099509297509091039050610a095760208601514210156108be576040516372d1250d60e01b815260040160405180910390fd5b8460400151604001516000036108e7576040516323bbcc0160e01b815260040160405180910390fd5b6040850151602001516108fa908861202d565b60405163fc284d1160e01b8152600481018a90526001600160401b03841660248201529097506001600160a01b0384169063fc284d1190604401600060405180830381600087803b15801561094e57600080fd5b505af1158015610962573d6000803e3d6000fd5b505050506040858101515190516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018a9052908416906323b872dd90606401600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b50505050428982815181106109e8576109e8612001565b602090810291909101810182905260008a8152603790915260409020600501555b6001016107df565b50603854610a28906001600160a01b031687611426565b5050505050505092915050565b6000805160206123ee833981519152610a4d81611341565b85610a578161148b565b84801580610a655750808414155b15610a8357604051634ec4810560e11b815260040160405180910390fd5b6000806000805b84811015610b4c578a8a82818110610aa457610aa4612001565b905060200201359350610ab68461070f565b610ad357604051637d6fe8d760e11b815260040160405180910390fd5b6000848152603760205260409020805493509150821580610af357508b83145b80610b0057506004820154155b610b1d57604051631dc8374160e01b815260040160405180910390fd5b8b8255888882818110610b3257610b32612001565b905060200201358260010181905550806001019050610a8a565b508a7f9a845a1c4235343a450f5e39d4179b7e2a6c9586c02bff45d956717f4a19dd948b8b8b8b604051610b839493929190612072565b60405180910390a25050505050505050505050565b610ba0611ca1565b5060008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b03168152600385015481880152600485015481870152600590940154918401919091528184019290925280518351808501855286815285018690528552603684528285208351808501909452805484529091015492820192909252909190610c4583826114d8565b915050915091565b60606000805160206123ee833981519152610c6781611341565b826000819003610c8a57604051634ec4810560e11b815260040160405180910390fd5b806001600160401b03811115610ca257610ca2611feb565b604051908082528060200260200182016040528015610ccb578160200160208202803683370190505b506035549093506001600160a01b03167fba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d6886301e1338060005b84811015610dfc57836001600160a01b0316630570891f848b8b85818110610d2e57610d2e612001565b9050602002810190610d4091906120a4565b600030886040518763ffffffff1660e01b8152600401610d65969594939291906120ea565b60408051808303816000875af1158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da79190612146565b9050878281518110610dbb57610dbb612001565b602002602001018181525050610df4878281518110610ddc57610ddc612001565b6020026020010151603a61153090919063ffffffff16565b600101610d04565b50505050505092915050565b6000610e1381611341565b81610e1d81611559565b83610e278161148b565b60008581526036602090815260409091208535815590850135600182015550847fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b85604051610e769190612180565b60405180910390a25050505050565b6000828152600260205260408120610e9d908361159e565b9392505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526037602090815260408083208151606080820184528254825260018084015483870152845160808101865260028501546001600160a01b031681526003850154818801526004850154818701526005909401549184019190915281840192909252805185526036845282852083518085019094528054845290910154928201929092529091610f6383836114d8565b9050610f6e826115aa565b610f8b576040516348c6117b60e11b815260040160405180910390fd5b80341015610fac57604051632ca2f52b60e11b815260040160405180910390fd5b33328114610fcc576040516259ca3d60e61b815260040160405180910390fd5b604084810151805160209182015160008981526037845284902034600382018190556002820180546001600160a01b0319166001600160a01b038981169182178355426004909501949094558b5188519384529683015295810183905290831660608201529193909290918991907f5934294f4724ea4bb71fee8511b9ccb8dd6d2249ac4d120a81ccfcbbd0ad905f9060800160405180910390a38115611077576110778383611426565b5050505050505050565b600081815260026020526040812061065b906115c5565b600082815260016020819052604090912001546110b481611341565b6106878383611370565b6000806110ca81611341565b826110d481611559565b33846040516020016110e7929190612197565b60408051808303601f1901815291815281516020928301206000818152603684529190912086358155918601356001830155935050827fd8960c7efc6464cdd8dd07f4dc149b0a33bf7f60bf357838722d5b80f988fb1b8560405161114c9190612180565b60405180910390a25050919050565b600054610100900460ff161580801561117b5750600054600160ff909116105b806111955750303b158015611195575060005460ff166001145b6111f85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f8565b6000805460ff19166001179055801561121b576000805461ff0019166101001790555b611224836115cf565b61122d82611392565b611238600088611640565b846000805160206123ee83398151915260005b8281101561128b57611283828a8a8481811061126957611269612001565b905060200201602081019061127e9190611fce565b611640565b60010161124b565b5050603580546001600160a01b0319166001600160a01b0387161790555080156112ef576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600061130381611341565b61070b826115cf565b60006001600160e01b03198216637965db0b60e01b148061065b57506301ffc9a760e01b6001600160e01b031983161461065b565b61134b813361164a565b50565b611358828261167d565b600082815260026020526040902061068790826116e8565b61137a82826116fd565b60008281526002602052604090206106879082611764565b6127108111156113b55760405163220f1a1560e01b815260040160405180910390fd5b60398190556040518181527f846b33625d74f443855144a5f2aef4dda303cda3dfb1c704cb58ab70671823429060200160405180910390a150565b6000818411806113ff57508183115b1561140b575080610e9d565b6114158484611779565b905081811115610e9d575092915050565b6000611432838361178d565b9050806106875761144b836001600160a01b0316611803565b61145483611819565b6040516020016114659291906121e2565b60408051601f198184030181529082905262461bcd60e51b82526106f891600401612260565b60008181526036602090815260409182902082518084019093528054835260010154908201526114bb9051421090565b61134b5760405163028e4e9760e51b815260040160405180910390fd5b60006114f08360200151846040015160200151611830565b905082604001516020015160001415801561150e5750602082015142105b1561065b576115268360200151603954612710611846565b610e9d908261202d565b600881901c600090815260209290925260409091208054600160ff9093169290921b9091179055565b6020810135813511158015611581575061158161157b36839003830183612293565b51421090565b61134b576040516302ef0c7360e21b815260040160405180910390fd5b6000610e9d8383611930565b60004282600001511115801561065b57505060200151421090565b600061065b825490565b6001600160a01b0381166115f6576040516362daafb160e11b815260040160405180910390fd5b603880546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b61070b828261134e565b6116548282610ea4565b61070b5761166181611803565b61166c83602061195a565b6040516020016114659291906122ef565b6116878282610ea4565b61070b5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000610e9d836001600160a01b038416611af5565b6117078282610ea4565b1561070b5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610e9d836001600160a01b038416611b44565b8181018281101561065b575060001961065b565b604080516000808252602082019092526001600160a01b0384169083906040516117b79190612364565b60006040518083038185875af1925050503d80600081146117f4576040519150601f19603f3d011682016040523d82523d6000602084013e6117f9565b606091505b5090949350505050565b606061065b6001600160a01b038316601461195a565b606061065b8261182884611c37565b60010161195a565b600081831161183f5781610e9d565b5090919050565b60008080600019858709858702925082811083820303915050806000036118805783828161187657611876612380565b0492505050610e9d565b8084116118c75760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016106f8565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600082600001828154811061194757611947612001565b9060005260206000200154905092915050565b60606000611969836002612396565b61197490600261202d565b6001600160401b0381111561198b5761198b611feb565b6040519080825280601f01601f1916602001820160405280156119b5576020820181803683370190505b509050600360fc1b816000815181106119d0576119d0612001565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119ff576119ff612001565b60200101906001600160f81b031916908160001a9053506000611a23846002612396565b611a2e90600161202d565b90505b6001811115611aa6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a6257611a62612001565b1a60f81b828281518110611a7857611a78612001565b60200101906001600160f81b031916908160001a90535060049490941c93611a9f816123ad565b9050611a31565b508315610e9d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106f8565b6000818152600183016020526040812054611b3c5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561065b565b50600061065b565b60008181526001830160205260408120548015611c2d576000611b686001836123c4565b8554909150600090611b7c906001906123c4565b9050818114611be1576000866000018281548110611b9c57611b9c612001565b9060005260206000200154905080876000018481548110611bbf57611bbf612001565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611bf257611bf26123d7565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061065b565b600091505061065b565b600080608083901c15611c4f5760809290921c916010015b604083901c15611c645760409290921c916008015b602083901c15611c795760209290921c916004015b601083901c15611c8e5760109290921c916002015b600883901c1561065b5760010192915050565b60405180606001604052806000801916815260200160008152602001611cf1604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b905290565b600060208284031215611d0857600080fd5b81356001600160e01b031981168114610e9d57600080fd5b600060208284031215611d3257600080fd5b5035919050565b6001600160a01b038116811461134b57600080fd5b60008060408385031215611d6157600080fd5b823591506020830135611d7381611d39565b809150509250929050565b60008083601f840112611d9057600080fd5b5081356001600160401b03811115611da757600080fd5b6020830191508360208260051b8501011115611dc257600080fd5b9250929050565b60008060208385031215611ddc57600080fd5b82356001600160401b03811115611df257600080fd5b611dfe85828601611d7e565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611e4257835183529284019291840191600101611e26565b50909695505050505050565b600080600080600060608688031215611e6657600080fd5b8535945060208601356001600160401b0380821115611e8457600080fd5b611e9089838a01611d7e565b90965094506040880135915080821115611ea957600080fd5b50611eb688828901611d7e565b969995985093965092949392505050565b600060408284031215611ed957600080fd5b50919050565b60008060608385031215611ef257600080fd5b82359150611f038460208501611ec7565b90509250929050565b60008060408385031215611f1f57600080fd5b50508035926020909101359150565b600060408284031215611f4057600080fd5b610e9d8383611ec7565b60008060008060008060a08789031215611f6357600080fd5b8635611f6e81611d39565b955060208701356001600160401b03811115611f8957600080fd5b611f9589828a01611d7e565b9096509450506040870135611fa981611d39565b92506060870135611fb981611d39565b80925050608087013590509295509295509295565b600060208284031215611fe057600080fd5b8135610e9d81611d39565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561065b5761065b612017565b81835260006001600160fb1b0383111561205957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000612086604083018688612040565b8281036020840152612099818587612040565b979650505050505050565b6000808335601e198436030181126120bb57600080fd5b8301803591506001600160401b038211156120d557600080fd5b602001915036819003821315611dc257600080fd5b86815260a060208201528460a0820152848660c0830137600060c08683018101919091526001600160a01b0394851660408301529290931660608401526001600160401b03166080830152601f909201601f1916010192915050565b6000806040838503121561215957600080fd5b82516001600160401b038116811461217057600080fd5b6020939093015192949293505050565b81358152602080830135908201526040810161065b565b6001600160a01b038316815260608101610e9d602083018480358252602090810135910152565b60005b838110156121d95781810151838201526020016121c1565b50506000910152565b7f5472616e7366657248656c7065723a20636f756c64206e6f74207472616e7366815269032b9102927a7103a37960b51b60208201526000835161222d81602a8501602088016121be565b660103b30b63ab2960cd1b602a9184019182015283516122548160318401602088016121be565b01603101949350505050565b602081526000825180602084015261227f8160408501602087016121be565b601f01601f19169190910160400192915050565b6000604082840312156122a557600080fd5b604051604081018181106001600160401b03821117156122d557634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123278160178501602088016121be565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516123588160288401602088016121be565b01602801949350505050565b600082516123768184602087016121be565b9190910192915050565b634e487b7160e01b600052601260045260246000fd5b808202811582820484141761065b5761065b612017565b6000816123bc576123bc612017565b506000190190565b8181038181111561065b5761065b612017565b634e487b7160e01b600052603160045260246000fdfe97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929a2646970667358221220541efeef78951616e66ce12436c57ab837a0632fd4d91676961efb067cf8e5cc64736f6c63430008150033",
  "deployer": "0x0F68eDBE14C8f68481771016d7E2871d6a35DE11",
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "bulkClaimBidNames(uint256[])": {
        "details": "Bulk claims the bid name. Requirements: - Must be called after ended time. - The method caller can be anyone.",
        "params": {
          "ids": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "bulkRegister(string[])": {
        "details": "Claims domain names for auction. Requirements: - The method caller must be contract operator.",
        "params": {
          "labels": "The domain names. Eg, ['foo'] for 'foo.ron'"
        },
        "returns": {
          "ids": "The id corresponding for namehash of domain names."
        }
      },
      "createAuctionEvent((uint256,uint256))": {
        "details": "Creates a new auction to sale with a specific time period. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}.",
        "returns": {
          "auctionId": "The auction id"
        }
      },
      "getAuction(uint256)": {
        "details": "Returns the highest bid and address of the bidder.",
        "params": {
          "id": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "getAuctionEvent(bytes32)": {
        "details": "Returns the event range of an auction."
      },
      "getBidGapRatio()": {
        "details": "Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%."
      },
      "getRNSUnified()": {
        "details": "Returns RNSUnified contract."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getTreasury()": {
        "details": "Returns the treasury."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "listNamesForAuction(bytes32,uint256[],uint256[])": {
        "details": "Lists reserved names to sale in a specified auction. Requirements: - The method caller must be contract operator. - Array length are matched and larger than 0. - Only allow to set when the domain is:   + Not in any auction.   + Or, in the current auction.   + Or, this name is not bided. Emits an event {LabelsListed}. Note: If the name is already listed, this method replaces with a new input value.",
        "params": {
          "ids": "The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "placeBid(uint256)": {
        "details": "Places a bid for a domain name. Requirements: - The name is listed, or the auction is happening. - The msg.value is larger than the current bid price or the auction starting price. Emits an event {BidPlaced}.",
        "params": {
          "id": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "reserved(uint256)": {
        "details": "Checks whether a domain name is currently reserved for auction or not.",
        "params": {
          "id": "The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "setAuctionEvent(bytes32,(uint256,uint256))": {
        "details": "Updates the auction details. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}."
      },
      "setBidGapRatio(uint256)": {
        "details": "Sets commission ratio. Value in range [0;100_00] is 0%-100%. Requirements: - The method caller must be admin Emits an event {BidGapRatioUpdated}."
      },
      "setTreasury(address)": {
        "details": "Sets the treasury. Requirements: - The method caller must be admin Emits an event {TreasuryUpdated}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "events": {
      "AuctionEventSet(bytes32,(uint256,uint256))": {
        "details": "Emitted when an auction is set."
      },
      "BidGapRatioUpdated(uint256)": {
        "details": "Emitted when bid gap ratio is updated."
      },
      "BidPlaced(bytes32,uint256,uint256,address,uint256,address)": {
        "details": "Emitted when a bid is placed for a name."
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "LabelsListed(bytes32,uint256[],uint256[])": {
        "details": "Emitted when the labels are listed for auction."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "TreasuryUpdated(address)": {
        "details": "Emitted when the treasury is updated."
      }
    }
  },
  "isFoundry": true,
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyBidding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractBidderIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventIsNotCreatedOrAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEventRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameNotReserved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOneBidded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotYetEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAssignment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QueryIsNotInPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RatioIsTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct EventRange\",\"name\":\"range\",\"type\":\"tuple\"}],\"name\":\"AuctionEventSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"BidGapRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousBidder\",\"type\":\"address\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"startingPrices\",\"type\":\"uint256[]\"}],\"name\":\"LabelsListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_EXPIRY_DURATION\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_AUCTION_DOMAIN_EXPIRY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_EXPIRY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"bulkClaimBidNames\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"claimedAts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"labels\",\"type\":\"string[]\"}],\"name\":\"bulkRegister\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct EventRange\",\"name\":\"range\",\"type\":\"tuple\"}],\"name\":\"createAuctionEvent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct INSAuction.Bid\",\"name\":\"bid\",\"type\":\"tuple\"}],\"internalType\":\"struct INSAuction.DomainAuction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"beatPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"}],\"name\":\"getAuctionEvent\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct EventRange\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBidGapRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRNSUnified\",\"outputs\":[{\"internalType\":\"contract INSUnified\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract INSUnified\",\"name\":\"rnsUnified\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidGapRatio\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startingPrices\",\"type\":\"uint256[]\"}],\"name\":\"listNamesForAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"reserved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"auctionId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct EventRange\",\"name\":\"range\",\"type\":\"tuple\"}],\"name\":\"setAuctionEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"setBidGapRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AuctionEventSet(bytes32,(uint256,uint256))\":{\"details\":\"Emitted when an auction is set.\"},\"BidGapRatioUpdated(uint256)\":{\"details\":\"Emitted when bid gap ratio is updated.\"},\"BidPlaced(bytes32,uint256,uint256,address,uint256,address)\":{\"details\":\"Emitted when a bid is placed for a name.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"LabelsListed(bytes32,uint256[],uint256[])\":{\"details\":\"Emitted when the labels are listed for auction.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TreasuryUpdated(address)\":{\"details\":\"Emitted when the treasury is updated.\"}},\"kind\":\"dev\",\"methods\":{\"bulkClaimBidNames(uint256[])\":{\"details\":\"Bulk claims the bid name. Requirements: - Must be called after ended time. - The method caller can be anyone.\",\"params\":{\"ids\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"bulkRegister(string[])\":{\"details\":\"Claims domain names for auction. Requirements: - The method caller must be contract operator.\",\"params\":{\"labels\":\"The domain names. Eg, ['foo'] for 'foo.ron'\"},\"returns\":{\"ids\":\"The id corresponding for namehash of domain names.\"}},\"createAuctionEvent((uint256,uint256))\":{\"details\":\"Creates a new auction to sale with a specific time period. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}.\",\"returns\":{\"auctionId\":\"The auction id\"}},\"getAuction(uint256)\":{\"details\":\"Returns the highest bid and address of the bidder.\",\"params\":{\"id\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"getAuctionEvent(bytes32)\":{\"details\":\"Returns the event range of an auction.\"},\"getBidGapRatio()\":{\"details\":\"Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%.\"},\"getRNSUnified()\":{\"details\":\"Returns RNSUnified contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTreasury()\":{\"details\":\"Returns the treasury.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"listNamesForAuction(bytes32,uint256[],uint256[])\":{\"details\":\"Lists reserved names to sale in a specified auction. Requirements: - The method caller must be contract operator. - Array length are matched and larger than 0. - Only allow to set when the domain is:   + Not in any auction.   + Or, in the current auction.   + Or, this name is not bided. Emits an event {LabelsListed}. Note: If the name is already listed, this method replaces with a new input value.\",\"params\":{\"ids\":\"The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"placeBid(uint256)\":{\"details\":\"Places a bid for a domain name. Requirements: - The name is listed, or the auction is happening. - The msg.value is larger than the current bid price or the auction starting price. Emits an event {BidPlaced}.\",\"params\":{\"id\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"reserved(uint256)\":{\"details\":\"Checks whether a domain name is currently reserved for auction or not.\",\"params\":{\"id\":\"The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setAuctionEvent(bytes32,(uint256,uint256))\":{\"details\":\"Updates the auction details. Requirements: - The method caller must be admin. Emits an event {AuctionEventSet}.\"},\"setBidGapRatio(uint256)\":{\"details\":\"Sets commission ratio. Value in range [0;100_00] is 0%-100%. Requirements: - The method caller must be admin Emits an event {BidGapRatioUpdated}.\"},\"setTreasury(address)\":{\"details\":\"Sets the treasury. Requirements: - The method caller must be admin Emits an event {TreasuryUpdated}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"DOMAIN_EXPIRY_DURATION\":{\"details\":\"The expiry duration of a domain after transferring to bidder.\"},\"MAX_AUCTION_DOMAIN_EXPIRY\":{\"details\":\"The maximum expiry duration of a domain after transferring to bidder.\"},\"MAX_EXPIRY\":{\"details\":\"The maximum expiry duration\"},\"MAX_PERCENTAGE\":{\"details\":\"Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\"},\"OPERATOR_ROLE\":{\"details\":\"Returns the operator role.\"},\"____gap\":{\"details\":\"Gap for upgradeability.\"},\"_auctionRange\":{\"details\":\"Mapping from auction Id => event range\"},\"_bidGapRatio\":{\"details\":\"The gap ratio between 2 bids with the starting price.\"},\"_domainAuction\":{\"details\":\"Mapping from id of domain names => auction detail.\"},\"_reserved\":{\"details\":\"Mapping from id => bool reserved status\"},\"_rnsUnified\":{\"details\":\"The RNSUnified contract.\"},\"_treasury\":{\"details\":\"The treasury.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAuctionEvent((uint256,uint256))\":{\"notice\":\"Please use the method `setAuctionNames` to list all the reserved names.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RNSAuction.sol\":\"RNSAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/=lib/pyth-sdk-solidity/\",\":@rns-contracts/=src/\",\":buffer/=lib/buffer/contracts/\",\":contract-template/=lib/contract-template/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-deployment-kit/=lib/foundry-deployment-kit/script/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":pyth-sdk-solidity/=lib/pyth-sdk-solidity/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(account),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlEnumerable.sol\\\";\\nimport \\\"./AccessControl.sol\\\";\\nimport \\\"../utils/structs/EnumerableSet.sol\\\";\\n\\n/**\\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\\n */\\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\\n        return _roleMembers[role].at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\\n        return _roleMembers[role].length();\\n    }\\n\\n    /**\\n     * @dev Overload {_grantRole} to track enumerable memberships\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual override {\\n        super._grantRole(role, account);\\n        _roleMembers[role].add(account);\\n    }\\n\\n    /**\\n     * @dev Overload {_revokeRole} to track enumerable memberships\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual override {\\n        super._revokeRole(role, account);\\n        _roleMembers[role].remove(account);\\n    }\\n}\\n\",\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\\n */\\ninterface IAccessControlEnumerable is IAccessControl {\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/BitMaps.sol)\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing uint256 to bool mapping in a compact and efficient way, providing the keys are sequential.\\n * Largely inspired by Uniswap's https://github.com/Uniswap/merkle-distributor/blob/master/contracts/MerkleDistributor.sol[merkle-distributor].\\n */\\nlibrary BitMaps {\\n    struct BitMap {\\n        mapping(uint256 => uint256) _data;\\n    }\\n\\n    /**\\n     * @dev Returns whether the bit at `index` is set.\\n     */\\n    function get(BitMap storage bitmap, uint256 index) internal view returns (bool) {\\n        uint256 bucket = index >> 8;\\n        uint256 mask = 1 << (index & 0xff);\\n        return bitmap._data[bucket] & mask != 0;\\n    }\\n\\n    /**\\n     * @dev Sets the bit at `index` to the boolean `value`.\\n     */\\n    function setTo(BitMap storage bitmap, uint256 index, bool value) internal {\\n        if (value) {\\n            set(bitmap, index);\\n        } else {\\n            unset(bitmap, index);\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the bit at `index`.\\n     */\\n    function set(BitMap storage bitmap, uint256 index) internal {\\n        uint256 bucket = index >> 8;\\n        uint256 mask = 1 << (index & 0xff);\\n        bitmap._data[bucket] |= mask;\\n    }\\n\\n    /**\\n     * @dev Unsets the bit at `index`.\\n     */\\n    function unset(BitMap storage bitmap, uint256 index) internal {\\n        uint256 bucket = index >> 8;\\n        uint256 mask = 1 << (index & 0xff);\\n        bitmap._data[bucket] &= ~mask;\\n    }\\n}\\n\",\"keccak256\":\"0xac946730f979a447732a5bed58aa30c995ae666c3e1663b312ab5fd11dbe3eb6\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"src/RNSAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { AccessControlEnumerable } from \\\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\\\";\\nimport { Math } from \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport { BitMaps } from \\\"@openzeppelin/contracts/utils/structs/BitMaps.sol\\\";\\nimport { INSUnified, INSAuction } from \\\"./interfaces/INSAuction.sol\\\";\\nimport { LibSafeRange } from \\\"./libraries/math/LibSafeRange.sol\\\";\\nimport { LibRNSDomain } from \\\"./libraries/LibRNSDomain.sol\\\";\\nimport { LibEventRange, EventRange } from \\\"./libraries/LibEventRange.sol\\\";\\nimport { RONTransferHelper } from \\\"./libraries/transfers/RONTransferHelper.sol\\\";\\n\\ncontract RNSAuction is Initializable, AccessControlEnumerable, INSAuction {\\n  using LibSafeRange for uint256;\\n  using BitMaps for BitMaps.BitMap;\\n  using LibEventRange for EventRange;\\n\\n  /// @inheritdoc INSAuction\\n  uint64 public constant MAX_EXPIRY = type(uint64).max;\\n  /// @inheritdoc INSAuction\\n  uint256 public constant MAX_PERCENTAGE = 100_00;\\n  /// @inheritdoc INSAuction\\n  uint64 public constant DOMAIN_EXPIRY_DURATION = 365 days;\\n  /// @inheritdoc INSAuction\\n  uint64 public constant MAX_AUCTION_DOMAIN_EXPIRY = 365 days * 3;\\n  /// @inheritdoc INSAuction\\n  bytes32 public constant OPERATOR_ROLE = keccak256(\\\"OPERATOR_ROLE\\\");\\n\\n  /// @dev Gap for upgradeability.\\n  uint256[50] private ____gap;\\n  /// @dev The RNSUnified contract.\\n  INSUnified internal _rnsUnified;\\n  /// @dev Mapping from auction Id => event range\\n  mapping(bytes32 auctionId => EventRange) internal _auctionRange;\\n  /// @dev Mapping from id of domain names => auction detail.\\n  mapping(uint256 id => DomainAuction) internal _domainAuction;\\n\\n  /// @dev The treasury.\\n  address payable internal _treasury;\\n  /// @dev The gap ratio between 2 bids with the starting price.\\n  uint256 internal _bidGapRatio;\\n  /// @dev Mapping from id => bool reserved status\\n  BitMaps.BitMap internal _reserved;\\n\\n  modifier whenNotStarted(bytes32 auctionId) {\\n    _requireNotStarted(auctionId);\\n    _;\\n  }\\n\\n  modifier onlyValidEventRange(EventRange calldata range) {\\n    _requireValidEventRange(range);\\n    _;\\n  }\\n\\n  constructor() payable {\\n    _disableInitializers();\\n  }\\n\\n  function initialize(\\n    address admin,\\n    address[] calldata operators,\\n    INSUnified rnsUnified,\\n    address payable treasury,\\n    uint256 bidGapRatio\\n  ) external initializer {\\n    _setTreasury(treasury);\\n    _setBidGapRatio(bidGapRatio);\\n    _setupRole(DEFAULT_ADMIN_ROLE, admin);\\n\\n    uint256 length = operators.length;\\n    bytes32 operatorRole = OPERATOR_ROLE;\\n\\n    for (uint256 i; i < length;) {\\n      _setupRole(operatorRole, operators[i]);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    _rnsUnified = rnsUnified;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function bulkRegister(string[] calldata labels) external onlyRole(OPERATOR_ROLE) returns (uint256[] memory ids) {\\n    uint256 length = labels.length;\\n    if (length == 0) revert InvalidArrayLength();\\n    ids = new uint256[](length);\\n    INSUnified rnsUnified = _rnsUnified;\\n    uint256 parentId = LibRNSDomain.RON_ID;\\n    uint64 domainExpiryDuration = DOMAIN_EXPIRY_DURATION;\\n\\n    for (uint256 i; i < length;) {\\n      (, ids[i]) = rnsUnified.mint(parentId, labels[i], address(0x0), address(this), domainExpiryDuration);\\n      _reserved.set(ids[i]);\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function reserved(uint256 id) public view returns (bool) {\\n    return _reserved.get(id);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function createAuctionEvent(EventRange calldata range)\\n    external\\n    onlyRole(DEFAULT_ADMIN_ROLE)\\n    onlyValidEventRange(range)\\n    returns (bytes32 auctionId)\\n  {\\n    auctionId = keccak256(abi.encode(_msgSender(), range));\\n    _auctionRange[auctionId] = range;\\n    emit AuctionEventSet(auctionId, range);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function setAuctionEvent(bytes32 auctionId, EventRange calldata range)\\n    external\\n    onlyRole(DEFAULT_ADMIN_ROLE)\\n    onlyValidEventRange(range)\\n    whenNotStarted(auctionId)\\n  {\\n    _auctionRange[auctionId] = range;\\n    emit AuctionEventSet(auctionId, range);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getAuctionEvent(bytes32 auctionId) public view returns (EventRange memory) {\\n    return _auctionRange[auctionId];\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function listNamesForAuction(bytes32 auctionId, uint256[] calldata ids, uint256[] calldata startingPrices)\\n    external\\n    onlyRole(OPERATOR_ROLE)\\n    whenNotStarted(auctionId)\\n  {\\n    uint256 length = ids.length;\\n    if (length == 0 || length != startingPrices.length) revert InvalidArrayLength();\\n    uint256 id;\\n    bytes32 mAuctionId;\\n    DomainAuction storage sAuction;\\n\\n    for (uint256 i; i < length;) {\\n      id = ids[i];\\n      if (!reserved(id)) revert NameNotReserved();\\n\\n      sAuction = _domainAuction[id];\\n      mAuctionId = sAuction.auctionId;\\n      if (!(mAuctionId == 0 || mAuctionId == auctionId || sAuction.bid.timestamp == 0)) {\\n        revert AlreadyBidding();\\n      }\\n\\n      sAuction.auctionId = auctionId;\\n      sAuction.startingPrice = startingPrices[i];\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    emit LabelsListed(auctionId, ids, startingPrices);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function placeBid(uint256 id) external payable {\\n    DomainAuction memory auction = _domainAuction[id];\\n    EventRange memory range = _auctionRange[auction.auctionId];\\n    uint256 beatPrice = _getBeatPrice(auction, range);\\n\\n    if (!range.isInPeriod()) revert QueryIsNotInPeriod();\\n    if (msg.value < beatPrice) revert InsufficientAmount();\\n    address payable bidder = payable(_msgSender());\\n    // check whether the bidder can receive RON\\n    if (bidder != tx.origin) revert ContractBidderIsForbidden();\\n    address payable prvBidder = auction.bid.bidder;\\n    uint256 prvPrice = auction.bid.price;\\n\\n    Bid storage sBid = _domainAuction[id].bid;\\n    sBid.price = msg.value;\\n    sBid.bidder = bidder;\\n    sBid.timestamp = block.timestamp;\\n    emit BidPlaced(auction.auctionId, id, msg.value, bidder, prvPrice, prvBidder);\\n\\n    // refund for previous bidder\\n    if (prvPrice != 0) RONTransferHelper.safeTransfer(prvBidder, prvPrice);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function bulkClaimBidNames(uint256[] calldata ids) external returns (uint256[] memory claimedAts) {\\n    uint256 id;\\n    uint256 accumulatedRON;\\n    EventRange memory range;\\n    DomainAuction memory auction;\\n    uint256 length = ids.length;\\n    claimedAts = new uint256[](length);\\n    INSUnified rnsUnified = _rnsUnified;\\n    uint64 expiry = uint64(block.timestamp.addWithUpperbound(DOMAIN_EXPIRY_DURATION, MAX_EXPIRY));\\n\\n    for (uint256 i; i < length;) {\\n      id = ids[i];\\n      auction = _domainAuction[id];\\n      range = _auctionRange[auction.auctionId];\\n\\n      if (auction.bid.claimedAt == 0) {\\n        if (!range.isEnded()) revert NotYetEnded();\\n        if (auction.bid.timestamp == 0) revert NoOneBidded();\\n\\n        accumulatedRON += auction.bid.price;\\n        rnsUnified.setExpiry(id, expiry);\\n        rnsUnified.transferFrom(address(this), auction.bid.bidder, id);\\n\\n        _domainAuction[id].bid.claimedAt = claimedAts[i] = block.timestamp;\\n      }\\n\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    RONTransferHelper.safeTransfer(_treasury, accumulatedRON);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getRNSUnified() external view returns (INSUnified) {\\n    return _rnsUnified;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getTreasury() external view returns (address) {\\n    return _treasury;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getBidGapRatio() external view returns (uint256) {\\n    return _bidGapRatio;\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function setTreasury(address payable addr) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setTreasury(addr);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n\\n  function setBidGapRatio(uint256 ratio) external onlyRole(DEFAULT_ADMIN_ROLE) {\\n    _setBidGapRatio(ratio);\\n  }\\n\\n  /**\\n   * @inheritdoc INSAuction\\n   */\\n  function getAuction(uint256 id) public view returns (DomainAuction memory auction, uint256 beatPrice) {\\n    auction = _domainAuction[id];\\n    EventRange memory range = getAuctionEvent(auction.auctionId);\\n    beatPrice = _getBeatPrice(auction, range);\\n  }\\n\\n  /**\\n   * @dev Helper method to set treasury.\\n   *\\n   * Emits an event {TreasuryUpdated}.\\n   */\\n  function _setTreasury(address payable addr) internal {\\n    if (addr == address(0)) revert NullAssignment();\\n    _treasury = addr;\\n    emit TreasuryUpdated(addr);\\n  }\\n\\n  /**\\n   * @dev Helper method to set bid gap ratio.\\n   *\\n   * Emits an event {BidGapRatioUpdated}.\\n   */\\n  function _setBidGapRatio(uint256 ratio) internal {\\n    if (ratio > MAX_PERCENTAGE) revert RatioIsTooLarge();\\n    _bidGapRatio = ratio;\\n    emit BidGapRatioUpdated(ratio);\\n  }\\n\\n  /**\\n   * @dev Helper method to get beat price.\\n   */\\n  function _getBeatPrice(DomainAuction memory auction, EventRange memory range)\\n    internal\\n    view\\n    returns (uint256 beatPrice)\\n  {\\n    beatPrice = Math.max(auction.startingPrice, auction.bid.price);\\n    // Beats price increases if domain is already bided and the event is not yet ended.\\n    if (auction.bid.price != 0 && !range.isEnded()) {\\n      beatPrice += Math.mulDiv(auction.startingPrice, _bidGapRatio, MAX_PERCENTAGE);\\n    }\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure event range is valid.\\n   */\\n  function _requireValidEventRange(EventRange calldata range) internal view {\\n    if (!(range.valid() && range.isNotYetStarted())) revert InvalidEventRange();\\n  }\\n\\n  /**\\n   * @dev Helper method to ensure the auction is not yet started or not created.\\n   */\\n  function _requireNotStarted(bytes32 auctionId) internal view {\\n    if (!_auctionRange[auctionId].isNotYetStarted()) revert EventIsNotCreatedOrAlreadyStarted();\\n  }\\n}\\n\",\"keccak256\":\"0x965d6b3e075fa6a7398c343195416f551fca830c7e4b731554dc73aa8bafa427\",\"license\":\"MIT\"},\"src/interfaces/INSAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { INSUnified } from \\\"./INSUnified.sol\\\";\\nimport { EventRange } from \\\"../libraries/LibEventRange.sol\\\";\\n\\ninterface INSAuction {\\n  error NotYetEnded();\\n  error NoOneBidded();\\n  error NullAssignment();\\n  error AlreadyBidding();\\n  error RatioIsTooLarge();\\n  error NameNotReserved();\\n  error InvalidEventRange();\\n  error QueryIsNotInPeriod();\\n  error InsufficientAmount();\\n  error InvalidArrayLength();\\n  error ContractBidderIsForbidden();\\n  error EventIsNotCreatedOrAlreadyStarted();\\n\\n  struct Bid {\\n    address payable bidder;\\n    uint256 price;\\n    uint256 timestamp;\\n    uint256 claimedAt;\\n  }\\n\\n  struct DomainAuction {\\n    bytes32 auctionId;\\n    uint256 startingPrice;\\n    Bid bid;\\n  }\\n\\n  /// @dev Emitted when an auction is set.\\n  event AuctionEventSet(bytes32 indexed auctionId, EventRange range);\\n  /// @dev Emitted when the labels are listed for auction.\\n  event LabelsListed(bytes32 indexed auctionId, uint256[] ids, uint256[] startingPrices);\\n  /// @dev Emitted when a bid is placed for a name.\\n  event BidPlaced(\\n    bytes32 indexed auctionId,\\n    uint256 indexed id,\\n    uint256 price,\\n    address payable bidder,\\n    uint256 previousPrice,\\n    address previousBidder\\n  );\\n  /// @dev Emitted when the treasury is updated.\\n  event TreasuryUpdated(address indexed addr);\\n  /// @dev Emitted when bid gap ratio is updated.\\n  event BidGapRatioUpdated(uint256 ratio);\\n\\n  /**\\n   * @dev The maximum expiry duration\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev The maximum expiry duration of a domain after transferring to bidder.\\n   */\\n  function MAX_AUCTION_DOMAIN_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the operator role.\\n   */\\n  function OPERATOR_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Max percentage 100%. Values [0; 100_00] reflexes [0; 100%]\\n   */\\n  function MAX_PERCENTAGE() external pure returns (uint256);\\n\\n  /**\\n   * @dev The expiry duration of a domain after transferring to bidder.\\n   */\\n  function DOMAIN_EXPIRY_DURATION() external pure returns (uint64);\\n\\n  /**\\n   * @dev Claims domain names for auction.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract operator.\\n   *\\n   * @param labels The domain names. Eg, ['foo'] for 'foo.ron'\\n   * @return ids The id corresponding for namehash of domain names.\\n   */\\n  function bulkRegister(string[] calldata labels) external returns (uint256[] memory ids);\\n\\n  /**\\n   * @dev Checks whether a domain name is currently reserved for auction or not.\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function reserved(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Creates a new auction to sale with a specific time period.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin.\\n   *\\n   * Emits an event {AuctionEventSet}.\\n   *\\n   * @return auctionId The auction id\\n   * @notice Please use the method `setAuctionNames` to list all the reserved names.\\n   */\\n  function createAuctionEvent(EventRange calldata range) external returns (bytes32 auctionId);\\n\\n  /**\\n   * @dev Updates the auction details.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin.\\n   *\\n   * Emits an event {AuctionEventSet}.\\n   */\\n  function setAuctionEvent(bytes32 auctionId, EventRange calldata range) external;\\n\\n  /**\\n   * @dev Returns the event range of an auction.\\n   */\\n  function getAuctionEvent(bytes32 auctionId) external view returns (EventRange memory);\\n\\n  /**\\n   * @dev Lists reserved names to sale in a specified auction.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract operator.\\n   * - Array length are matched and larger than 0.\\n   * - Only allow to set when the domain is:\\n   *   + Not in any auction.\\n   *   + Or, in the current auction.\\n   *   + Or, this name is not bided.\\n   *\\n   * Emits an event {LabelsListed}.\\n   *\\n   * Note: If the name is already listed, this method replaces with a new input value.\\n   *\\n   * @param ids The namehashes id of domain names. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function listNamesForAuction(bytes32 auctionId, uint256[] calldata ids, uint256[] calldata startingPrices) external;\\n\\n  /**\\n   * @dev Places a bid for a domain name.\\n   *\\n   * Requirements:\\n   * - The name is listed, or the auction is happening.\\n   * - The msg.value is larger than the current bid price or the auction starting price.\\n   *\\n   * Emits an event {BidPlaced}.\\n   *\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function placeBid(uint256 id) external payable;\\n\\n  /**\\n   * @dev Returns the highest bid and address of the bidder.\\n   * @param id The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function getAuction(uint256 id) external view returns (DomainAuction memory, uint256 beatPrice);\\n\\n  /**\\n   * @dev Bulk claims the bid name.\\n   *\\n   * Requirements:\\n   * - Must be called after ended time.\\n   * - The method caller can be anyone.\\n   *\\n   * @param ids The namehash id of domain name. Eg, namehash('foo.ron') for 'foo.ron'\\n   */\\n  function bulkClaimBidNames(uint256[] calldata ids) external returns (uint256[] memory claimedAts);\\n\\n  /**\\n   * @dev Returns the treasury.\\n   */\\n  function getTreasury() external view returns (address);\\n\\n  /**\\n   * @dev Returns the gap ratio between 2 bids with the starting price. Value in range [0;100_00] is 0%-100%.\\n   */\\n  function getBidGapRatio() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the treasury.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin\\n   *\\n   * Emits an event {TreasuryUpdated}.\\n   */\\n  function setTreasury(address payable) external;\\n\\n  /**\\n   * @dev Sets commission ratio. Value in range [0;100_00] is 0%-100%.\\n   *\\n   * Requirements:\\n   * - The method caller must be admin\\n   *\\n   * Emits an event {BidGapRatioUpdated}.\\n   */\\n  function setBidGapRatio(uint256) external;\\n\\n  /**\\n   * @dev Returns RNSUnified contract.\\n   */\\n  function getRNSUnified() external view returns (INSUnified);\\n}\\n\",\"keccak256\":\"0x451e7a2f2e5c1c62e1b14ed011a879639a748e24fde0c1fcf27f691bb7946660\",\"license\":\"MIT\"},\"src/interfaces/INSUnified.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport { IERC721Metadata } from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport { IAccessControlEnumerable } from \\\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\\\";\\nimport { ModifyingIndicator } from \\\"../types/ModifyingIndicator.sol\\\";\\n\\ninterface INSUnified is IAccessControlEnumerable, IERC721Metadata {\\n  /// @dev Error: The provided token id is expired.\\n  error Expired();\\n  /// @dev Error: The provided token id is unexists.\\n  error Unexists();\\n  /// @dev Error: The provided token id's depth level is greater than 3.\\n  error ThirdLevelDomainUnallowed();\\n  /// @dev Error: The provided id expiry is greater than parent id expiry.\\n  error ExceedParentExpiry();\\n  /// @dev Error: The provided name is unavailable for registration.\\n  error Unavailable();\\n  /// @dev Error: The sender lacks the necessary permissions.\\n  error Unauthorized();\\n  /// @dev Error: Missing controller role required for modification.\\n  error MissingControllerRole();\\n  /// @dev Error: Attempting to set an immutable field, which cannot be modified.\\n  error CannotSetImmutableField();\\n  /// @dev Error: Missing protected settler role required for modification.\\n  error MissingProtectedSettlerRole();\\n  /// @dev Error: Attempting to set an expiry time that is not larger than the previous one.\\n  error ExpiryTimeMustBeLargerThanTheOldOne();\\n  /// @dev Error: The provided name must be registered or is in a grace period.\\n  error NameMustBeRegisteredOrInGracePeriod();\\n\\n  /**\\n   * | Fields\\\\Idc | Modifying Indicator |\\n   * | ---------- | ------------------- |\\n   * | depth      | 0b00000001          |\\n   * | parentId   | 0b00000010          |\\n   * | label      | 0b00000100          |\\n   */\\n  struct ImmutableRecord {\\n    // The level-th of a domain.\\n    uint8 depth;\\n    // The node of parent token. Eg, parent node of vip.duke.ron equals to namehash('duke.ron')\\n    uint256 parentId;\\n    // The label of a domain. Eg, label is vip for domain vip.duke.ron\\n    string label;\\n  }\\n\\n  /**\\n   * | Fields\\\\Idc,Roles | Modifying Indicator | Controller | Protected setter | (Parent) Owner/Spender |\\n   * | ---------------- | ------------------- | ---------- | ---------------- | ---------------------- |\\n   * | resolver         | 0b00001000          | x          |                  | x                      |\\n   * | owner            | 0b00010000          | x          |                  | x                      |\\n   * | expiry           | 0b00100000          | x          |                  |                        |\\n   * | protected        | 0b01000000          |            | x                |                        |\\n   * Note: (Parent) Owner/Spender means parent owner or current owner or current token spender.\\n   */\\n  struct MutableRecord {\\n    // The resolver address.\\n    address resolver;\\n    // The record owner. This field must equal to the owner of token.\\n    address owner;\\n    // Expiry timestamp.\\n    uint64 expiry;\\n    // Flag indicating whether the token is protected or not.\\n    bool protected;\\n  }\\n\\n  struct Record {\\n    ImmutableRecord immut;\\n    MutableRecord mut;\\n  }\\n\\n  /// @dev Emitted when a base URI is updated.\\n  event BaseURIUpdated(address indexed operator, string newURI);\\n  /// @dev Emitted when the grace period for all domain is updated.\\n  event GracePeriodUpdated(address indexed operator, uint64 newGracePeriod);\\n\\n  /**\\n   * @dev Emitted when the record of node is updated.\\n   * @param indicator The binary index of updated fields. Eg, 0b10101011 means fields at position 1, 2, 4, 6, 8 (right\\n   * to left) needs to be updated.\\n   * @param record The updated fields.\\n   */\\n  event RecordUpdated(uint256 indexed node, ModifyingIndicator indicator, Record record);\\n\\n  /**\\n   * @dev Returns the controller role.\\n   * @notice Can set all fields {Record.mut} in token record, excepting {Record.mut.protected}.\\n   */\\n  function CONTROLLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the protected setter role.\\n   * @notice Can set field {Record.mut.protected} in token record by using method `bulkSetProtected`.\\n   */\\n  function PROTECTED_SETTLER_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the reservation role.\\n   * @notice Never expire for token owner has this role.\\n   */\\n  function RESERVATION_ROLE() external pure returns (bytes32);\\n\\n  /**\\n   * @dev Returns the max expiry value.\\n   */\\n  function MAX_EXPIRY() external pure returns (uint64);\\n\\n  /**\\n   * @dev Returns the name hash output of a domain.\\n   */\\n  function namehash(string memory domain) external pure returns (bytes32 node);\\n\\n  /**\\n   * @dev Returns true if the specified name is available for registration.\\n   * Note: Only available after passing the grace period.\\n   */\\n  function available(uint256 id) external view returns (bool);\\n\\n  /**\\n   * @dev Returns the grace period in second(s).\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function getGracePeriod() external view returns (uint64);\\n\\n  /**\\n   * @dev Returns the total minted ids.\\n   * Note: Burning id will not affect `totalMinted`.\\n   */\\n  function totalMinted() external view returns (uint256);\\n\\n  /**\\n   * @dev Sets the grace period in second(s).\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Note: This period affects the availability of the domain.\\n   */\\n  function setGracePeriod(uint64) external;\\n\\n  /**\\n   * @dev Sets the base uri.\\n   *\\n   * Requirements:\\n   * - The method caller must be contract owner.\\n   *\\n   */\\n  function setBaseURI(string calldata baseTokenURI) external;\\n\\n  /**\\n   * @dev Mints token for subnode.\\n   *\\n   * Requirements:\\n   * - The token must be available.\\n   * - The method caller must be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   *\\n   * @param parentId The parent node to mint or create subnode.\\n   * @param label The domain label. Eg, label is duke for domain duke.ron.\\n   * @param resolver The resolver address.\\n   * @param owner The token owner.\\n   * @param duration Duration in second(s) to expire. Leave 0 to set as parent.\\n   */\\n  function mint(uint256 parentId, string calldata label, address resolver, address owner, uint64 duration)\\n    external\\n    returns (uint64 expiryTime, uint256 id);\\n\\n  /**\\n   * @dev Returns all record of a domain.\\n   * Reverts if the token is non existent.\\n   */\\n  function getRecord(uint256 id) external view returns (Record memory record);\\n\\n  /**\\n   * @dev Returns the domain name of id.\\n   */\\n  function getDomain(uint256 id) external view returns (string memory domain);\\n\\n  /**\\n   * @dev Returns whether the requester is able to modify the record based on the updated index.\\n   * Note: This method strictly follows the permission of struct {MutableRecord}.\\n   */\\n  function canSetRecord(address requester, uint256 id, ModifyingIndicator indicator)\\n    external\\n    view\\n    returns (bool, bytes4 error);\\n\\n  /**\\n   * @dev Sets record of existing token. Update operation for {Record.mut}.\\n   *\\n   * Requirements:\\n   * - The method caller must have role based on the corresponding `indicator`. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setRecord(uint256 id, ModifyingIndicator indicator, MutableRecord calldata record) external;\\n\\n  /**\\n   * @dev Reclaims ownership. Update operation for {Record.mut.owner}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   * - The method caller should be (parent) owner or approved spender. See struct {MutableRecord}.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function reclaim(uint256 id, address owner) external;\\n\\n  /**\\n   * @dev Renews token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller should have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function renew(uint256 id, uint64 duration) external returns (uint64 expiry);\\n\\n  /**\\n   * @dev Sets expiry time for a token. Update operation for {Record.mut.expiry}.\\n   *\\n   * Requirements:\\n   * - The method caller must have controller role.\\n   *\\n   * Emits an event {RecordUpdated}.\\n   */\\n  function setExpiry(uint256 id, uint64 expiry) external;\\n\\n  /**\\n   * @dev Sets the protected status of a list of ids. Update operation for {Record.mut.protected}.\\n   *\\n   * Requirements:\\n   * - The method caller must have protected setter role.\\n   *\\n   * Emits events {RecordUpdated}.\\n   */\\n  function bulkSetProtected(uint256[] calldata ids, bool protected) external;\\n}\\n\",\"keccak256\":\"0x98e2e77490d7fd6d87a8e9800223bb2f60a33e7338e2f65f64a3aed4737c035c\",\"license\":\"MIT\"},\"src/libraries/LibEventRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nstruct EventRange {\\n  uint256 startedAt;\\n  uint256 endedAt;\\n}\\n\\nlibrary LibEventRange {\\n  /**\\n   * @dev Checks whether the event range is valid.\\n   */\\n  function valid(EventRange calldata range) internal pure returns (bool) {\\n    return range.startedAt <= range.endedAt;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current range is not yet started.\\n   */\\n  function isNotYetStarted(EventRange memory range) internal view returns (bool) {\\n    return block.timestamp < range.startedAt;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current range is ended or not.\\n   */\\n  function isEnded(EventRange memory range) internal view returns (bool) {\\n    return range.endedAt <= block.timestamp;\\n  }\\n\\n  /**\\n   * @dev Returns whether the current block is in period.\\n   */\\n  function isInPeriod(EventRange memory range) internal view returns (bool) {\\n    return range.startedAt <= block.timestamp && block.timestamp < range.endedAt;\\n  }\\n}\\n\",\"keccak256\":\"0x95bf015c4245919cbcbcd810dd597fdb23eb4e58b62df8ef74b1c8c60a969bea\",\"license\":\"MIT\"},\"src/libraries/LibRNSDomain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nlibrary LibRNSDomain {\\n  /// @dev Value equals to namehash('ron')\\n  uint256 internal constant RON_ID = 0xba69923fa107dbf5a25a073a10b7c9216ae39fbadc95dc891d460d9ae315d688;\\n  /// @dev Value equals to namehash('addr.reverse')\\n  uint256 internal constant ADDR_REVERSE_ID = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n  /**\\n   * @dev Calculate the corresponding id given parentId and label.\\n   */\\n  function toId(uint256 parentId, string memory label) internal pure returns (uint256 id) {\\n    assembly (\\\"memory-safe\\\") {\\n      mstore(0x0, parentId)\\n      mstore(0x20, keccak256(add(label, 32), mload(label)))\\n      id := keccak256(0x0, 64)\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculates the hash of the label.\\n   */\\n  function hashLabel(string memory label) internal pure returns (bytes32 hashed) {\\n    assembly (\\\"memory-safe\\\") {\\n      hashed := keccak256(add(label, 32), mload(label))\\n    }\\n  }\\n\\n  /**\\n   * @dev Calculate the RNS namehash of a str.\\n   */\\n  function namehash(string memory str) internal pure returns (bytes32 hashed) {\\n    // notice: this method is case-sensitive, ensure the string is lowercased before calling this method\\n    assembly (\\\"memory-safe\\\") {\\n      // load str length\\n      let len := mload(str)\\n      // returns bytes32(0x0) if length is zero\\n      if iszero(iszero(len)) {\\n        let hashedLen\\n        // compute pointer to str[0]\\n        let head := add(str, 32)\\n        // compute pointer to str[length - 1]\\n        let tail := add(head, sub(len, 1))\\n        // cleanup dirty bytes if contains any\\n        mstore(0x0, 0)\\n        // loop backwards from `tail` to `head`\\n        for { let i := tail } iszero(lt(i, head)) { i := sub(i, 1) } {\\n          // check if `i` is `head`\\n          let isHead := eq(i, head)\\n          // check if `str[i-1]` is \\\".\\\"\\n          // `0x2e` == bytes1(\\\".\\\")\\n          let isDotNext := eq(shr(248, mload(sub(i, 1))), 0x2e)\\n          if or(isHead, isDotNext) {\\n            // size = distance(length, i) - hashedLength + 1\\n            let size := add(sub(sub(tail, i), hashedLen), 1)\\n            mstore(0x20, keccak256(i, size))\\n            mstore(0x0, keccak256(0x0, 64))\\n            // skip \\\".\\\" thereby + 1\\n            hashedLen := add(hashedLen, add(size, 1))\\n          }\\n        }\\n      }\\n      hashed := mload(0x0)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x715029b2b420c6ec00bc1f939b837acf45d247fde8426089575b0e7b5e84518b\",\"license\":\"MIT\"},\"src/libraries/math/LibSafeRange.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary LibSafeRange {\\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n    unchecked {\\n      c = a + b;\\n      if (c < a) return type(uint256).max;\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns value of a + b; in case result is larger than upperbound, upperbound is returned.\\n   */\\n  function addWithUpperbound(uint256 a, uint256 b, uint256 ceil) internal pure returns (uint256 c) {\\n    if (a > ceil || b > ceil) return ceil;\\n    c = add(a, b);\\n    if (c > ceil) return ceil;\\n  }\\n}\\n\",\"keccak256\":\"0x12cf5f592a2d80b9c1b0ea11b8fe2b3ed42fc6d62303ba667edc56464baa8810\",\"license\":\"MIT\"},\"src/libraries/transfers/RONTransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { Strings } from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\n/**\\n * @title RONTransferHelper\\n */\\nlibrary RONTransferHelper {\\n  using Strings for *;\\n\\n  /**\\n   * @dev Transfers RON and wraps result for the method caller to a recipient.\\n   */\\n  function safeTransfer(address payable _to, uint256 _value) internal {\\n    bool _success = send(_to, _value);\\n    if (!_success) {\\n      revert(\\n        string.concat(\\\"TransferHelper: could not transfer RON to \\\", _to.toHexString(), \\\" value \\\", _value.toHexString())\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @dev Returns whether the call was success.\\n   * Note: this function should use with the `ReentrancyGuard`.\\n   */\\n  function send(address payable _to, uint256 _value) internal returns (bool _success) {\\n    (_success,) = _to.call{ value: _value }(new bytes(0));\\n  }\\n}\\n\",\"keccak256\":\"0x733e60374ee0a33d0da2ee24976b893ca6b6d9764243b175e1ac8025240394da\",\"license\":\"MIT\"},\"src/types/ModifyingIndicator.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ntype ModifyingIndicator is uint256;\\n\\nusing { hasAny } for ModifyingIndicator global;\\nusing { or as | } for ModifyingIndicator global;\\nusing { and as & } for ModifyingIndicator global;\\nusing { eq as == } for ModifyingIndicator global;\\nusing { not as ~ } for ModifyingIndicator global;\\nusing { xor as ^ } for ModifyingIndicator global;\\nusing { neq as != } for ModifyingIndicator global;\\n\\n/// @dev Indicator for modifying immutable fields: Depth, ParentId, Label. See struct {INSUnified.ImmutableRecord}.\\nModifyingIndicator constant IMMUTABLE_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x7);\\n\\n/// @dev Indicator for modifying user fields: Resolver, Owner. See struct {INSUnified.MutableRecord}.\\nModifyingIndicator constant USER_FIELDS_INDICATOR = ModifyingIndicator.wrap(0x18);\\n\\n/// @dev Indicator when modifying all of the fields in {ModifyingField}.\\nModifyingIndicator constant ALL_FIELDS_INDICATOR = ModifyingIndicator.wrap(type(uint256).max);\\n\\nfunction eq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return ModifyingIndicator.unwrap(self) == ModifyingIndicator.unwrap(other);\\n}\\n\\nfunction neq(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return !eq(self, other);\\n}\\n\\nfunction xor(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) ^ ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction not(ModifyingIndicator self) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(~ModifyingIndicator.unwrap(self));\\n}\\n\\nfunction or(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) | ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction and(ModifyingIndicator self, ModifyingIndicator other) pure returns (ModifyingIndicator) {\\n  return ModifyingIndicator.wrap(ModifyingIndicator.unwrap(self) & ModifyingIndicator.unwrap(other));\\n}\\n\\nfunction hasAny(ModifyingIndicator self, ModifyingIndicator other) pure returns (bool) {\\n  return self & other != ModifyingIndicator.wrap(0);\\n}\\n\",\"keccak256\":\"0x2e42fbba358c470ff6b57268367d248f0e2fcf8d7142d762688f7aef5efae7ee\",\"license\":\"MIT\"}},\"version\":1}",
  "nonce": 262,
  "numDeployments": 1,
  "storageLayout": {
    "storage": [
      {
        "astId": 50086,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 50089,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 48559,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)48554_storage)"
      },
      {
        "astId": 48869,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_roleMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(AddressSet)54438_storage)"
      },
      {
        "astId": 60651,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "____gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 60655,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_rnsUnified",
        "offset": 0,
        "slot": "53",
        "type": "t_contract(INSUnified)67046"
      },
      {
        "astId": 60661,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_auctionRange",
        "offset": 0,
        "slot": "54",
        "type": "t_mapping(t_bytes32,t_struct(EventRange)67966_storage)"
      },
      {
        "astId": 60667,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_domainAuction",
        "offset": 0,
        "slot": "55",
        "type": "t_mapping(t_uint256,t_struct(DomainAuction)66210_storage)"
      },
      {
        "astId": 60670,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_treasury",
        "offset": 0,
        "slot": "56",
        "type": "t_address_payable"
      },
      {
        "astId": 60673,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_bidGapRatio",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 60677,
        "contract": "src/RNSAuction.sol:RNSAuction",
        "label": "_reserved",
        "offset": 0,
        "slot": "58",
        "type": "t_struct(BitMap)53982_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(INSUnified)67046": {
        "encoding": "inplace",
        "label": "contract INSUnified",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(AddressSet)54438_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)54438_storage"
      },
      "t_mapping(t_bytes32,t_struct(EventRange)67966_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct EventRange)",
        "numberOfBytes": "32",
        "value": "t_struct(EventRange)67966_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)48554_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)48554_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(DomainAuction)66210_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct INSAuction.DomainAuction)",
        "numberOfBytes": "32",
        "value": "t_struct(DomainAuction)66210_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)54438_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 54437,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)54123_storage"
          }
        ]
      },
      "t_struct(Bid)66202_storage": {
        "encoding": "inplace",
        "label": "struct INSAuction.Bid",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 66195,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 66197,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 66199,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 66201,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "claimedAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(BitMap)53982_storage": {
        "encoding": "inplace",
        "label": "struct BitMaps.BitMap",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 53981,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_data",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_uint256)"
          }
        ]
      },
      "t_struct(DomainAuction)66210_storage": {
        "encoding": "inplace",
        "label": "struct INSAuction.DomainAuction",
        "numberOfBytes": "192",
        "members": [
          {
            "astId": 66204,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "auctionId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 66206,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "startingPrice",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 66209,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "bid",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Bid)66202_storage"
          }
        ]
      },
      "t_struct(EventRange)67966_storage": {
        "encoding": "inplace",
        "label": "struct EventRange",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 67963,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "startedAt",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 67965,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "endedAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(RoleData)48554_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 48551,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 48553,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_struct(Set)54123_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 54118,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 54122,
            "contract": "src/RNSAuction.sol:RNSAuction",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "timestamp": 1699254558,
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "createAuctionEvent((uint256,uint256))": {
        "notice": "Please use the method `setAuctionNames` to list all the reserved names."
      }
    }
  }
}